{"ast":null,"code":"import { Key } from '../../types.js';\nimport React$1, { useState, useRef, useEffect, useCallback, createElement } from 'react';\nimport { useFeatures } from '../../utilities/features/hooks.js';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { classNames, variationName } from '../../utilities/css.js';\nimport { useIsAfterInitialMount as useIsAfterInitialMount$1 } from '../../utilities/use-is-after-initial-mount.js';\nimport { CircleCancelMinor } from '@shopify/polaris-icons';\nimport { Icon as Icon$1 } from '../Icon/Icon.js';\nimport { VisuallyHidden as VisuallyHidden$1 } from '../VisuallyHidden/VisuallyHidden.js';\nimport { labelID } from '../Label/Label.js';\nimport { Labelled as Labelled$1, helpTextID } from '../Labelled/Labelled.js';\nimport { Connected as Connected$1 } from '../Connected/Connected.js';\nimport styles from './TextField.scss.js';\nimport { Resizer as Resizer$1 } from './components/Resizer/Resizer.js';\nimport { Spinner as Spinner$1 } from './components/Spinner/Spinner.js';\n\nvar _ref = /*#__PURE__*/React$1.createElement(Icon$1, {\n  source: CircleCancelMinor,\n  color: \"inkLightest\"\n});\n\nfunction TextField({\n  prefix,\n  suffix,\n  placeholder,\n  value,\n  helpText,\n  label,\n  labelAction,\n  labelHidden,\n  disabled,\n  clearButton,\n  readOnly,\n  autoFocus,\n  focused,\n  multiline,\n  error,\n  connectedRight,\n  connectedLeft,\n  type,\n  name,\n  id: idProp,\n  role,\n  step,\n  autoComplete,\n  max,\n  maxLength,\n  min,\n  minLength,\n  pattern,\n  inputMode,\n  spellCheck,\n  ariaOwns,\n  ariaControls,\n  ariaExpanded,\n  ariaActiveDescendant,\n  ariaAutocomplete,\n  showCharacterCount,\n  align,\n  onClearButtonClick,\n  onChange,\n  onFocus,\n  onBlur\n}) {\n  const i18n = useI18n();\n  const [height, setHeight] = useState(null);\n  const [focus, setFocus] = useState(Boolean(focused));\n  const isAfterInitial = useIsAfterInitialMount$1();\n  const id = useUniqueId('TextField', idProp);\n  const inputRef = useRef(null);\n  const prefixRef = useRef(null);\n  const suffixRef = useRef(null);\n  const buttonPressTimer = useRef();\n  useEffect(() => {\n    const input = inputRef.current;\n    if (!input || focused === undefined) return;\n    focused ? input.focus() : input.blur();\n  }, [focused]);\n  const {\n    newDesignLanguage\n  } = useFeatures(); // Use a typeof check here as Typescript mostly protects us from non-stringy\n  // values but overzealous usage of `any` in consuming apps means people have\n  // been known to pass a number in, so make it clear that doesn't work.\n\n  const normalizedValue = typeof value === 'string' ? value : '';\n  const normalizedStep = step != null ? step : 1;\n  const normalizedMax = max != null ? max : Infinity;\n  const normalizedMin = min != null ? min : -Infinity;\n  const className = classNames(styles.TextField, Boolean(normalizedValue) && styles.hasValue, disabled && styles.disabled, readOnly && styles.readOnly, error && styles.error, multiline && styles.multiline, focus && styles.focus, newDesignLanguage && styles.newDesignLanguage);\n  const inputType = type === 'currency' ? 'text' : type;\n  const prefixMarkup = prefix ? /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Prefix,\n    id: `${id}Prefix`,\n    ref: prefixRef\n  }, prefix) : null;\n  const suffixMarkup = suffix ? /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Suffix,\n    id: `${id}Suffix`,\n    ref: suffixRef\n  }, suffix) : null;\n  let characterCountMarkup = null;\n\n  if (showCharacterCount) {\n    const characterCount = normalizedValue.length;\n    const characterCountLabel = maxLength ? i18n.translate('Polaris.TextField.characterCountWithMaxLength', {\n      count: characterCount,\n      limit: maxLength\n    }) : i18n.translate('Polaris.TextField.characterCount', {\n      count: characterCount\n    });\n    const characterCountClassName = classNames(styles.CharacterCount, multiline && styles.AlignFieldBottom);\n    const characterCountText = !maxLength ? characterCount : `${characterCount}/${maxLength}`;\n    characterCountMarkup = /*#__PURE__*/React$1.createElement(\"div\", {\n      id: `${id}CharacterCounter`,\n      className: characterCountClassName,\n      \"aria-label\": characterCountLabel,\n      \"aria-live\": focus ? 'polite' : 'off',\n      \"aria-atomic\": \"true\"\n    }, characterCountText);\n  }\n\n  const clearButtonMarkup = clearButton && normalizedValue !== '' ? /*#__PURE__*/React$1.createElement(\"button\", {\n    type: \"button\",\n    className: styles.ClearButton,\n    onClick: handleClearButtonPress,\n    disabled: disabled\n  }, /*#__PURE__*/React$1.createElement(VisuallyHidden$1, null, i18n.translate('Polaris.Common.clear')), _ref) : null;\n  const handleNumberChange = useCallback(steps => {\n    if (onChange == null) {\n      return;\n    } // Returns the length of decimal places in a number\n\n\n    const dpl = num => (num.toString().split('.')[1] || []).length;\n\n    const numericValue = value ? parseFloat(value) : 0;\n\n    if (isNaN(numericValue)) {\n      return;\n    } // Making sure the new value has the same length of decimal places as the\n    // step / value has.\n\n\n    const decimalPlaces = Math.max(dpl(numericValue), dpl(normalizedStep));\n    const newValue = Math.min(Number(normalizedMax), Math.max(numericValue + steps * normalizedStep, Number(normalizedMin)));\n    onChange(String(newValue.toFixed(decimalPlaces)), id);\n  }, [id, normalizedMax, normalizedMin, onChange, normalizedStep, value]);\n  const handleButtonRelease = useCallback(() => {\n    clearTimeout(buttonPressTimer.current);\n  }, []);\n  const handleButtonPress = useCallback(onChange => {\n    const minInterval = 50;\n    const decrementBy = 10;\n    let interval = 200;\n\n    const onChangeInterval = () => {\n      if (interval > minInterval) interval -= decrementBy;\n      onChange(0);\n      buttonPressTimer.current = window.setTimeout(onChangeInterval, interval);\n    };\n\n    buttonPressTimer.current = window.setTimeout(onChangeInterval, interval);\n    document.addEventListener('mouseup', handleButtonRelease, {\n      once: true\n    });\n  }, [handleButtonRelease]);\n  const spinnerMarkup = type === 'number' && step !== 0 && !disabled && !readOnly ? /*#__PURE__*/React$1.createElement(Spinner$1, {\n    onChange: handleNumberChange,\n    onMouseDown: handleButtonPress,\n    onMouseUp: handleButtonRelease\n  }) : null;\n  const style = multiline && height ? {\n    height\n  } : null;\n  const handleExpandingResize = useCallback(height => {\n    setHeight(height);\n  }, []);\n  const resizer = multiline && isAfterInitial ? /*#__PURE__*/React$1.createElement(Resizer$1, {\n    contents: normalizedValue || placeholder,\n    currentHeight: height,\n    minimumLines: typeof multiline === 'number' ? multiline : 1,\n    onHeightChange: handleExpandingResize\n  }) : null;\n  const describedBy = [];\n\n  if (error) {\n    describedBy.push(`${id}Error`);\n  }\n\n  if (helpText) {\n    describedBy.push(helpTextID(id));\n  }\n\n  if (showCharacterCount) {\n    describedBy.push(`${id}CharacterCounter`);\n  }\n\n  const labelledBy = [];\n\n  if (prefix) {\n    labelledBy.push(`${id}Prefix`);\n  }\n\n  if (suffix) {\n    labelledBy.push(`${id}Suffix`);\n  }\n\n  labelledBy.unshift(labelID(id));\n  const inputClassName = classNames(styles.Input, align && styles[variationName('Input-align', align)], suffix && styles['Input-suffixed'], clearButton && styles['Input-hasClearButton']);\n  const input = /*#__PURE__*/createElement(multiline ? 'textarea' : 'input', {\n    name,\n    id,\n    disabled,\n    readOnly,\n    role,\n    autoFocus,\n    value: normalizedValue,\n    placeholder,\n    onFocus,\n    onBlur,\n    onKeyPress: handleKeyPress,\n    style,\n    autoComplete: normalizeAutoComplete(autoComplete),\n    className: inputClassName,\n    onChange: handleChange,\n    ref: inputRef,\n    min,\n    max,\n    step,\n    minLength,\n    maxLength,\n    spellCheck,\n    pattern,\n    inputMode,\n    type: inputType,\n    'aria-describedby': describedBy.length ? describedBy.join(' ') : undefined,\n    'aria-labelledby': labelledBy.join(' '),\n    'aria-invalid': Boolean(error),\n    'aria-owns': ariaOwns,\n    'aria-activedescendant': ariaActiveDescendant,\n    'aria-autocomplete': ariaAutocomplete,\n    'aria-controls': ariaControls,\n    'aria-multiline': normalizeAriaMultiline(multiline),\n    'aria-expanded': ariaExpanded\n  });\n  const backdropClassName = classNames(styles.Backdrop, newDesignLanguage && connectedLeft && styles['Backdrop-connectedLeft'], newDesignLanguage && connectedRight && styles['Backdrop-connectedRight']);\n  return /*#__PURE__*/React$1.createElement(Labelled$1, {\n    label: label,\n    id: id,\n    error: error,\n    action: labelAction,\n    labelHidden: labelHidden,\n    helpText: helpText\n  }, /*#__PURE__*/React$1.createElement(Connected$1, {\n    left: connectedLeft,\n    right: connectedRight\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: className,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onClick: handleClick\n  }, prefixMarkup, input, suffixMarkup, characterCountMarkup, clearButtonMarkup, spinnerMarkup, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: backdropClassName\n  }), resizer)));\n\n  function handleClearButtonPress() {\n    onClearButtonClick && onClearButtonClick(id);\n  }\n\n  function handleKeyPress(event) {\n    const {\n      key,\n      which\n    } = event;\n    const numbersSpec = /[\\d.eE+-]$/;\n\n    if (type !== 'number' || which === Key.Enter || numbersSpec.test(key)) {\n      return;\n    }\n\n    event.preventDefault();\n  }\n\n  function containsAffix(target) {\n    return target instanceof HTMLElement && (prefixRef.current && prefixRef.current.contains(target) || suffixRef.current && suffixRef.current.contains(target));\n  }\n\n  function handleChange(event) {\n    onChange && onChange(event.currentTarget.value, id);\n  }\n\n  function handleFocus({\n    target\n  }) {\n    if (containsAffix(target)) {\n      return;\n    }\n\n    setFocus(true);\n  }\n\n  function handleBlur() {\n    setFocus(false);\n  }\n\n  function handleClick({\n    target\n  }) {\n    if (containsAffix(target)) {\n      return;\n    }\n\n    inputRef.current && inputRef.current.focus();\n  }\n}\n\nfunction normalizeAutoComplete(autoComplete) {\n  if (autoComplete === true) {\n    return 'on';\n  } else if (autoComplete === false) {\n    return 'off';\n  } else {\n    return autoComplete;\n  }\n}\n\nfunction normalizeAriaMultiline(multiline) {\n  switch (typeof multiline) {\n    case 'undefined':\n      return false;\n\n    case 'boolean':\n      return multiline;\n\n    case 'number':\n      return Boolean(multiline > 0);\n  }\n}\n\nexport { TextField };","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/polaris/dist/esm/components/TextField/TextField.js"],"names":["Key","React$1","useState","useRef","useEffect","useCallback","createElement","useFeatures","useUniqueId","useI18n","classNames","variationName","useIsAfterInitialMount","useIsAfterInitialMount$1","CircleCancelMinor","Icon","Icon$1","VisuallyHidden","VisuallyHidden$1","labelID","Labelled","Labelled$1","helpTextID","Connected","Connected$1","styles","Resizer","Resizer$1","Spinner","Spinner$1","_ref","source","color","TextField","prefix","suffix","placeholder","value","helpText","label","labelAction","labelHidden","disabled","clearButton","readOnly","autoFocus","focused","multiline","error","connectedRight","connectedLeft","type","name","id","idProp","role","step","autoComplete","max","maxLength","min","minLength","pattern","inputMode","spellCheck","ariaOwns","ariaControls","ariaExpanded","ariaActiveDescendant","ariaAutocomplete","showCharacterCount","align","onClearButtonClick","onChange","onFocus","onBlur","i18n","height","setHeight","focus","setFocus","Boolean","isAfterInitial","inputRef","prefixRef","suffixRef","buttonPressTimer","input","current","undefined","blur","newDesignLanguage","normalizedValue","normalizedStep","normalizedMax","Infinity","normalizedMin","className","hasValue","inputType","prefixMarkup","Prefix","ref","suffixMarkup","Suffix","characterCountMarkup","characterCount","length","characterCountLabel","translate","count","limit","characterCountClassName","CharacterCount","AlignFieldBottom","characterCountText","clearButtonMarkup","ClearButton","onClick","handleClearButtonPress","handleNumberChange","steps","dpl","num","toString","split","numericValue","parseFloat","isNaN","decimalPlaces","Math","newValue","Number","String","toFixed","handleButtonRelease","clearTimeout","handleButtonPress","minInterval","decrementBy","interval","onChangeInterval","window","setTimeout","document","addEventListener","once","spinnerMarkup","onMouseDown","onMouseUp","style","handleExpandingResize","resizer","contents","currentHeight","minimumLines","onHeightChange","describedBy","push","labelledBy","unshift","inputClassName","Input","onKeyPress","handleKeyPress","normalizeAutoComplete","handleChange","join","normalizeAriaMultiline","backdropClassName","Backdrop","action","left","right","handleFocus","handleBlur","handleClick","event","key","which","numbersSpec","Enter","test","preventDefault","containsAffix","target","HTMLElement","contains","currentTarget"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,OAAP,IAAkBC,QAAlB,EAA4BC,MAA5B,EAAoCC,SAApC,EAA+CC,WAA/C,EAA4DC,aAA5D,QAAiF,OAAjF;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,wBAA1C;AACA,SAASC,sBAAsB,IAAIC,wBAAnC,QAAmE,+CAAnE;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,SAASC,IAAI,IAAIC,MAAjB,QAA+B,iBAA/B;AACA,SAASC,cAAc,IAAIC,gBAA3B,QAAmD,qCAAnD;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,QAAQ,IAAIC,UAArB,EAAiCC,UAAjC,QAAmD,yBAAnD;AACA,SAASC,SAAS,IAAIC,WAAtB,QAAyC,2BAAzC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,OAAO,IAAIC,SAApB,QAAqC,iCAArC;AACA,SAASC,OAAO,IAAIC,SAApB,QAAqC,iCAArC;;AAEA,IAAIC,IAAI,GAAG,aAAa7B,OAAO,CAACK,aAAR,CAAsBU,MAAtB,EAA8B;AACpDe,EAAAA,MAAM,EAAEjB,iBAD4C;AAEpDkB,EAAAA,KAAK,EAAE;AAF6C,CAA9B,CAAxB;;AAKA,SAASC,SAAT,CAAmB;AACjBC,EAAAA,MADiB;AAEjBC,EAAAA,MAFiB;AAGjBC,EAAAA,WAHiB;AAIjBC,EAAAA,KAJiB;AAKjBC,EAAAA,QALiB;AAMjBC,EAAAA,KANiB;AAOjBC,EAAAA,WAPiB;AAQjBC,EAAAA,WARiB;AASjBC,EAAAA,QATiB;AAUjBC,EAAAA,WAViB;AAWjBC,EAAAA,QAXiB;AAYjBC,EAAAA,SAZiB;AAajBC,EAAAA,OAbiB;AAcjBC,EAAAA,SAdiB;AAejBC,EAAAA,KAfiB;AAgBjBC,EAAAA,cAhBiB;AAiBjBC,EAAAA,aAjBiB;AAkBjBC,EAAAA,IAlBiB;AAmBjBC,EAAAA,IAnBiB;AAoBjBC,EAAAA,EAAE,EAAEC,MApBa;AAqBjBC,EAAAA,IArBiB;AAsBjBC,EAAAA,IAtBiB;AAuBjBC,EAAAA,YAvBiB;AAwBjBC,EAAAA,GAxBiB;AAyBjBC,EAAAA,SAzBiB;AA0BjBC,EAAAA,GA1BiB;AA2BjBC,EAAAA,SA3BiB;AA4BjBC,EAAAA,OA5BiB;AA6BjBC,EAAAA,SA7BiB;AA8BjBC,EAAAA,UA9BiB;AA+BjBC,EAAAA,QA/BiB;AAgCjBC,EAAAA,YAhCiB;AAiCjBC,EAAAA,YAjCiB;AAkCjBC,EAAAA,oBAlCiB;AAmCjBC,EAAAA,gBAnCiB;AAoCjBC,EAAAA,kBApCiB;AAqCjBC,EAAAA,KArCiB;AAsCjBC,EAAAA,kBAtCiB;AAuCjBC,EAAAA,QAvCiB;AAwCjBC,EAAAA,OAxCiB;AAyCjBC,EAAAA;AAzCiB,CAAnB,EA0CG;AACD,QAAMC,IAAI,GAAGnE,OAAO,EAApB;AACA,QAAM,CAACoE,MAAD,EAASC,SAAT,IAAsB5E,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAAC6E,KAAD,EAAQC,QAAR,IAAoB9E,QAAQ,CAAC+E,OAAO,CAACnC,OAAD,CAAR,CAAlC;AACA,QAAMoC,cAAc,GAAGrE,wBAAwB,EAA/C;AACA,QAAMwC,EAAE,GAAG7C,WAAW,CAAC,WAAD,EAAc8C,MAAd,CAAtB;AACA,QAAM6B,QAAQ,GAAGhF,MAAM,CAAC,IAAD,CAAvB;AACA,QAAMiF,SAAS,GAAGjF,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMkF,SAAS,GAAGlF,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMmF,gBAAgB,GAAGnF,MAAM,EAA/B;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmF,KAAK,GAAGJ,QAAQ,CAACK,OAAvB;AACA,QAAI,CAACD,KAAD,IAAUzC,OAAO,KAAK2C,SAA1B,EAAqC;AACrC3C,IAAAA,OAAO,GAAGyC,KAAK,CAACR,KAAN,EAAH,GAAmBQ,KAAK,CAACG,IAAN,EAA1B;AACD,GAJQ,EAIN,CAAC5C,OAAD,CAJM,CAAT;AAKA,QAAM;AACJ6C,IAAAA;AADI,MAEFpF,WAAW,EAFf,CAfC,CAiBkB;AACnB;AACA;;AAEA,QAAMqF,eAAe,GAAG,OAAOvD,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoC,EAA5D;AACA,QAAMwD,cAAc,GAAGrC,IAAI,IAAI,IAAR,GAAeA,IAAf,GAAsB,CAA7C;AACA,QAAMsC,aAAa,GAAGpC,GAAG,IAAI,IAAP,GAAcA,GAAd,GAAoBqC,QAA1C;AACA,QAAMC,aAAa,GAAGpC,GAAG,IAAI,IAAP,GAAcA,GAAd,GAAoB,CAACmC,QAA3C;AACA,QAAME,SAAS,GAAGvF,UAAU,CAACe,MAAM,CAACQ,SAAR,EAAmBgD,OAAO,CAACW,eAAD,CAAP,IAA4BnE,MAAM,CAACyE,QAAtD,EAAgExD,QAAQ,IAAIjB,MAAM,CAACiB,QAAnF,EAA6FE,QAAQ,IAAInB,MAAM,CAACmB,QAAhH,EAA0HI,KAAK,IAAIvB,MAAM,CAACuB,KAA1I,EAAiJD,SAAS,IAAItB,MAAM,CAACsB,SAArK,EAAgLgC,KAAK,IAAItD,MAAM,CAACsD,KAAhM,EAAuMY,iBAAiB,IAAIlE,MAAM,CAACkE,iBAAnO,CAA5B;AACA,QAAMQ,SAAS,GAAGhD,IAAI,KAAK,UAAT,GAAsB,MAAtB,GAA+BA,IAAjD;AACA,QAAMiD,YAAY,GAAGlE,MAAM,GAAG,aAAajC,OAAO,CAACK,aAAR,CAAsB,KAAtB,EAA6B;AACtE2F,IAAAA,SAAS,EAAExE,MAAM,CAAC4E,MADoD;AAEtEhD,IAAAA,EAAE,EAAG,GAAEA,EAAG,QAF4D;AAGtEiD,IAAAA,GAAG,EAAElB;AAHiE,GAA7B,EAIxClD,MAJwC,CAAhB,GAId,IAJb;AAKA,QAAMqE,YAAY,GAAGpE,MAAM,GAAG,aAAalC,OAAO,CAACK,aAAR,CAAsB,KAAtB,EAA6B;AACtE2F,IAAAA,SAAS,EAAExE,MAAM,CAAC+E,MADoD;AAEtEnD,IAAAA,EAAE,EAAG,GAAEA,EAAG,QAF4D;AAGtEiD,IAAAA,GAAG,EAAEjB;AAHiE,GAA7B,EAIxClD,MAJwC,CAAhB,GAId,IAJb;AAKA,MAAIsE,oBAAoB,GAAG,IAA3B;;AAEA,MAAInC,kBAAJ,EAAwB;AACtB,UAAMoC,cAAc,GAAGd,eAAe,CAACe,MAAvC;AACA,UAAMC,mBAAmB,GAAGjD,SAAS,GAAGiB,IAAI,CAACiC,SAAL,CAAe,+CAAf,EAAgE;AACtGC,MAAAA,KAAK,EAAEJ,cAD+F;AAEtGK,MAAAA,KAAK,EAAEpD;AAF+F,KAAhE,CAAH,GAGhCiB,IAAI,CAACiC,SAAL,CAAe,kCAAf,EAAmD;AACtDC,MAAAA,KAAK,EAAEJ;AAD+C,KAAnD,CAHL;AAMA,UAAMM,uBAAuB,GAAGtG,UAAU,CAACe,MAAM,CAACwF,cAAR,EAAwBlE,SAAS,IAAItB,MAAM,CAACyF,gBAA5C,CAA1C;AACA,UAAMC,kBAAkB,GAAG,CAACxD,SAAD,GAAa+C,cAAb,GAA+B,GAAEA,cAAe,IAAG/C,SAAU,EAAxF;AACA8C,IAAAA,oBAAoB,GAAG,aAAaxG,OAAO,CAACK,aAAR,CAAsB,KAAtB,EAA6B;AAC/D+C,MAAAA,EAAE,EAAG,GAAEA,EAAG,kBADqD;AAE/D4C,MAAAA,SAAS,EAAEe,uBAFoD;AAG/D,oBAAcJ,mBAHiD;AAI/D,mBAAa7B,KAAK,GAAG,QAAH,GAAc,KAJ+B;AAK/D,qBAAe;AALgD,KAA7B,EAMjCoC,kBANiC,CAApC;AAOD;;AAED,QAAMC,iBAAiB,GAAGzE,WAAW,IAAIiD,eAAe,KAAK,EAAnC,GAAwC,aAAa3F,OAAO,CAACK,aAAR,CAAsB,QAAtB,EAAgC;AAC7G6C,IAAAA,IAAI,EAAE,QADuG;AAE7G8C,IAAAA,SAAS,EAAExE,MAAM,CAAC4F,WAF2F;AAG7GC,IAAAA,OAAO,EAAEC,sBAHoG;AAI7G7E,IAAAA,QAAQ,EAAEA;AAJmG,GAAhC,EAK5E,aAAazC,OAAO,CAACK,aAAR,CAAsBY,gBAAtB,EAAwC,IAAxC,EAA8C0D,IAAI,CAACiC,SAAL,CAAe,sBAAf,CAA9C,CAL+D,EAKwB/E,IALxB,CAArD,GAKqF,IAL/G;AAMA,QAAM0F,kBAAkB,GAAGnH,WAAW,CAACoH,KAAK,IAAI;AAC9C,QAAIhD,QAAQ,IAAI,IAAhB,EAAsB;AACpB;AACD,KAH6C,CAG5C;;;AAGF,UAAMiD,GAAG,GAAGC,GAAG,IAAI,CAACA,GAAG,CAACC,QAAJ,GAAeC,KAAf,CAAqB,GAArB,EAA0B,CAA1B,KAAgC,EAAjC,EAAqClB,MAAxD;;AAEA,UAAMmB,YAAY,GAAGzF,KAAK,GAAG0F,UAAU,CAAC1F,KAAD,CAAb,GAAuB,CAAjD;;AAEA,QAAI2F,KAAK,CAACF,YAAD,CAAT,EAAyB;AACvB;AACD,KAZ6C,CAY5C;AACF;;;AAGA,UAAMG,aAAa,GAAGC,IAAI,CAACxE,GAAL,CAASgE,GAAG,CAACI,YAAD,CAAZ,EAA4BJ,GAAG,CAAC7B,cAAD,CAA/B,CAAtB;AACA,UAAMsC,QAAQ,GAAGD,IAAI,CAACtE,GAAL,CAASwE,MAAM,CAACtC,aAAD,CAAf,EAAgCoC,IAAI,CAACxE,GAAL,CAASoE,YAAY,GAAGL,KAAK,GAAG5B,cAAhC,EAAgDuC,MAAM,CAACpC,aAAD,CAAtD,CAAhC,CAAjB;AACAvB,IAAAA,QAAQ,CAAC4D,MAAM,CAACF,QAAQ,CAACG,OAAT,CAAiBL,aAAjB,CAAD,CAAP,EAA0C5E,EAA1C,CAAR;AACD,GAnBqC,EAmBnC,CAACA,EAAD,EAAKyC,aAAL,EAAoBE,aAApB,EAAmCvB,QAAnC,EAA6CoB,cAA7C,EAA6DxD,KAA7D,CAnBmC,CAAtC;AAoBA,QAAMkG,mBAAmB,GAAGlI,WAAW,CAAC,MAAM;AAC5CmI,IAAAA,YAAY,CAAClD,gBAAgB,CAACE,OAAlB,CAAZ;AACD,GAFsC,EAEpC,EAFoC,CAAvC;AAGA,QAAMiD,iBAAiB,GAAGpI,WAAW,CAACoE,QAAQ,IAAI;AAChD,UAAMiE,WAAW,GAAG,EAApB;AACA,UAAMC,WAAW,GAAG,EAApB;AACA,QAAIC,QAAQ,GAAG,GAAf;;AAEA,UAAMC,gBAAgB,GAAG,MAAM;AAC7B,UAAID,QAAQ,GAAGF,WAAf,EAA4BE,QAAQ,IAAID,WAAZ;AAC5BlE,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACAa,MAAAA,gBAAgB,CAACE,OAAjB,GAA2BsD,MAAM,CAACC,UAAP,CAAkBF,gBAAlB,EAAoCD,QAApC,CAA3B;AACD,KAJD;;AAMAtD,IAAAA,gBAAgB,CAACE,OAAjB,GAA2BsD,MAAM,CAACC,UAAP,CAAkBF,gBAAlB,EAAoCD,QAApC,CAA3B;AACAI,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCV,mBAArC,EAA0D;AACxDW,MAAAA,IAAI,EAAE;AADkD,KAA1D;AAGD,GAfoC,EAelC,CAACX,mBAAD,CAfkC,CAArC;AAgBA,QAAMY,aAAa,GAAGhG,IAAI,KAAK,QAAT,IAAqBK,IAAI,KAAK,CAA9B,IAAmC,CAACd,QAApC,IAAgD,CAACE,QAAjD,GAA4D,aAAa3C,OAAO,CAACK,aAAR,CAAsBuB,SAAtB,EAAiC;AAC9H4C,IAAAA,QAAQ,EAAE+C,kBADoH;AAE9H4B,IAAAA,WAAW,EAAEX,iBAFiH;AAG9HY,IAAAA,SAAS,EAAEd;AAHmH,GAAjC,CAAzE,GAIjB,IAJL;AAKA,QAAMe,KAAK,GAAGvG,SAAS,IAAI8B,MAAb,GAAsB;AAClCA,IAAAA;AADkC,GAAtB,GAEV,IAFJ;AAGA,QAAM0E,qBAAqB,GAAGlJ,WAAW,CAACwE,MAAM,IAAI;AAClDC,IAAAA,SAAS,CAACD,MAAD,CAAT;AACD,GAFwC,EAEtC,EAFsC,CAAzC;AAGA,QAAM2E,OAAO,GAAGzG,SAAS,IAAImC,cAAb,GAA8B,aAAajF,OAAO,CAACK,aAAR,CAAsBqB,SAAtB,EAAiC;AAC1F8H,IAAAA,QAAQ,EAAE7D,eAAe,IAAIxD,WAD6D;AAE1FsH,IAAAA,aAAa,EAAE7E,MAF2E;AAG1F8E,IAAAA,YAAY,EAAE,OAAO5G,SAAP,KAAqB,QAArB,GAAgCA,SAAhC,GAA4C,CAHgC;AAI1F6G,IAAAA,cAAc,EAAEL;AAJ0E,GAAjC,CAA3C,GAKX,IALL;AAMA,QAAMM,WAAW,GAAG,EAApB;;AAEA,MAAI7G,KAAJ,EAAW;AACT6G,IAAAA,WAAW,CAACC,IAAZ,CAAkB,GAAEzG,EAAG,OAAvB;AACD;;AAED,MAAIf,QAAJ,EAAc;AACZuH,IAAAA,WAAW,CAACC,IAAZ,CAAiBxI,UAAU,CAAC+B,EAAD,CAA3B;AACD;;AAED,MAAIiB,kBAAJ,EAAwB;AACtBuF,IAAAA,WAAW,CAACC,IAAZ,CAAkB,GAAEzG,EAAG,kBAAvB;AACD;;AAED,QAAM0G,UAAU,GAAG,EAAnB;;AAEA,MAAI7H,MAAJ,EAAY;AACV6H,IAAAA,UAAU,CAACD,IAAX,CAAiB,GAAEzG,EAAG,QAAtB;AACD;;AAED,MAAIlB,MAAJ,EAAY;AACV4H,IAAAA,UAAU,CAACD,IAAX,CAAiB,GAAEzG,EAAG,QAAtB;AACD;;AAED0G,EAAAA,UAAU,CAACC,OAAX,CAAmB7I,OAAO,CAACkC,EAAD,CAA1B;AACA,QAAM4G,cAAc,GAAGvJ,UAAU,CAACe,MAAM,CAACyI,KAAR,EAAe3F,KAAK,IAAI9C,MAAM,CAACd,aAAa,CAAC,aAAD,EAAgB4D,KAAhB,CAAd,CAA9B,EAAqEpC,MAAM,IAAIV,MAAM,CAAC,gBAAD,CAArF,EAAyGkB,WAAW,IAAIlB,MAAM,CAAC,sBAAD,CAA9H,CAAjC;AACA,QAAM8D,KAAK,GAAG,aAAajF,aAAa,CAACyC,SAAS,GAAG,UAAH,GAAgB,OAA1B,EAAmC;AACzEK,IAAAA,IADyE;AAEzEC,IAAAA,EAFyE;AAGzEX,IAAAA,QAHyE;AAIzEE,IAAAA,QAJyE;AAKzEW,IAAAA,IALyE;AAMzEV,IAAAA,SANyE;AAOzER,IAAAA,KAAK,EAAEuD,eAPkE;AAQzExD,IAAAA,WARyE;AASzEsC,IAAAA,OATyE;AAUzEC,IAAAA,MAVyE;AAWzEwF,IAAAA,UAAU,EAAEC,cAX6D;AAYzEd,IAAAA,KAZyE;AAazE7F,IAAAA,YAAY,EAAE4G,qBAAqB,CAAC5G,YAAD,CAbsC;AAczEwC,IAAAA,SAAS,EAAEgE,cAd8D;AAezExF,IAAAA,QAAQ,EAAE6F,YAf+D;AAgBzEhE,IAAAA,GAAG,EAAEnB,QAhBoE;AAiBzEvB,IAAAA,GAjByE;AAkBzEF,IAAAA,GAlByE;AAmBzEF,IAAAA,IAnByE;AAoBzEK,IAAAA,SApByE;AAqBzEF,IAAAA,SArByE;AAsBzEK,IAAAA,UAtByE;AAuBzEF,IAAAA,OAvByE;AAwBzEC,IAAAA,SAxByE;AAyBzEZ,IAAAA,IAAI,EAAEgD,SAzBmE;AA0BzE,wBAAoB0D,WAAW,CAAClD,MAAZ,GAAqBkD,WAAW,CAACU,IAAZ,CAAiB,GAAjB,CAArB,GAA6C9E,SA1BQ;AA2BzE,uBAAmBsE,UAAU,CAACQ,IAAX,CAAgB,GAAhB,CA3BsD;AA4BzE,oBAAgBtF,OAAO,CAACjC,KAAD,CA5BkD;AA6BzE,iBAAaiB,QA7B4D;AA8BzE,6BAAyBG,oBA9BgD;AA+BzE,yBAAqBC,gBA/BoD;AAgCzE,qBAAiBH,YAhCwD;AAiCzE,sBAAkBsG,sBAAsB,CAACzH,SAAD,CAjCiC;AAkCzE,qBAAiBoB;AAlCwD,GAAnC,CAAxC;AAoCA,QAAMsG,iBAAiB,GAAG/J,UAAU,CAACe,MAAM,CAACiJ,QAAR,EAAkB/E,iBAAiB,IAAIzC,aAArB,IAAsCzB,MAAM,CAAC,wBAAD,CAA9D,EAA0FkE,iBAAiB,IAAI1C,cAArB,IAAuCxB,MAAM,CAAC,yBAAD,CAAvI,CAApC;AACA,SAAO,aAAaxB,OAAO,CAACK,aAAR,CAAsBe,UAAtB,EAAkC;AACpDkB,IAAAA,KAAK,EAAEA,KAD6C;AAEpDc,IAAAA,EAAE,EAAEA,EAFgD;AAGpDL,IAAAA,KAAK,EAAEA,KAH6C;AAIpD2H,IAAAA,MAAM,EAAEnI,WAJ4C;AAKpDC,IAAAA,WAAW,EAAEA,WALuC;AAMpDH,IAAAA,QAAQ,EAAEA;AAN0C,GAAlC,EAOjB,aAAarC,OAAO,CAACK,aAAR,CAAsBkB,WAAtB,EAAmC;AACjDoJ,IAAAA,IAAI,EAAE1H,aAD2C;AAEjD2H,IAAAA,KAAK,EAAE5H;AAF0C,GAAnC,EAGb,aAAahD,OAAO,CAACK,aAAR,CAAsB,KAAtB,EAA6B;AAC3C2F,IAAAA,SAAS,EAAEA,SADgC;AAE3CvB,IAAAA,OAAO,EAAEoG,WAFkC;AAG3CnG,IAAAA,MAAM,EAAEoG,UAHmC;AAI3CzD,IAAAA,OAAO,EAAE0D;AAJkC,GAA7B,EAKb5E,YALa,EAKCb,KALD,EAKQgB,YALR,EAKsBE,oBALtB,EAK4CW,iBAL5C,EAK+D+B,aAL/D,EAK8E,aAAalJ,OAAO,CAACK,aAAR,CAAsB,KAAtB,EAA6B;AACtI2F,IAAAA,SAAS,EAAEwE;AAD2H,GAA7B,CAL3F,EAOZjB,OAPY,CAHA,CAPI,CAApB;;AAmBA,WAASjC,sBAAT,GAAkC;AAChC/C,IAAAA,kBAAkB,IAAIA,kBAAkB,CAACnB,EAAD,CAAxC;AACD;;AAED,WAAS+G,cAAT,CAAwBa,KAAxB,EAA+B;AAC7B,UAAM;AACJC,MAAAA,GADI;AAEJC,MAAAA;AAFI,QAGFF,KAHJ;AAIA,UAAMG,WAAW,GAAG,YAApB;;AAEA,QAAIjI,IAAI,KAAK,QAAT,IAAqBgI,KAAK,KAAKnL,GAAG,CAACqL,KAAnC,IAA4CD,WAAW,CAACE,IAAZ,CAAiBJ,GAAjB,CAAhD,EAAuE;AACrE;AACD;;AAEDD,IAAAA,KAAK,CAACM,cAAN;AACD;;AAED,WAASC,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B,WAAOA,MAAM,YAAYC,WAAlB,KAAkCtG,SAAS,CAACI,OAAV,IAAqBJ,SAAS,CAACI,OAAV,CAAkBmG,QAAlB,CAA2BF,MAA3B,CAArB,IAA2DpG,SAAS,CAACG,OAAV,IAAqBH,SAAS,CAACG,OAAV,CAAkBmG,QAAlB,CAA2BF,MAA3B,CAAlH,CAAP;AACD;;AAED,WAASnB,YAAT,CAAsBW,KAAtB,EAA6B;AAC3BxG,IAAAA,QAAQ,IAAIA,QAAQ,CAACwG,KAAK,CAACW,aAAN,CAAoBvJ,KAArB,EAA4BgB,EAA5B,CAApB;AACD;;AAED,WAASyH,WAAT,CAAqB;AACnBW,IAAAA;AADmB,GAArB,EAEG;AACD,QAAID,aAAa,CAACC,MAAD,CAAjB,EAA2B;AACzB;AACD;;AAEDzG,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AAED,WAAS+F,UAAT,GAAsB;AACpB/F,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;;AAED,WAASgG,WAAT,CAAqB;AACnBS,IAAAA;AADmB,GAArB,EAEG;AACD,QAAID,aAAa,CAACC,MAAD,CAAjB,EAA2B;AACzB;AACD;;AAEDtG,IAAAA,QAAQ,CAACK,OAAT,IAAoBL,QAAQ,CAACK,OAAT,CAAiBT,KAAjB,EAApB;AACD;AACF;;AAED,SAASsF,qBAAT,CAA+B5G,YAA/B,EAA6C;AAC3C,MAAIA,YAAY,KAAK,IAArB,EAA2B;AACzB,WAAO,IAAP;AACD,GAFD,MAEO,IAAIA,YAAY,KAAK,KAArB,EAA4B;AACjC,WAAO,KAAP;AACD,GAFM,MAEA;AACL,WAAOA,YAAP;AACD;AACF;;AAED,SAAS+G,sBAAT,CAAgCzH,SAAhC,EAA2C;AACzC,UAAQ,OAAOA,SAAf;AACE,SAAK,WAAL;AACE,aAAO,KAAP;;AAEF,SAAK,SAAL;AACE,aAAOA,SAAP;;AAEF,SAAK,QAAL;AACE,aAAOkC,OAAO,CAAClC,SAAS,GAAG,CAAb,CAAd;AARJ;AAUD;;AAED,SAASd,SAAT","sourcesContent":["import { Key } from '../../types.js';\nimport React$1, { useState, useRef, useEffect, useCallback, createElement } from 'react';\nimport { useFeatures } from '../../utilities/features/hooks.js';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { classNames, variationName } from '../../utilities/css.js';\nimport { useIsAfterInitialMount as useIsAfterInitialMount$1 } from '../../utilities/use-is-after-initial-mount.js';\nimport { CircleCancelMinor } from '@shopify/polaris-icons';\nimport { Icon as Icon$1 } from '../Icon/Icon.js';\nimport { VisuallyHidden as VisuallyHidden$1 } from '../VisuallyHidden/VisuallyHidden.js';\nimport { labelID } from '../Label/Label.js';\nimport { Labelled as Labelled$1, helpTextID } from '../Labelled/Labelled.js';\nimport { Connected as Connected$1 } from '../Connected/Connected.js';\nimport styles from './TextField.scss.js';\nimport { Resizer as Resizer$1 } from './components/Resizer/Resizer.js';\nimport { Spinner as Spinner$1 } from './components/Spinner/Spinner.js';\n\nvar _ref = /*#__PURE__*/React$1.createElement(Icon$1, {\n  source: CircleCancelMinor,\n  color: \"inkLightest\"\n});\n\nfunction TextField({\n  prefix,\n  suffix,\n  placeholder,\n  value,\n  helpText,\n  label,\n  labelAction,\n  labelHidden,\n  disabled,\n  clearButton,\n  readOnly,\n  autoFocus,\n  focused,\n  multiline,\n  error,\n  connectedRight,\n  connectedLeft,\n  type,\n  name,\n  id: idProp,\n  role,\n  step,\n  autoComplete,\n  max,\n  maxLength,\n  min,\n  minLength,\n  pattern,\n  inputMode,\n  spellCheck,\n  ariaOwns,\n  ariaControls,\n  ariaExpanded,\n  ariaActiveDescendant,\n  ariaAutocomplete,\n  showCharacterCount,\n  align,\n  onClearButtonClick,\n  onChange,\n  onFocus,\n  onBlur\n}) {\n  const i18n = useI18n();\n  const [height, setHeight] = useState(null);\n  const [focus, setFocus] = useState(Boolean(focused));\n  const isAfterInitial = useIsAfterInitialMount$1();\n  const id = useUniqueId('TextField', idProp);\n  const inputRef = useRef(null);\n  const prefixRef = useRef(null);\n  const suffixRef = useRef(null);\n  const buttonPressTimer = useRef();\n  useEffect(() => {\n    const input = inputRef.current;\n    if (!input || focused === undefined) return;\n    focused ? input.focus() : input.blur();\n  }, [focused]);\n  const {\n    newDesignLanguage\n  } = useFeatures(); // Use a typeof check here as Typescript mostly protects us from non-stringy\n  // values but overzealous usage of `any` in consuming apps means people have\n  // been known to pass a number in, so make it clear that doesn't work.\n\n  const normalizedValue = typeof value === 'string' ? value : '';\n  const normalizedStep = step != null ? step : 1;\n  const normalizedMax = max != null ? max : Infinity;\n  const normalizedMin = min != null ? min : -Infinity;\n  const className = classNames(styles.TextField, Boolean(normalizedValue) && styles.hasValue, disabled && styles.disabled, readOnly && styles.readOnly, error && styles.error, multiline && styles.multiline, focus && styles.focus, newDesignLanguage && styles.newDesignLanguage);\n  const inputType = type === 'currency' ? 'text' : type;\n  const prefixMarkup = prefix ? /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Prefix,\n    id: `${id}Prefix`,\n    ref: prefixRef\n  }, prefix) : null;\n  const suffixMarkup = suffix ? /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Suffix,\n    id: `${id}Suffix`,\n    ref: suffixRef\n  }, suffix) : null;\n  let characterCountMarkup = null;\n\n  if (showCharacterCount) {\n    const characterCount = normalizedValue.length;\n    const characterCountLabel = maxLength ? i18n.translate('Polaris.TextField.characterCountWithMaxLength', {\n      count: characterCount,\n      limit: maxLength\n    }) : i18n.translate('Polaris.TextField.characterCount', {\n      count: characterCount\n    });\n    const characterCountClassName = classNames(styles.CharacterCount, multiline && styles.AlignFieldBottom);\n    const characterCountText = !maxLength ? characterCount : `${characterCount}/${maxLength}`;\n    characterCountMarkup = /*#__PURE__*/React$1.createElement(\"div\", {\n      id: `${id}CharacterCounter`,\n      className: characterCountClassName,\n      \"aria-label\": characterCountLabel,\n      \"aria-live\": focus ? 'polite' : 'off',\n      \"aria-atomic\": \"true\"\n    }, characterCountText);\n  }\n\n  const clearButtonMarkup = clearButton && normalizedValue !== '' ? /*#__PURE__*/React$1.createElement(\"button\", {\n    type: \"button\",\n    className: styles.ClearButton,\n    onClick: handleClearButtonPress,\n    disabled: disabled\n  }, /*#__PURE__*/React$1.createElement(VisuallyHidden$1, null, i18n.translate('Polaris.Common.clear')), _ref) : null;\n  const handleNumberChange = useCallback(steps => {\n    if (onChange == null) {\n      return;\n    } // Returns the length of decimal places in a number\n\n\n    const dpl = num => (num.toString().split('.')[1] || []).length;\n\n    const numericValue = value ? parseFloat(value) : 0;\n\n    if (isNaN(numericValue)) {\n      return;\n    } // Making sure the new value has the same length of decimal places as the\n    // step / value has.\n\n\n    const decimalPlaces = Math.max(dpl(numericValue), dpl(normalizedStep));\n    const newValue = Math.min(Number(normalizedMax), Math.max(numericValue + steps * normalizedStep, Number(normalizedMin)));\n    onChange(String(newValue.toFixed(decimalPlaces)), id);\n  }, [id, normalizedMax, normalizedMin, onChange, normalizedStep, value]);\n  const handleButtonRelease = useCallback(() => {\n    clearTimeout(buttonPressTimer.current);\n  }, []);\n  const handleButtonPress = useCallback(onChange => {\n    const minInterval = 50;\n    const decrementBy = 10;\n    let interval = 200;\n\n    const onChangeInterval = () => {\n      if (interval > minInterval) interval -= decrementBy;\n      onChange(0);\n      buttonPressTimer.current = window.setTimeout(onChangeInterval, interval);\n    };\n\n    buttonPressTimer.current = window.setTimeout(onChangeInterval, interval);\n    document.addEventListener('mouseup', handleButtonRelease, {\n      once: true\n    });\n  }, [handleButtonRelease]);\n  const spinnerMarkup = type === 'number' && step !== 0 && !disabled && !readOnly ? /*#__PURE__*/React$1.createElement(Spinner$1, {\n    onChange: handleNumberChange,\n    onMouseDown: handleButtonPress,\n    onMouseUp: handleButtonRelease\n  }) : null;\n  const style = multiline && height ? {\n    height\n  } : null;\n  const handleExpandingResize = useCallback(height => {\n    setHeight(height);\n  }, []);\n  const resizer = multiline && isAfterInitial ? /*#__PURE__*/React$1.createElement(Resizer$1, {\n    contents: normalizedValue || placeholder,\n    currentHeight: height,\n    minimumLines: typeof multiline === 'number' ? multiline : 1,\n    onHeightChange: handleExpandingResize\n  }) : null;\n  const describedBy = [];\n\n  if (error) {\n    describedBy.push(`${id}Error`);\n  }\n\n  if (helpText) {\n    describedBy.push(helpTextID(id));\n  }\n\n  if (showCharacterCount) {\n    describedBy.push(`${id}CharacterCounter`);\n  }\n\n  const labelledBy = [];\n\n  if (prefix) {\n    labelledBy.push(`${id}Prefix`);\n  }\n\n  if (suffix) {\n    labelledBy.push(`${id}Suffix`);\n  }\n\n  labelledBy.unshift(labelID(id));\n  const inputClassName = classNames(styles.Input, align && styles[variationName('Input-align', align)], suffix && styles['Input-suffixed'], clearButton && styles['Input-hasClearButton']);\n  const input = /*#__PURE__*/createElement(multiline ? 'textarea' : 'input', {\n    name,\n    id,\n    disabled,\n    readOnly,\n    role,\n    autoFocus,\n    value: normalizedValue,\n    placeholder,\n    onFocus,\n    onBlur,\n    onKeyPress: handleKeyPress,\n    style,\n    autoComplete: normalizeAutoComplete(autoComplete),\n    className: inputClassName,\n    onChange: handleChange,\n    ref: inputRef,\n    min,\n    max,\n    step,\n    minLength,\n    maxLength,\n    spellCheck,\n    pattern,\n    inputMode,\n    type: inputType,\n    'aria-describedby': describedBy.length ? describedBy.join(' ') : undefined,\n    'aria-labelledby': labelledBy.join(' '),\n    'aria-invalid': Boolean(error),\n    'aria-owns': ariaOwns,\n    'aria-activedescendant': ariaActiveDescendant,\n    'aria-autocomplete': ariaAutocomplete,\n    'aria-controls': ariaControls,\n    'aria-multiline': normalizeAriaMultiline(multiline),\n    'aria-expanded': ariaExpanded\n  });\n  const backdropClassName = classNames(styles.Backdrop, newDesignLanguage && connectedLeft && styles['Backdrop-connectedLeft'], newDesignLanguage && connectedRight && styles['Backdrop-connectedRight']);\n  return /*#__PURE__*/React$1.createElement(Labelled$1, {\n    label: label,\n    id: id,\n    error: error,\n    action: labelAction,\n    labelHidden: labelHidden,\n    helpText: helpText\n  }, /*#__PURE__*/React$1.createElement(Connected$1, {\n    left: connectedLeft,\n    right: connectedRight\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: className,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onClick: handleClick\n  }, prefixMarkup, input, suffixMarkup, characterCountMarkup, clearButtonMarkup, spinnerMarkup, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: backdropClassName\n  }), resizer)));\n\n  function handleClearButtonPress() {\n    onClearButtonClick && onClearButtonClick(id);\n  }\n\n  function handleKeyPress(event) {\n    const {\n      key,\n      which\n    } = event;\n    const numbersSpec = /[\\d.eE+-]$/;\n\n    if (type !== 'number' || which === Key.Enter || numbersSpec.test(key)) {\n      return;\n    }\n\n    event.preventDefault();\n  }\n\n  function containsAffix(target) {\n    return target instanceof HTMLElement && (prefixRef.current && prefixRef.current.contains(target) || suffixRef.current && suffixRef.current.contains(target));\n  }\n\n  function handleChange(event) {\n    onChange && onChange(event.currentTarget.value, id);\n  }\n\n  function handleFocus({\n    target\n  }) {\n    if (containsAffix(target)) {\n      return;\n    }\n\n    setFocus(true);\n  }\n\n  function handleBlur() {\n    setFocus(false);\n  }\n\n  function handleClick({\n    target\n  }) {\n    if (containsAffix(target)) {\n      return;\n    }\n\n    inputRef.current && inputRef.current.focus();\n  }\n}\n\nfunction normalizeAutoComplete(autoComplete) {\n  if (autoComplete === true) {\n    return 'on';\n  } else if (autoComplete === false) {\n    return 'off';\n  } else {\n    return autoComplete;\n  }\n}\n\nfunction normalizeAriaMultiline(multiline) {\n  switch (typeof multiline) {\n    case 'undefined':\n      return false;\n\n    case 'boolean':\n      return multiline;\n\n    case 'number':\n      return Boolean(multiline > 0);\n  }\n}\n\nexport { TextField };\n"]},"metadata":{},"sourceType":"module"}