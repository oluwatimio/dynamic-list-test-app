{"ast":null,"code":"import { isNewDesignLanguageColor } from '../../types.js';\nimport React$1 from 'react';\nimport { useFeatures } from '../../utilities/features/hooks.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { classNames, variationName } from '../../utilities/css.js';\nimport styles from './Icon.scss.js';\nconst COLORS_WITH_BACKDROPS = ['blueDark', 'teal', 'tealDark', 'greenDark', 'redDark', 'yellowDark', 'ink', 'inkLighter']; // This is needed for the polaris\n// styleguide to generate the props explorer\n\nfunction Icon({\n  source,\n  color,\n  backdrop,\n  accessibilityLabel\n}) {\n  const i18n = useI18n();\n  const {\n    newDesignLanguage\n  } = useFeatures();\n  let sourceType;\n\n  if (typeof source === 'function') {\n    sourceType = 'function';\n  } else if (source === 'placeholder') {\n    sourceType = 'placeholder';\n  } else {\n    sourceType = 'external';\n  }\n\n  if (color && backdrop && !COLORS_WITH_BACKDROPS.includes(color)) {\n    // eslint-disable-next-line no-console\n    console.warn(i18n.translate('Polaris.Icon.backdropWarning', {\n      color,\n      colorsWithBackDrops: COLORS_WITH_BACKDROPS.join(', ')\n    }));\n  }\n\n  if (color && !newDesignLanguage && isNewDesignLanguageColor(color)) {\n    // eslint-disable-next-line no-console\n    console.warn('You have selected a color meant to be used in the new design language but new design language is not enabled.');\n  }\n\n  if (color && sourceType === 'external' && newDesignLanguage === true && isNewDesignLanguageColor(color)) {\n    // eslint-disable-next-line no-console\n    console.warn('Recoloring external SVGs is not supported with colors in the new design language. Set the intended color on your SVG instead.');\n  }\n\n  const className = classNames(styles.Icon, color && styles[variationName('color', color)], color && color !== 'white' && styles.isColored, backdrop && styles.hasBackdrop, newDesignLanguage && styles.newDesignLanguage);\n  const SourceComponent = source;\n  const contentMarkup = {\n    function: /*#__PURE__*/React$1.createElement(SourceComponent, {\n      className: styles.Svg,\n      focusable: \"false\",\n      \"aria-hidden\": \"true\"\n    }),\n    placeholder: /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Placeholder\n    }),\n    external: /*#__PURE__*/React$1.createElement(\"img\", {\n      className: styles.Img,\n      src: `data:image/svg+xml;utf8,${source}`,\n      alt: \"\",\n      \"aria-hidden\": \"true\"\n    })\n  };\n  return /*#__PURE__*/React$1.createElement(\"span\", {\n    className: className,\n    \"aria-label\": accessibilityLabel\n  }, contentMarkup[sourceType]);\n}\n\nexport { Icon };","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/polaris/dist/esm/components/Icon/Icon.js"],"names":["isNewDesignLanguageColor","React$1","useFeatures","useI18n","classNames","variationName","styles","COLORS_WITH_BACKDROPS","Icon","source","color","backdrop","accessibilityLabel","i18n","newDesignLanguage","sourceType","includes","console","warn","translate","colorsWithBackDrops","join","className","isColored","hasBackdrop","SourceComponent","contentMarkup","function","createElement","Svg","focusable","placeholder","Placeholder","external","Img","src","alt"],"mappings":"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","sourcesContent":["import { isNewDesignLanguageColor } from '../../types.js';\nimport React$1 from 'react';\nimport { useFeatures } from '../../utilities/features/hooks.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { classNames, variationName } from '../../utilities/css.js';\nimport styles from './Icon.scss.js';\n\nconst COLORS_WITH_BACKDROPS = ['blueDark', 'teal', 'tealDark', 'greenDark', 'redDark', 'yellowDark', 'ink', 'inkLighter']; // This is needed for the polaris\n// styleguide to generate the props explorer\n\nfunction Icon({\n  source,\n  color,\n  backdrop,\n  accessibilityLabel\n}) {\n  const i18n = useI18n();\n  const {\n    newDesignLanguage\n  } = useFeatures();\n  let sourceType;\n\n  if (typeof source === 'function') {\n    sourceType = 'function';\n  } else if (source === 'placeholder') {\n    sourceType = 'placeholder';\n  } else {\n    sourceType = 'external';\n  }\n\n  if (color && backdrop && !COLORS_WITH_BACKDROPS.includes(color)) {\n    // eslint-disable-next-line no-console\n    console.warn(i18n.translate('Polaris.Icon.backdropWarning', {\n      color,\n      colorsWithBackDrops: COLORS_WITH_BACKDROPS.join(', ')\n    }));\n  }\n\n  if (color && !newDesignLanguage && isNewDesignLanguageColor(color)) {\n    // eslint-disable-next-line no-console\n    console.warn('You have selected a color meant to be used in the new design language but new design language is not enabled.');\n  }\n\n  if (color && sourceType === 'external' && newDesignLanguage === true && isNewDesignLanguageColor(color)) {\n    // eslint-disable-next-line no-console\n    console.warn('Recoloring external SVGs is not supported with colors in the new design language. Set the intended color on your SVG instead.');\n  }\n\n  const className = classNames(styles.Icon, color && styles[variationName('color', color)], color && color !== 'white' && styles.isColored, backdrop && styles.hasBackdrop, newDesignLanguage && styles.newDesignLanguage);\n  const SourceComponent = source;\n  const contentMarkup = {\n    function: /*#__PURE__*/React$1.createElement(SourceComponent, {\n      className: styles.Svg,\n      focusable: \"false\",\n      \"aria-hidden\": \"true\"\n    }),\n    placeholder: /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Placeholder\n    }),\n    external: /*#__PURE__*/React$1.createElement(\"img\", {\n      className: styles.Img,\n      src: `data:image/svg+xml;utf8,${source}`,\n      alt: \"\",\n      \"aria-hidden\": \"true\"\n    })\n  };\n  return /*#__PURE__*/React$1.createElement(\"span\", {\n    className: className,\n    \"aria-label\": accessibilityLabel\n  }, contentMarkup[sourceType]);\n}\n\nexport { Icon };\n"]},"metadata":{},"sourceType":"module"}