{"ast":null,"code":"import React$1 from 'react';\nimport { useFeatures } from '../../../../utilities/features/hooks.js';\nimport { classNames } from '../../../../utilities/css.js';\nimport { Icon as Icon$1 } from '../../../Icon/Icon.js';\nimport { Scrollable as Scrollable$1 } from '../../../Scrollable/Scrollable.js';\nimport { UnstyledLink as UnstyledLink$1 } from '../../../UnstyledLink/UnstyledLink.js';\nimport { Badge as Badge$1 } from '../../../Badge/Badge.js';\nimport { TextStyle as TextStyle$1 } from '../../../TextStyle/TextStyle.js';\nimport styles from '../../ActionList.scss.js';\n\nvar _ref = /*#__PURE__*/React$1.createElement(Scrollable$1.ScrollTo, null);\n\nfunction Item({\n  id,\n  badge,\n  content,\n  accessibilityLabel,\n  helpText,\n  url,\n  onAction,\n  icon,\n  image,\n  prefix,\n  suffix,\n  disabled,\n  external,\n  destructive,\n  ellipsis,\n  active,\n  role\n}) {\n  const {\n    newDesignLanguage\n  } = useFeatures();\n  const className = classNames(styles.Item, disabled && styles.disabled, destructive && styles.destructive, active && styles.active, newDesignLanguage && styles.newDesignLanguage);\n  let prefixMarkup = null;\n\n  if (prefix) {\n    prefixMarkup = /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Prefix\n    }, prefix);\n  } else if (icon) {\n    prefixMarkup = /*#__PURE__*/React$1.createElement(\"div\", {\n      className: classNames(styles.Prefix, newDesignLanguage && styles.newDesignLanguage)\n    }, /*#__PURE__*/React$1.createElement(Icon$1, {\n      source: icon\n    }));\n  } else if (image) {\n    prefixMarkup = /*#__PURE__*/React$1.createElement(\"div\", {\n      role: \"presentation\",\n      className: styles.Prefix,\n      style: {\n        backgroundImage: `url(${image}`\n      }\n    });\n  }\n\n  const contentText = ellipsis && content ? `${content}…` : content;\n  const contentMarkup = helpText ? /*#__PURE__*/React$1.createElement(\"div\", null, /*#__PURE__*/React$1.createElement(\"div\", null, contentText), /*#__PURE__*/React$1.createElement(TextStyle$1, {\n    variation: \"subdued\"\n  }, helpText)) : contentText;\n  const badgeMarkup = badge && /*#__PURE__*/React$1.createElement(\"span\", {\n    className: styles.Suffix\n  }, /*#__PURE__*/React$1.createElement(Badge$1, {\n    status: badge.status\n  }, badge.content));\n  const suffixMarkup = suffix && /*#__PURE__*/React$1.createElement(\"span\", {\n    className: classNames(styles.Suffix, newDesignLanguage && styles.newDesignLanguage)\n  }, suffix);\n  const textMarkup = /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Text\n  }, contentMarkup);\n  const contentElement = /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Content\n  }, prefixMarkup, textMarkup, badgeMarkup, suffixMarkup);\n  const scrollMarkup = active ? _ref : null;\n  const control = url ? /*#__PURE__*/React$1.createElement(UnstyledLink$1, {\n    id: id,\n    url: url,\n    className: className,\n    external: external,\n    \"aria-label\": accessibilityLabel,\n    onClick: onAction\n  }, contentElement) : /*#__PURE__*/React$1.createElement(\"button\", {\n    id: id,\n    type: \"button\",\n    className: className,\n    disabled: disabled,\n    \"aria-label\": accessibilityLabel,\n    onClick: onAction\n  }, contentElement);\n  return /*#__PURE__*/React$1.createElement(\"li\", {\n    role: role,\n    \"aria-selected\": active\n  }, scrollMarkup, control);\n}\n\nexport { Item };","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/polaris/dist/esm/components/ActionList/components/Item/Item.js"],"names":["React$1","useFeatures","classNames","Icon","Icon$1","Scrollable","Scrollable$1","UnstyledLink","UnstyledLink$1","Badge","Badge$1","TextStyle","TextStyle$1","styles","_ref","createElement","ScrollTo","Item","id","badge","content","accessibilityLabel","helpText","url","onAction","icon","image","prefix","suffix","disabled","external","destructive","ellipsis","active","role","newDesignLanguage","className","prefixMarkup","Prefix","source","style","backgroundImage","contentText","contentMarkup","variation","badgeMarkup","Suffix","status","suffixMarkup","textMarkup","Text","contentElement","Content","scrollMarkup","control","onClick","type"],"mappings":"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","sourcesContent":["import React$1 from 'react';\nimport { useFeatures } from '../../../../utilities/features/hooks.js';\nimport { classNames } from '../../../../utilities/css.js';\nimport { Icon as Icon$1 } from '../../../Icon/Icon.js';\nimport { Scrollable as Scrollable$1 } from '../../../Scrollable/Scrollable.js';\nimport { UnstyledLink as UnstyledLink$1 } from '../../../UnstyledLink/UnstyledLink.js';\nimport { Badge as Badge$1 } from '../../../Badge/Badge.js';\nimport { TextStyle as TextStyle$1 } from '../../../TextStyle/TextStyle.js';\nimport styles from '../../ActionList.scss.js';\n\nvar _ref = /*#__PURE__*/React$1.createElement(Scrollable$1.ScrollTo, null);\n\nfunction Item({\n  id,\n  badge,\n  content,\n  accessibilityLabel,\n  helpText,\n  url,\n  onAction,\n  icon,\n  image,\n  prefix,\n  suffix,\n  disabled,\n  external,\n  destructive,\n  ellipsis,\n  active,\n  role\n}) {\n  const {\n    newDesignLanguage\n  } = useFeatures();\n  const className = classNames(styles.Item, disabled && styles.disabled, destructive && styles.destructive, active && styles.active, newDesignLanguage && styles.newDesignLanguage);\n  let prefixMarkup = null;\n\n  if (prefix) {\n    prefixMarkup = /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Prefix\n    }, prefix);\n  } else if (icon) {\n    prefixMarkup = /*#__PURE__*/React$1.createElement(\"div\", {\n      className: classNames(styles.Prefix, newDesignLanguage && styles.newDesignLanguage)\n    }, /*#__PURE__*/React$1.createElement(Icon$1, {\n      source: icon\n    }));\n  } else if (image) {\n    prefixMarkup = /*#__PURE__*/React$1.createElement(\"div\", {\n      role: \"presentation\",\n      className: styles.Prefix,\n      style: {\n        backgroundImage: `url(${image}`\n      }\n    });\n  }\n\n  const contentText = ellipsis && content ? `${content}…` : content;\n  const contentMarkup = helpText ? /*#__PURE__*/React$1.createElement(\"div\", null, /*#__PURE__*/React$1.createElement(\"div\", null, contentText), /*#__PURE__*/React$1.createElement(TextStyle$1, {\n    variation: \"subdued\"\n  }, helpText)) : contentText;\n  const badgeMarkup = badge && /*#__PURE__*/React$1.createElement(\"span\", {\n    className: styles.Suffix\n  }, /*#__PURE__*/React$1.createElement(Badge$1, {\n    status: badge.status\n  }, badge.content));\n  const suffixMarkup = suffix && /*#__PURE__*/React$1.createElement(\"span\", {\n    className: classNames(styles.Suffix, newDesignLanguage && styles.newDesignLanguage)\n  }, suffix);\n  const textMarkup = /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Text\n  }, contentMarkup);\n  const contentElement = /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Content\n  }, prefixMarkup, textMarkup, badgeMarkup, suffixMarkup);\n  const scrollMarkup = active ? _ref : null;\n  const control = url ? /*#__PURE__*/React$1.createElement(UnstyledLink$1, {\n    id: id,\n    url: url,\n    className: className,\n    external: external,\n    \"aria-label\": accessibilityLabel,\n    onClick: onAction\n  }, contentElement) : /*#__PURE__*/React$1.createElement(\"button\", {\n    id: id,\n    type: \"button\",\n    className: className,\n    disabled: disabled,\n    \"aria-label\": accessibilityLabel,\n    onClick: onAction\n  }, contentElement);\n  return /*#__PURE__*/React$1.createElement(\"li\", {\n    role: role,\n    \"aria-selected\": active\n  }, scrollMarkup, control);\n}\n\nexport { Item };\n"]},"metadata":{},"sourceType":"module"}