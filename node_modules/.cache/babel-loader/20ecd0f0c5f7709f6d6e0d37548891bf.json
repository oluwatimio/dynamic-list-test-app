{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar utilities_1 = require(\"../../../utilities\");\n\nvar reducer_1 = require(\"../reducer\");\n\nvar utils_1 = require(\"../utils/utils\");\n\nfunction useHandlers(state, dispatch, validationConfigs) {\n  return react_1.useMemo(function () {\n    return state.list.map(function (item, index) {\n      return utilities_1.mapObject(item, function (field, key) {\n        var target = {\n          index: index,\n          key: key\n        };\n\n        function validate(value) {\n          if (value === void 0) {\n            value = field.value;\n          }\n\n          var validates = validationConfigs[key];\n\n          if (validates == null) {\n            return;\n          }\n\n          var siblings = state.list.filter(function (listItem) {\n            return listItem !== item;\n          });\n          return utils_1.runValidation(function (error) {\n            return dispatch(reducer_1.updateErrorAction({\n              target: target,\n              error: error || ''\n            }));\n          }, {\n            value: value,\n            siblings: siblings,\n            listItem: item\n          }, validates);\n        }\n\n        return {\n          onChange: function (value) {\n            var normalizedValue = utilities_1.isChangeEvent(value) ? value.target.value : value;\n            dispatch(reducer_1.updateAction({\n              target: target,\n              value: normalizedValue\n            }));\n\n            if (field.error) {\n              validate(normalizedValue);\n            }\n          },\n          reset: function () {\n            dispatch(reducer_1.resetAction({\n              target: target\n            }));\n          },\n          newDefaultValue: function (value) {\n            dispatch(reducer_1.newDefaultAction({\n              target: target,\n              value: value\n            }));\n          },\n          runValidation: validate,\n          onBlur: function () {\n            var touched = field.touched,\n                error = field.error;\n\n            if (touched === false && error == null) {\n              return;\n            }\n\n            validate();\n          },\n          setError: function (error) {\n            dispatch(reducer_1.updateErrorAction({\n              target: target,\n              error: error\n            }));\n          }\n        };\n      });\n    });\n  }, [dispatch, state.list, validationConfigs]);\n}\n\nexports.useHandlers = useHandlers;","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/react-form/dist/src/hooks/list/hooks/useHandlers.js"],"names":["Object","defineProperty","exports","value","react_1","require","utilities_1","reducer_1","utils_1","useHandlers","state","dispatch","validationConfigs","useMemo","list","map","item","index","mapObject","field","key","target","validate","validates","siblings","filter","listItem","runValidation","error","updateErrorAction","onChange","normalizedValue","isChangeEvent","updateAction","reset","resetAction","newDefaultValue","newDefaultAction","onBlur","touched","setError"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar utilities_1 = require(\"../../../utilities\");\nvar reducer_1 = require(\"../reducer\");\nvar utils_1 = require(\"../utils/utils\");\nfunction useHandlers(state, dispatch, validationConfigs) {\n    return react_1.useMemo(function () {\n        return state.list.map(function (item, index) {\n            return utilities_1.mapObject(item, function (field, key) {\n                var target = { index: index, key: key };\n                function validate(value) {\n                    if (value === void 0) { value = field.value; }\n                    var validates = validationConfigs[key];\n                    if (validates == null) {\n                        return;\n                    }\n                    var siblings = state.list.filter(function (listItem) { return listItem !== item; });\n                    return utils_1.runValidation(function (error) {\n                        return dispatch(reducer_1.updateErrorAction({ target: target, error: error || '' }));\n                    }, { value: value, siblings: siblings, listItem: item }, validates);\n                }\n                return {\n                    onChange: function (value) {\n                        var normalizedValue = (utilities_1.isChangeEvent(value)\n                            ? value.target.value\n                            : value);\n                        dispatch(reducer_1.updateAction({\n                            target: target,\n                            value: normalizedValue,\n                        }));\n                        if (field.error) {\n                            validate(normalizedValue);\n                        }\n                    },\n                    reset: function () {\n                        dispatch(reducer_1.resetAction({ target: target }));\n                    },\n                    newDefaultValue: function (value) {\n                        dispatch(reducer_1.newDefaultAction({ target: target, value: value }));\n                    },\n                    runValidation: validate,\n                    onBlur: function () {\n                        var touched = field.touched, error = field.error;\n                        if (touched === false && error == null) {\n                            return;\n                        }\n                        validate();\n                    },\n                    setError: function (error) {\n                        dispatch(reducer_1.updateErrorAction({ target: target, error: error }));\n                    },\n                };\n            });\n        });\n    }, [dispatch, state.list, validationConfigs]);\n}\nexports.useHandlers = useHandlers;\n"]},"metadata":{},"sourceType":"script"}