{"ast":null,"code":"import { useContext, useMemo, useEffect } from 'react';\nimport { MissingAppProviderError } from '../errors.js';\nimport { FocusManagerContext } from './context.js';\nimport { useUniqueId } from '../unique-id/hooks.js';\n\nfunction useFocusManager() {\n  const focusManager = useContext(FocusManagerContext);\n  const id = useUniqueId();\n\n  if (!focusManager) {\n    throw new MissingAppProviderError('No FocusManager was provided.');\n  }\n\n  const {\n    trapFocusList,\n    add: addFocusItem,\n    remove: removeFocusItem\n  } = focusManager;\n  const canSafelyFocus = trapFocusList[0] === id;\n  const value = useMemo(() => ({\n    canSafelyFocus\n  }), [canSafelyFocus]);\n  useEffect(() => {\n    addFocusItem(id);\n    return () => {\n      removeFocusItem(id);\n    };\n  }, [addFocusItem, id, removeFocusItem]);\n  return value;\n}\n\nexport { useFocusManager };","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/polaris/dist/esm/utilities/focus-manager/hooks.js"],"names":["useContext","useMemo","useEffect","MissingAppProviderError","FocusManagerContext","useUniqueId","useFocusManager","focusManager","id","trapFocusList","add","addFocusItem","remove","removeFocusItem","canSafelyFocus","value"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,OAArB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,SAASC,uBAAT,QAAwC,cAAxC;AACA,SAASC,mBAAT,QAAoC,cAApC;AACA,SAASC,WAAT,QAA4B,uBAA5B;;AAEA,SAASC,eAAT,GAA2B;AACzB,QAAMC,YAAY,GAAGP,UAAU,CAACI,mBAAD,CAA/B;AACA,QAAMI,EAAE,GAAGH,WAAW,EAAtB;;AAEA,MAAI,CAACE,YAAL,EAAmB;AACjB,UAAM,IAAIJ,uBAAJ,CAA4B,+BAA5B,CAAN;AACD;;AAED,QAAM;AACJM,IAAAA,aADI;AAEJC,IAAAA,GAAG,EAAEC,YAFD;AAGJC,IAAAA,MAAM,EAAEC;AAHJ,MAIFN,YAJJ;AAKA,QAAMO,cAAc,GAAGL,aAAa,CAAC,CAAD,CAAb,KAAqBD,EAA5C;AACA,QAAMO,KAAK,GAAGd,OAAO,CAAC,OAAO;AAC3Ba,IAAAA;AAD2B,GAAP,CAAD,EAEjB,CAACA,cAAD,CAFiB,CAArB;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACH,EAAD,CAAZ;AACA,WAAO,MAAM;AACXK,MAAAA,eAAe,CAACL,EAAD,CAAf;AACD,KAFD;AAGD,GALQ,EAKN,CAACG,YAAD,EAAeH,EAAf,EAAmBK,eAAnB,CALM,CAAT;AAMA,SAAOE,KAAP;AACD;;AAED,SAAST,eAAT","sourcesContent":["import { useContext, useMemo, useEffect } from 'react';\nimport { MissingAppProviderError } from '../errors.js';\nimport { FocusManagerContext } from './context.js';\nimport { useUniqueId } from '../unique-id/hooks.js';\n\nfunction useFocusManager() {\n  const focusManager = useContext(FocusManagerContext);\n  const id = useUniqueId();\n\n  if (!focusManager) {\n    throw new MissingAppProviderError('No FocusManager was provided.');\n  }\n\n  const {\n    trapFocusList,\n    add: addFocusItem,\n    remove: removeFocusItem\n  } = focusManager;\n  const canSafelyFocus = trapFocusList[0] === id;\n  const value = useMemo(() => ({\n    canSafelyFocus\n  }), [canSafelyFocus]);\n  useEffect(() => {\n    addFocusItem(id);\n    return () => {\n      removeFocusItem(id);\n    };\n  }, [addFocusItem, id, removeFocusItem]);\n  return value;\n}\n\nexport { useFocusManager };\n"]},"metadata":{},"sourceType":"module"}