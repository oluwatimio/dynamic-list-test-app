{"ast":null,"code":"import React$1 from 'react';\nimport { useFeatures } from '../../utilities/features/hooks.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { classNames } from '../../utilities/css.js';\nimport { TextStyle as TextStyle$1 } from '../TextStyle/TextStyle.js';\nimport { DisplayText as DisplayText$1 } from '../DisplayText/DisplayText.js';\nimport { SkeletonBodyText as SkeletonBodyText$1 } from '../SkeletonBodyText/SkeletonBodyText.js';\nimport { SkeletonDisplayText as SkeletonDisplayText$1 } from '../SkeletonDisplayText/SkeletonDisplayText.js';\nimport styles from './SkeletonPage.scss.js';\n\nvar _ref = /*#__PURE__*/React$1.createElement(SkeletonDisplayText$1, {\n  size: \"large\"\n});\n\nvar _ref2 = /*#__PURE__*/React$1.createElement(SkeletonBodyText$1, {\n  lines: 1\n});\n\nfunction SkeletonPage({\n  children,\n  fullWidth,\n  narrowWidth,\n  primaryAction,\n  secondaryActions,\n  title = '',\n  breadcrumbs\n}) {\n  const i18n = useI18n();\n  const {\n    newDesignLanguage\n  } = useFeatures();\n  const className = classNames(styles.Page, fullWidth && styles.fullWidth, narrowWidth && styles.narrowWidth, newDesignLanguage && styles.newDesignLanguage);\n  const headerClassName = classNames(styles.Header, breadcrumbs && styles['Header-hasBreadcrumbs'], secondaryActions && styles['Header-hasSecondaryActions']);\n  const titleMarkup = /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Title\n  }, /*#__PURE__*/React$1.createElement(SkeletonPageTitle, {\n    title: title,\n    newDesignLanguage: newDesignLanguage\n  }));\n  const primaryActionMarkup = primaryAction ? /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.PrimaryAction\n  }, _ref) : null;\n  const secondaryActionsMarkup = secondaryActions ? renderSecondaryActions(secondaryActions) : null;\n  const breadcrumbMarkup = breadcrumbs ? /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.BreadcrumbAction,\n    style: {\n      width: 60\n    }\n  }, _ref2) : null;\n  return /*#__PURE__*/React$1.createElement(\"div\", {\n    className: className,\n    role: \"status\",\n    \"aria-label\": i18n.translate('Polaris.SkeletonPage.loadingLabel')\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: headerClassName\n  }, breadcrumbMarkup, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.TitleAndPrimaryAction\n  }, titleMarkup, primaryActionMarkup), secondaryActionsMarkup), /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Content\n  }, children));\n}\n\nvar _ref3 = /*#__PURE__*/React$1.createElement(SkeletonBodyText$1, {\n  lines: 1\n});\n\nfunction renderSecondaryActions(actionCount) {\n  const actions = [];\n\n  for (let i = 0; i < actionCount; i++) {\n    const width = Math.round(Math.random() * 40 + 60);\n    actions.push( /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Action,\n      style: {\n        width\n      },\n      key: i\n    }, _ref3));\n  }\n\n  return /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Actions\n  }, actions);\n}\n\nvar _ref4 = /*#__PURE__*/React$1.createElement(SkeletonDisplayText$1, {\n  size: \"large\"\n});\n\nfunction SkeletonPageTitle({\n  title = '',\n  newDesignLanguage = false\n}) {\n  if (title) {\n    return newDesignLanguage ? /*#__PURE__*/React$1.createElement(\"h1\", {\n      className: styles.newDesignLanguageTitle\n    }, title) : /*#__PURE__*/React$1.createElement(DisplayText$1, {\n      size: \"large\",\n      element: \"h1\"\n    }, /*#__PURE__*/React$1.createElement(TextStyle$1, {\n      variation: \"strong\"\n    }, title));\n  }\n\n  if (newDesignLanguage) {\n    return /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.newDesignLanguageSkeletonTitle\n    });\n  }\n\n  return _ref4;\n}\n\nexport { SkeletonPage };","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/polaris/dist/esm/components/SkeletonPage/SkeletonPage.js"],"names":["React$1","useFeatures","useI18n","classNames","TextStyle","TextStyle$1","DisplayText","DisplayText$1","SkeletonBodyText","SkeletonBodyText$1","SkeletonDisplayText","SkeletonDisplayText$1","styles","_ref","createElement","size","_ref2","lines","SkeletonPage","children","fullWidth","narrowWidth","primaryAction","secondaryActions","title","breadcrumbs","i18n","newDesignLanguage","className","Page","headerClassName","Header","titleMarkup","Title","SkeletonPageTitle","primaryActionMarkup","PrimaryAction","secondaryActionsMarkup","renderSecondaryActions","breadcrumbMarkup","BreadcrumbAction","style","width","role","translate","TitleAndPrimaryAction","Content","_ref3","actionCount","actions","i","Math","round","random","push","Action","key","Actions","_ref4","newDesignLanguageTitle","element","variation","newDesignLanguageSkeletonTitle"],"mappings":"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","sourcesContent":["import React$1 from 'react';\nimport { useFeatures } from '../../utilities/features/hooks.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { classNames } from '../../utilities/css.js';\nimport { TextStyle as TextStyle$1 } from '../TextStyle/TextStyle.js';\nimport { DisplayText as DisplayText$1 } from '../DisplayText/DisplayText.js';\nimport { SkeletonBodyText as SkeletonBodyText$1 } from '../SkeletonBodyText/SkeletonBodyText.js';\nimport { SkeletonDisplayText as SkeletonDisplayText$1 } from '../SkeletonDisplayText/SkeletonDisplayText.js';\nimport styles from './SkeletonPage.scss.js';\n\nvar _ref = /*#__PURE__*/React$1.createElement(SkeletonDisplayText$1, {\n  size: \"large\"\n});\n\nvar _ref2 = /*#__PURE__*/React$1.createElement(SkeletonBodyText$1, {\n  lines: 1\n});\n\nfunction SkeletonPage({\n  children,\n  fullWidth,\n  narrowWidth,\n  primaryAction,\n  secondaryActions,\n  title = '',\n  breadcrumbs\n}) {\n  const i18n = useI18n();\n  const {\n    newDesignLanguage\n  } = useFeatures();\n  const className = classNames(styles.Page, fullWidth && styles.fullWidth, narrowWidth && styles.narrowWidth, newDesignLanguage && styles.newDesignLanguage);\n  const headerClassName = classNames(styles.Header, breadcrumbs && styles['Header-hasBreadcrumbs'], secondaryActions && styles['Header-hasSecondaryActions']);\n  const titleMarkup = /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Title\n  }, /*#__PURE__*/React$1.createElement(SkeletonPageTitle, {\n    title: title,\n    newDesignLanguage: newDesignLanguage\n  }));\n  const primaryActionMarkup = primaryAction ? /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.PrimaryAction\n  }, _ref) : null;\n  const secondaryActionsMarkup = secondaryActions ? renderSecondaryActions(secondaryActions) : null;\n  const breadcrumbMarkup = breadcrumbs ? /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.BreadcrumbAction,\n    style: {\n      width: 60\n    }\n  }, _ref2) : null;\n  return /*#__PURE__*/React$1.createElement(\"div\", {\n    className: className,\n    role: \"status\",\n    \"aria-label\": i18n.translate('Polaris.SkeletonPage.loadingLabel')\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: headerClassName\n  }, breadcrumbMarkup, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.TitleAndPrimaryAction\n  }, titleMarkup, primaryActionMarkup), secondaryActionsMarkup), /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Content\n  }, children));\n}\n\nvar _ref3 = /*#__PURE__*/React$1.createElement(SkeletonBodyText$1, {\n  lines: 1\n});\n\nfunction renderSecondaryActions(actionCount) {\n  const actions = [];\n\n  for (let i = 0; i < actionCount; i++) {\n    const width = Math.round(Math.random() * 40 + 60);\n    actions.push( /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Action,\n      style: {\n        width\n      },\n      key: i\n    }, _ref3));\n  }\n\n  return /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Actions\n  }, actions);\n}\n\nvar _ref4 = /*#__PURE__*/React$1.createElement(SkeletonDisplayText$1, {\n  size: \"large\"\n});\n\nfunction SkeletonPageTitle({\n  title = '',\n  newDesignLanguage = false\n}) {\n  if (title) {\n    return newDesignLanguage ? /*#__PURE__*/React$1.createElement(\"h1\", {\n      className: styles.newDesignLanguageTitle\n    }, title) : /*#__PURE__*/React$1.createElement(DisplayText$1, {\n      size: \"large\",\n      element: \"h1\"\n    }, /*#__PURE__*/React$1.createElement(TextStyle$1, {\n      variation: \"strong\"\n    }, title));\n  }\n\n  if (newDesignLanguage) {\n    return /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.newDesignLanguageSkeletonTitle\n    });\n  }\n\n  return _ref4;\n}\n\nexport { SkeletonPage };\n"]},"metadata":{},"sourceType":"module"}