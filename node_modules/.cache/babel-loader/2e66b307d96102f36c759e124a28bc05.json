{"ast":null,"code":"import React$1, { useContext, useEffect } from 'react';\nimport { globalIdGeneratorFactory } from '../../utilities/unique-id/unique-id-factory.js';\nimport { PortalsManagerContext } from '../../utilities/portals/context.js';\nimport { createPortal } from 'react-dom';\nimport { useIsMountedRef as useIsMountedRef$1 } from '../../utilities/use-is-mounted-ref.js';\nconst getUniqueID = globalIdGeneratorFactory('portal-');\n\nfunction Portal({\n  children,\n  idPrefix = '',\n  onPortalCreated = noop\n}) {\n  const isMounted = useIsMountedRef$1();\n  const portalsContext = useContext(PortalsManagerContext);\n  const portalId = idPrefix !== '' ? `${idPrefix}-${getUniqueID()}` : getUniqueID();\n  useEffect(() => {\n    if (isMounted) {\n      onPortalCreated();\n    }\n  }, [onPortalCreated, isMounted]);\n  return portalsContext && portalsContext.portalsContainerRef ? /*#__PURE__*/createPortal( /*#__PURE__*/React$1.createElement(\"div\", {\n    \"data-portal-id\": portalId\n  }, children), portalsContext.portalsContainerRef) : null;\n}\n\nfunction noop() {}\n\nexport { Portal };","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/polaris/dist/esm/components/Portal/Portal.js"],"names":["React$1","useContext","useEffect","globalIdGeneratorFactory","PortalsManagerContext","createPortal","useIsMountedRef","useIsMountedRef$1","getUniqueID","Portal","children","idPrefix","onPortalCreated","noop","isMounted","portalsContext","portalId","portalsContainerRef","createElement"],"mappings":"AAAA,OAAOA,OAAP,IAAkBC,UAAlB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,SAASC,wBAAT,QAAyC,gDAAzC;AACA,SAASC,qBAAT,QAAsC,oCAAtC;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,eAAe,IAAIC,iBAA5B,QAAqD,uCAArD;AAEA,MAAMC,WAAW,GAAGL,wBAAwB,CAAC,SAAD,CAA5C;;AACA,SAASM,MAAT,CAAgB;AACdC,EAAAA,QADc;AAEdC,EAAAA,QAAQ,GAAG,EAFG;AAGdC,EAAAA,eAAe,GAAGC;AAHJ,CAAhB,EAIG;AACD,QAAMC,SAAS,GAAGP,iBAAiB,EAAnC;AACA,QAAMQ,cAAc,GAAGd,UAAU,CAACG,qBAAD,CAAjC;AACA,QAAMY,QAAQ,GAAGL,QAAQ,KAAK,EAAb,GAAmB,GAAEA,QAAS,IAAGH,WAAW,EAAG,EAA/C,GAAmDA,WAAW,EAA/E;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,SAAJ,EAAe;AACbF,MAAAA,eAAe;AAChB;AACF,GAJQ,EAIN,CAACA,eAAD,EAAkBE,SAAlB,CAJM,CAAT;AAKA,SAAOC,cAAc,IAAIA,cAAc,CAACE,mBAAjC,GAAuD,aAAaZ,YAAY,EAAE,aAAaL,OAAO,CAACkB,aAAR,CAAsB,KAAtB,EAA6B;AACjI,sBAAkBF;AAD+G,GAA7B,EAEnGN,QAFmG,CAAf,EAEzEK,cAAc,CAACE,mBAF0D,CAAhF,GAE6C,IAFpD;AAGD;;AAED,SAASJ,IAAT,GAAgB,CAAE;;AAElB,SAASJ,MAAT","sourcesContent":["import React$1, { useContext, useEffect } from 'react';\nimport { globalIdGeneratorFactory } from '../../utilities/unique-id/unique-id-factory.js';\nimport { PortalsManagerContext } from '../../utilities/portals/context.js';\nimport { createPortal } from 'react-dom';\nimport { useIsMountedRef as useIsMountedRef$1 } from '../../utilities/use-is-mounted-ref.js';\n\nconst getUniqueID = globalIdGeneratorFactory('portal-');\nfunction Portal({\n  children,\n  idPrefix = '',\n  onPortalCreated = noop\n}) {\n  const isMounted = useIsMountedRef$1();\n  const portalsContext = useContext(PortalsManagerContext);\n  const portalId = idPrefix !== '' ? `${idPrefix}-${getUniqueID()}` : getUniqueID();\n  useEffect(() => {\n    if (isMounted) {\n      onPortalCreated();\n    }\n  }, [onPortalCreated, isMounted]);\n  return portalsContext && portalsContext.portalsContainerRef ? /*#__PURE__*/createPortal( /*#__PURE__*/React$1.createElement(\"div\", {\n    \"data-portal-id\": portalId\n  }, children), portalsContext.portalsContainerRef) : null;\n}\n\nfunction noop() {}\n\nexport { Portal };\n"]},"metadata":{},"sourceType":"module"}