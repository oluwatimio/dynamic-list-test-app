{"ast":null,"code":"import React$1, { useCallback } from 'react';\nimport { useFeatures } from '../../../../utilities/features/hooks.js';\nimport { classNames } from '../../../../utilities/css.js';\nimport { Scrollable as Scrollable$1 } from '../../../Scrollable/Scrollable.js';\nimport { useToggle as useToggle$1 } from '../../../../utilities/use-toggle.js';\nimport { Checkbox as Checkbox$1 } from '../Checkbox/Checkbox.js';\nimport styles from './Option.scss.js';\n\nvar _ref = /*#__PURE__*/React$1.createElement(Scrollable$1.ScrollTo, null);\n\nfunction Option({\n  label,\n  value,\n  id,\n  select,\n  active,\n  allowMultiple,\n  disabled,\n  role,\n  media,\n  onClick,\n  section,\n  index\n}) {\n  const {\n    value: focused,\n    toggle: toggleFocused\n  } = useToggle$1(false);\n  const {\n    newDesignLanguage\n  } = useFeatures();\n  const handleClick = useCallback(() => {\n    if (disabled) {\n      return;\n    }\n\n    onClick(section, index);\n  }, [disabled, index, onClick, section]);\n  const mediaMarkup = media ? /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Media\n  }, media) : null;\n  const singleSelectClassName = classNames(styles.SingleSelectOption, focused && styles.focused, disabled && styles.disabled, select && styles.select, active && styles.active);\n  const multiSelectClassName = classNames(styles.Label, disabled && styles.disabled, active && styles.active, newDesignLanguage && select && styles.select);\n  const checkBoxRole = role === 'option' ? 'presentation' : undefined;\n  const optionMarkup = allowMultiple ? /*#__PURE__*/React$1.createElement(\"label\", {\n    htmlFor: id,\n    className: multiSelectClassName\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Checkbox\n  }, /*#__PURE__*/React$1.createElement(Checkbox$1, {\n    id: id,\n    value: value,\n    checked: select,\n    active: active,\n    disabled: disabled,\n    onChange: handleClick,\n    role: checkBoxRole\n  })), mediaMarkup, label) : /*#__PURE__*/React$1.createElement(\"button\", {\n    id: id,\n    type: \"button\",\n    className: singleSelectClassName,\n    onClick: handleClick,\n    disabled: disabled,\n    onFocus: toggleFocused,\n    onBlur: toggleFocused\n  }, mediaMarkup, label);\n  const scrollMarkup = active ? _ref : null;\n  const optionClassName = classNames(styles.Option, newDesignLanguage && styles.newDesignLanguage);\n  return /*#__PURE__*/React$1.createElement(\"li\", {\n    key: id,\n    className: optionClassName,\n    tabIndex: -1,\n    \"aria-selected\": active,\n    role: role\n  }, scrollMarkup, optionMarkup);\n}\n\nexport { Option };","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/polaris/dist/esm/components/OptionList/components/Option/Option.js"],"names":["React$1","useCallback","useFeatures","classNames","Scrollable","Scrollable$1","useToggle","useToggle$1","Checkbox","Checkbox$1","styles","_ref","createElement","ScrollTo","Option","label","value","id","select","active","allowMultiple","disabled","role","media","onClick","section","index","focused","toggle","toggleFocused","newDesignLanguage","handleClick","mediaMarkup","className","Media","singleSelectClassName","SingleSelectOption","multiSelectClassName","Label","checkBoxRole","undefined","optionMarkup","htmlFor","checked","onChange","type","onFocus","onBlur","scrollMarkup","optionClassName","key","tabIndex"],"mappings":"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","sourcesContent":["import React$1, { useCallback } from 'react';\nimport { useFeatures } from '../../../../utilities/features/hooks.js';\nimport { classNames } from '../../../../utilities/css.js';\nimport { Scrollable as Scrollable$1 } from '../../../Scrollable/Scrollable.js';\nimport { useToggle as useToggle$1 } from '../../../../utilities/use-toggle.js';\nimport { Checkbox as Checkbox$1 } from '../Checkbox/Checkbox.js';\nimport styles from './Option.scss.js';\n\nvar _ref = /*#__PURE__*/React$1.createElement(Scrollable$1.ScrollTo, null);\n\nfunction Option({\n  label,\n  value,\n  id,\n  select,\n  active,\n  allowMultiple,\n  disabled,\n  role,\n  media,\n  onClick,\n  section,\n  index\n}) {\n  const {\n    value: focused,\n    toggle: toggleFocused\n  } = useToggle$1(false);\n  const {\n    newDesignLanguage\n  } = useFeatures();\n  const handleClick = useCallback(() => {\n    if (disabled) {\n      return;\n    }\n\n    onClick(section, index);\n  }, [disabled, index, onClick, section]);\n  const mediaMarkup = media ? /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Media\n  }, media) : null;\n  const singleSelectClassName = classNames(styles.SingleSelectOption, focused && styles.focused, disabled && styles.disabled, select && styles.select, active && styles.active);\n  const multiSelectClassName = classNames(styles.Label, disabled && styles.disabled, active && styles.active, newDesignLanguage && select && styles.select);\n  const checkBoxRole = role === 'option' ? 'presentation' : undefined;\n  const optionMarkup = allowMultiple ? /*#__PURE__*/React$1.createElement(\"label\", {\n    htmlFor: id,\n    className: multiSelectClassName\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Checkbox\n  }, /*#__PURE__*/React$1.createElement(Checkbox$1, {\n    id: id,\n    value: value,\n    checked: select,\n    active: active,\n    disabled: disabled,\n    onChange: handleClick,\n    role: checkBoxRole\n  })), mediaMarkup, label) : /*#__PURE__*/React$1.createElement(\"button\", {\n    id: id,\n    type: \"button\",\n    className: singleSelectClassName,\n    onClick: handleClick,\n    disabled: disabled,\n    onFocus: toggleFocused,\n    onBlur: toggleFocused\n  }, mediaMarkup, label);\n  const scrollMarkup = active ? _ref : null;\n  const optionClassName = classNames(styles.Option, newDesignLanguage && styles.newDesignLanguage);\n  return /*#__PURE__*/React$1.createElement(\"li\", {\n    key: id,\n    className: optionClassName,\n    tabIndex: -1,\n    \"aria-selected\": active,\n    role: role\n  }, scrollMarkup, optionMarkup);\n}\n\nexport { Option };\n"]},"metadata":{},"sourceType":"module"}