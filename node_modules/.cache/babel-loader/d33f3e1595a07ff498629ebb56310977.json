{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction hueRotationFn(rotation) {\n  return hue => (360 + hue + rotation) % 360;\n}\n\nexports.hueRotationFn = hueRotationFn;\n\nfunction saturationAdjustmentFn(adjustment) {\n  return saturation => Math.min(Math.max(saturation + adjustment, 0), 100);\n}\n\nexports.saturationAdjustmentFn = saturationAdjustmentFn;\n\nfunction mergeConfigs(base, extended) {\n  return Object.entries(base).reduce((accumulator, [role, variants]) => {\n    const extendedVariants = extended[role];\n    const mergedVariants = variants;\n\n    if (extendedVariants != null) {\n      extendedVariants.forEach(variant => {\n        const {\n          name\n        } = variant;\n        const indexToReplace = mergedVariants.findIndex(baseVariant => baseVariant.name === name);\n\n        if (indexToReplace === -1) {\n          mergedVariants.push(variant);\n        } else {\n          mergedVariants.splice(indexToReplace, 1, variant);\n        }\n      });\n    }\n\n    return Object.assign(Object.assign({}, accumulator), {\n      [role]: mergedVariants\n    });\n  }, {});\n}\n\nexports.mergeConfigs = mergeConfigs;","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/polaris-tokens/dist-modern/utils.js"],"names":["Object","defineProperty","exports","value","hueRotationFn","rotation","hue","saturationAdjustmentFn","adjustment","saturation","Math","min","max","mergeConfigs","base","extended","entries","reduce","accumulator","role","variants","extendedVariants","mergedVariants","forEach","variant","name","indexToReplace","findIndex","baseVariant","push","splice","assign"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,SAASC,aAAT,CAAuBC,QAAvB,EAAiC;AAC7B,SAAQC,GAAD,IAAS,CAAC,MAAMA,GAAN,GAAYD,QAAb,IAAyB,GAAzC;AACH;;AACDH,OAAO,CAACE,aAAR,GAAwBA,aAAxB;;AACA,SAASG,sBAAT,CAAgCC,UAAhC,EAA4C;AACxC,SAAQC,UAAD,IAAgBC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASH,UAAU,GAAGD,UAAtB,EAAkC,CAAlC,CAAT,EAA+C,GAA/C,CAAvB;AACH;;AACDN,OAAO,CAACK,sBAAR,GAAiCA,sBAAjC;;AACA,SAASM,YAAT,CAAsBC,IAAtB,EAA4BC,QAA5B,EAAsC;AAClC,SAAOf,MAAM,CAACgB,OAAP,CAAeF,IAAf,EAAqBG,MAArB,CAA4B,CAACC,WAAD,EAAc,CAACC,IAAD,EAAOC,QAAP,CAAd,KAAmC;AAClE,UAAMC,gBAAgB,GAAGN,QAAQ,CAACI,IAAD,CAAjC;AACA,UAAMG,cAAc,GAAGF,QAAvB;;AACA,QAAIC,gBAAgB,IAAI,IAAxB,EAA8B;AAC1BA,MAAAA,gBAAgB,CAACE,OAAjB,CAA0BC,OAAD,IAAa;AAClC,cAAM;AAAEC,UAAAA;AAAF,YAAWD,OAAjB;AACA,cAAME,cAAc,GAAGJ,cAAc,CAACK,SAAf,CAA0BC,WAAD,IAAiBA,WAAW,CAACH,IAAZ,KAAqBA,IAA/D,CAAvB;;AACA,YAAIC,cAAc,KAAK,CAAC,CAAxB,EAA2B;AACvBJ,UAAAA,cAAc,CAACO,IAAf,CAAoBL,OAApB;AACH,SAFD,MAGK;AACDF,UAAAA,cAAc,CAACQ,MAAf,CAAsBJ,cAAtB,EAAsC,CAAtC,EAAyCF,OAAzC;AACH;AACJ,OATD;AAUH;;AACD,WAAOxB,MAAM,CAAC+B,MAAP,CAAc/B,MAAM,CAAC+B,MAAP,CAAc,EAAd,EAAkBb,WAAlB,CAAd,EAA8C;AAAE,OAACC,IAAD,GAAQG;AAAV,KAA9C,CAAP;AACH,GAhBM,EAgBJ,EAhBI,CAAP;AAiBH;;AACDpB,OAAO,CAACW,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction hueRotationFn(rotation) {\n    return (hue) => (360 + hue + rotation) % 360;\n}\nexports.hueRotationFn = hueRotationFn;\nfunction saturationAdjustmentFn(adjustment) {\n    return (saturation) => Math.min(Math.max(saturation + adjustment, 0), 100);\n}\nexports.saturationAdjustmentFn = saturationAdjustmentFn;\nfunction mergeConfigs(base, extended) {\n    return Object.entries(base).reduce((accumulator, [role, variants]) => {\n        const extendedVariants = extended[role];\n        const mergedVariants = variants;\n        if (extendedVariants != null) {\n            extendedVariants.forEach((variant) => {\n                const { name } = variant;\n                const indexToReplace = mergedVariants.findIndex((baseVariant) => baseVariant.name === name);\n                if (indexToReplace === -1) {\n                    mergedVariants.push(variant);\n                }\n                else {\n                    mergedVariants.splice(indexToReplace, 1, variant);\n                }\n            });\n        }\n        return Object.assign(Object.assign({}, accumulator), { [role]: mergedVariants });\n    }, {});\n}\nexports.mergeConfigs = mergeConfigs;\n"]},"metadata":{},"sourceType":"script"}