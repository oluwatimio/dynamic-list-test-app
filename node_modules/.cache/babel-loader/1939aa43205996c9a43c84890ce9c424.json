{"ast":null,"code":"import { objectWithoutProperties as _objectWithoutProperties, objectSpread2 as _objectSpread2 } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport tokens$1 from '@shopify/polaris-tokens';\nimport { colorFactory } from '@shopify/polaris-tokens/dist-modern';\nimport { mergeConfigs } from '@shopify/polaris-tokens/dist-modern/utils';\nimport { config as config$1 } from '@shopify/polaris-tokens/dist-modern/configs/base';\nimport { colorToHsla, hslToRgb, hslToString } from '../color-transformers.js';\nimport { isLight } from '../color-validation.js';\nimport { constructColorName } from '../color-names.js';\nimport { createLightColor } from '../color-manipulation.js';\nimport { needsVariantList } from './config.js';\n\nfunction buildCustomPropertiesNoMemo(themeConfig, newDesignLanguage, tokens) {\n  const {\n    colors = {},\n    colorScheme,\n    config,\n    frameOffset = 0\n  } = themeConfig;\n  const mergedConfig = mergeConfigs(config$1, config || {});\n  return newDesignLanguage ? customPropertyTransformer(_objectSpread2(_objectSpread2(_objectSpread2({}, colorFactory(colors, colorScheme, mergedConfig)), tokens), {}, {\n    frameOffset: `${frameOffset}px`\n  })) : _objectSpread2(_objectSpread2({}, buildLegacyColors(themeConfig)), customPropertyTransformer({\n    frameOffset: `${frameOffset}px`\n  }));\n}\n\nfunction buildThemeContext(themeConfig, cssCustomProperties) {\n  const {\n    logo,\n    colors = {},\n    colorScheme\n  } = themeConfig;\n\n  const newDesignLanguageColors = _objectWithoutProperties(colors, [\"topBar\"]);\n\n  return {\n    logo,\n    cssCustomProperties: toString(cssCustomProperties),\n    colors: newDesignLanguageColors,\n    colorScheme\n  };\n}\n\nfunction toString(obj) {\n  if (obj) {\n    return Object.entries(obj).map(pair => pair.join(':')).join(';');\n  } else {\n    return undefined;\n  }\n}\n\nfunction customPropertyTransformer(properties) {\n  return Object.entries(properties).reduce((transformed, [key, value]) => _objectSpread2(_objectSpread2({}, transformed), {}, {\n    [toCssCustomPropertySyntax(key)]: value\n  }), {});\n}\n\nfunction toCssCustomPropertySyntax(camelCase) {\n  return `--p-${camelCase.replace(/([A-Z0-9])/g, '-$1').toLowerCase()}`;\n}\n\nfunction buildLegacyColors(theme) {\n  let colorPairs;\n  const colors = theme && theme.colors && theme.colors.topBar ? theme.colors.topBar : {\n    background: '#00848e',\n    backgroundLighter: '#1d9ba4',\n    color: '#f9fafb'\n  };\n  const colorKey = 'topBar';\n  const colorKeys = Object.keys(colors);\n\n  if (colorKeys.length > 1) {\n    colorPairs = colorKeys.map(key => {\n      return [constructColorName(colorKey, key), colors[key]];\n    });\n  } else {\n    colorPairs = parseColors([colorKey, colors]);\n  }\n\n  return colorPairs.reduce((state, [key, value]) => _objectSpread2(_objectSpread2({}, state), {}, {\n    [key]: value\n  }), {});\n}\n\nfunction needsVariant(name) {\n  return needsVariantList.includes(name);\n}\n\nfunction lightenToString(color, lightness, saturation) {\n  return hslToString(createLightColor(color, lightness, saturation));\n}\n\nfunction setTextColor(name, variant = 'dark') {\n  if (variant === 'light') {\n    return [name, tokens$1.colorInk];\n  }\n\n  return [name, tokens$1.colorWhite];\n}\n\nfunction setBorderColor(name, variant = 'dark') {\n  if (variant === 'light') {\n    return [name, tokens$1.colorInkLighter];\n  }\n\n  return [name, tokens$1.colorSkyDark];\n}\n\nfunction setTheme(color, baseName, key, variant) {\n  const colorPairs = [];\n\n  switch (variant) {\n    case 'light':\n      colorPairs.push(setTextColor(constructColorName(baseName, null, 'color'), 'light'));\n      colorPairs.push(setBorderColor(constructColorName(baseName, null, 'border'), 'light'));\n      colorPairs.push([constructColorName(baseName, key, 'lighter'), lightenToString(color, 7, -10)]);\n      break;\n\n    case 'dark':\n      colorPairs.push(setTextColor(constructColorName(baseName, null, 'color'), 'dark'));\n      colorPairs.push(setBorderColor(constructColorName(baseName, null, 'border'), 'dark'));\n      colorPairs.push([constructColorName(baseName, key, 'lighter'), lightenToString(color, 15, 15)]);\n      break;\n  }\n\n  return colorPairs;\n}\n\nfunction parseColors([baseName, colors]) {\n  const keys = Object.keys(colors);\n  const colorPairs = [];\n\n  for (const key of keys) {\n    colorPairs.push([constructColorName(baseName, key), colors[key]]);\n\n    if (needsVariant(baseName)) {\n      const hslColor = colorToHsla(colors[key]);\n\n      if (typeof hslColor === 'string') {\n        return colorPairs;\n      }\n\n      const rgbColor = hslToRgb(hslColor);\n\n      if (isLight(rgbColor)) {\n        colorPairs.push(...setTheme(hslColor, baseName, key, 'light'));\n      } else {\n        colorPairs.push(...setTheme(hslColor, baseName, key, 'dark'));\n      }\n    }\n  }\n\n  return colorPairs;\n} // eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction memoize(fnToMemoize) {\n  const cache = new Map();\n  return function (...args) {\n    const key = JSON.stringify([fnToMemoize.name, args]);\n\n    if (cache.get(key) === undefined) {\n      cache.set(key, fnToMemoize(...args));\n    }\n\n    return cache.get(key);\n  };\n}\n\nconst buildCustomProperties = memoize(buildCustomPropertiesNoMemo);\nexport { buildCustomProperties, buildCustomPropertiesNoMemo, buildThemeContext, needsVariant, setBorderColor, setTextColor, setTheme, toCssCustomPropertySyntax, toString };","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/polaris/dist/esm/utilities/theme/utils.js"],"names":["objectWithoutProperties","_objectWithoutProperties","objectSpread2","_objectSpread2","tokens$1","colorFactory","mergeConfigs","config","config$1","colorToHsla","hslToRgb","hslToString","isLight","constructColorName","createLightColor","needsVariantList","buildCustomPropertiesNoMemo","themeConfig","newDesignLanguage","tokens","colors","colorScheme","frameOffset","mergedConfig","customPropertyTransformer","buildLegacyColors","buildThemeContext","cssCustomProperties","logo","newDesignLanguageColors","toString","obj","Object","entries","map","pair","join","undefined","properties","reduce","transformed","key","value","toCssCustomPropertySyntax","camelCase","replace","toLowerCase","theme","colorPairs","topBar","background","backgroundLighter","color","colorKey","colorKeys","keys","length","parseColors","state","needsVariant","name","includes","lightenToString","lightness","saturation","setTextColor","variant","colorInk","colorWhite","setBorderColor","colorInkLighter","colorSkyDark","setTheme","baseName","push","hslColor","rgbColor","memoize","fnToMemoize","cache","Map","args","JSON","stringify","get","set","buildCustomProperties"],"mappings":"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","sourcesContent":["import { objectWithoutProperties as _objectWithoutProperties, objectSpread2 as _objectSpread2 } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport tokens$1 from '@shopify/polaris-tokens';\nimport { colorFactory } from '@shopify/polaris-tokens/dist-modern';\nimport { mergeConfigs } from '@shopify/polaris-tokens/dist-modern/utils';\nimport { config as config$1 } from '@shopify/polaris-tokens/dist-modern/configs/base';\nimport { colorToHsla, hslToRgb, hslToString } from '../color-transformers.js';\nimport { isLight } from '../color-validation.js';\nimport { constructColorName } from '../color-names.js';\nimport { createLightColor } from '../color-manipulation.js';\nimport { needsVariantList } from './config.js';\n\nfunction buildCustomPropertiesNoMemo(themeConfig, newDesignLanguage, tokens) {\n  const {\n    colors = {},\n    colorScheme,\n    config,\n    frameOffset = 0\n  } = themeConfig;\n  const mergedConfig = mergeConfigs(config$1, config || {});\n  return newDesignLanguage ? customPropertyTransformer(_objectSpread2(_objectSpread2(_objectSpread2({}, colorFactory(colors, colorScheme, mergedConfig)), tokens), {}, {\n    frameOffset: `${frameOffset}px`\n  })) : _objectSpread2(_objectSpread2({}, buildLegacyColors(themeConfig)), customPropertyTransformer({\n    frameOffset: `${frameOffset}px`\n  }));\n}\nfunction buildThemeContext(themeConfig, cssCustomProperties) {\n  const {\n    logo,\n    colors = {},\n    colorScheme\n  } = themeConfig;\n\n  const newDesignLanguageColors = _objectWithoutProperties(colors, [\"topBar\"]);\n\n  return {\n    logo,\n    cssCustomProperties: toString(cssCustomProperties),\n    colors: newDesignLanguageColors,\n    colorScheme\n  };\n}\nfunction toString(obj) {\n  if (obj) {\n    return Object.entries(obj).map(pair => pair.join(':')).join(';');\n  } else {\n    return undefined;\n  }\n}\n\nfunction customPropertyTransformer(properties) {\n  return Object.entries(properties).reduce((transformed, [key, value]) => _objectSpread2(_objectSpread2({}, transformed), {}, {\n    [toCssCustomPropertySyntax(key)]: value\n  }), {});\n}\n\nfunction toCssCustomPropertySyntax(camelCase) {\n  return `--p-${camelCase.replace(/([A-Z0-9])/g, '-$1').toLowerCase()}`;\n}\n\nfunction buildLegacyColors(theme) {\n  let colorPairs;\n  const colors = theme && theme.colors && theme.colors.topBar ? theme.colors.topBar : {\n    background: '#00848e',\n    backgroundLighter: '#1d9ba4',\n    color: '#f9fafb'\n  };\n  const colorKey = 'topBar';\n  const colorKeys = Object.keys(colors);\n\n  if (colorKeys.length > 1) {\n    colorPairs = colorKeys.map(key => {\n      return [constructColorName(colorKey, key), colors[key]];\n    });\n  } else {\n    colorPairs = parseColors([colorKey, colors]);\n  }\n\n  return colorPairs.reduce((state, [key, value]) => _objectSpread2(_objectSpread2({}, state), {}, {\n    [key]: value\n  }), {});\n}\n\nfunction needsVariant(name) {\n  return needsVariantList.includes(name);\n}\n\nfunction lightenToString(color, lightness, saturation) {\n  return hslToString(createLightColor(color, lightness, saturation));\n}\n\nfunction setTextColor(name, variant = 'dark') {\n  if (variant === 'light') {\n    return [name, tokens$1.colorInk];\n  }\n\n  return [name, tokens$1.colorWhite];\n}\nfunction setBorderColor(name, variant = 'dark') {\n  if (variant === 'light') {\n    return [name, tokens$1.colorInkLighter];\n  }\n\n  return [name, tokens$1.colorSkyDark];\n}\nfunction setTheme(color, baseName, key, variant) {\n  const colorPairs = [];\n\n  switch (variant) {\n    case 'light':\n      colorPairs.push(setTextColor(constructColorName(baseName, null, 'color'), 'light'));\n      colorPairs.push(setBorderColor(constructColorName(baseName, null, 'border'), 'light'));\n      colorPairs.push([constructColorName(baseName, key, 'lighter'), lightenToString(color, 7, -10)]);\n      break;\n\n    case 'dark':\n      colorPairs.push(setTextColor(constructColorName(baseName, null, 'color'), 'dark'));\n      colorPairs.push(setBorderColor(constructColorName(baseName, null, 'border'), 'dark'));\n      colorPairs.push([constructColorName(baseName, key, 'lighter'), lightenToString(color, 15, 15)]);\n      break;\n  }\n\n  return colorPairs;\n}\n\nfunction parseColors([baseName, colors]) {\n  const keys = Object.keys(colors);\n  const colorPairs = [];\n\n  for (const key of keys) {\n    colorPairs.push([constructColorName(baseName, key), colors[key]]);\n\n    if (needsVariant(baseName)) {\n      const hslColor = colorToHsla(colors[key]);\n\n      if (typeof hslColor === 'string') {\n        return colorPairs;\n      }\n\n      const rgbColor = hslToRgb(hslColor);\n\n      if (isLight(rgbColor)) {\n        colorPairs.push(...setTheme(hslColor, baseName, key, 'light'));\n      } else {\n        colorPairs.push(...setTheme(hslColor, baseName, key, 'dark'));\n      }\n    }\n  }\n\n  return colorPairs;\n} // eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction memoize(fnToMemoize) {\n  const cache = new Map();\n  return function (...args) {\n    const key = JSON.stringify([fnToMemoize.name, args]);\n\n    if (cache.get(key) === undefined) {\n      cache.set(key, fnToMemoize(...args));\n    }\n\n    return cache.get(key);\n  };\n}\n\nconst buildCustomProperties = memoize(buildCustomPropertiesNoMemo);\n\nexport { buildCustomProperties, buildCustomPropertiesNoMemo, buildThemeContext, needsVariant, setBorderColor, setTextColor, setTheme, toCssCustomPropertySyntax, toString };\n"]},"metadata":{},"sourceType":"module"}