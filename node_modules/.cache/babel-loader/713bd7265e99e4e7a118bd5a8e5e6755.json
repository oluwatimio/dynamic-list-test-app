{"ast":null,"code":"import { objectSpread2 as _objectSpread2 } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React$1, { PureComponent, createRef } from 'react';\nimport debounce$1 from 'lodash/debounce';\nimport { EventListener as EventListener$1 } from '../EventListener/EventListener.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { headerCell } from '../shared.js';\nimport { classNames } from '../../utilities/css.js';\nimport isEqual$1 from 'lodash/isEqual';\nimport styles from './DataTable.scss.js';\nimport { Cell as Cell$1 } from './components/Cell/Cell.js';\nimport { Navigation as Navigation$1 } from './components/Navigation/Navigation.js';\nimport { measureColumn, getPrevAndCurrentColumns } from './utilities.js';\n\nclass DataTableInner extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      condensed: false,\n      columnVisibilityData: [],\n      isScrolledFarthestLeft: true,\n      isScrolledFarthestRight: false\n    };\n    this.dataTable = /*#__PURE__*/createRef();\n    this.scrollContainer = /*#__PURE__*/createRef();\n    this.table = /*#__PURE__*/createRef();\n    this.handleResize = debounce$1(() => {\n      const {\n        table: {\n          current: table\n        },\n        scrollContainer: {\n          current: scrollContainer\n        }\n      } = this;\n      let condensed = false;\n\n      if (table && scrollContainer) {\n        condensed = table.scrollWidth > scrollContainer.clientWidth;\n      }\n\n      this.setState(_objectSpread2({\n        condensed\n      }, this.calculateColumnVisibilityData(condensed)));\n    });\n\n    this.calculateColumnVisibilityData = condensed => {\n      const {\n        table: {\n          current: table\n        },\n        scrollContainer: {\n          current: scrollContainer\n        },\n        dataTable: {\n          current: dataTable\n        }\n      } = this;\n\n      if (condensed && table && scrollContainer && dataTable) {\n        const headerCells = table.querySelectorAll(headerCell.selector);\n\n        if (headerCells.length > 0) {\n          const firstVisibleColumnIndex = headerCells.length - 1;\n          const tableLeftVisibleEdge = scrollContainer.scrollLeft;\n          const tableRightVisibleEdge = scrollContainer.scrollLeft + dataTable.offsetWidth;\n          const tableData = {\n            firstVisibleColumnIndex,\n            tableLeftVisibleEdge,\n            tableRightVisibleEdge\n          };\n          const columnVisibilityData = [...headerCells].map(measureColumn(tableData));\n          const lastColumn = columnVisibilityData[columnVisibilityData.length - 1];\n          return _objectSpread2(_objectSpread2({\n            columnVisibilityData\n          }, getPrevAndCurrentColumns(tableData, columnVisibilityData)), {}, {\n            isScrolledFarthestLeft: tableLeftVisibleEdge === 0,\n            isScrolledFarthestRight: lastColumn.rightEdge <= tableRightVisibleEdge\n          });\n        }\n      }\n\n      return {\n        columnVisibilityData: [],\n        previousColumn: undefined,\n        currentColumn: undefined\n      };\n    };\n\n    this.scrollListener = () => {\n      this.setState(prevState => _objectSpread2({}, this.calculateColumnVisibilityData(prevState.condensed)));\n    };\n\n    this.navigateTable = direction => {\n      const {\n        currentColumn,\n        previousColumn\n      } = this.state;\n      const {\n        current: scrollContainer\n      } = this.scrollContainer;\n\n      const handleScroll = () => {\n        if (!currentColumn || !previousColumn) {\n          return;\n        }\n\n        if (scrollContainer) {\n          scrollContainer.scrollLeft = direction === 'right' ? currentColumn.rightEdge : previousColumn.leftEdge;\n          requestAnimationFrame(() => {\n            this.setState(prevState => _objectSpread2({}, this.calculateColumnVisibilityData(prevState.condensed)));\n          });\n        }\n      };\n\n      return handleScroll;\n    };\n\n    this.renderHeadings = (heading, headingIndex) => {\n      const {\n        sortable,\n        truncate = false,\n        columnContentTypes,\n        defaultSortDirection,\n        initialSortColumnIndex = 0,\n        verticalAlign\n      } = this.props;\n      const {\n        sortDirection = defaultSortDirection,\n        sortedColumnIndex = initialSortColumnIndex\n      } = this.state;\n      let sortableHeadingProps;\n      const id = `heading-cell-${headingIndex}`;\n\n      if (sortable) {\n        const isSortable = sortable[headingIndex];\n        const isSorted = isSortable && sortedColumnIndex === headingIndex;\n        const direction = isSorted ? sortDirection : 'none';\n        sortableHeadingProps = {\n          defaultSortDirection,\n          sorted: isSorted,\n          sortable: isSortable,\n          sortDirection: direction,\n          onSort: this.defaultOnSort(headingIndex)\n        };\n      }\n\n      return /*#__PURE__*/React$1.createElement(Cell$1, Object.assign({\n        header: true,\n        key: id,\n        content: heading,\n        contentType: columnContentTypes[headingIndex],\n        firstColumn: headingIndex === 0,\n        truncate: truncate\n      }, sortableHeadingProps, {\n        verticalAlign: verticalAlign\n      }));\n    };\n\n    this.totalsRowHeading = () => {\n      const {\n        i18n,\n        totals,\n        totalsName\n      } = this.props;\n      const totalsLabel = totalsName ? totalsName : {\n        singular: i18n.translate('Polaris.DataTable.totalRowHeading'),\n        plural: i18n.translate('Polaris.DataTable.totalsRowHeading')\n      };\n      return totals && totals.filter(total => total !== '').length > 1 ? totalsLabel.plural : totalsLabel.singular;\n    };\n\n    this.renderTotals = (total, index) => {\n      const id = `totals-cell-${index}`;\n      const {\n        truncate = false,\n        verticalAlign\n      } = this.props;\n      let content;\n      let contentType;\n\n      if (index === 0) {\n        content = this.totalsRowHeading();\n      }\n\n      if (total !== '' && index > 0) {\n        contentType = 'numeric';\n        content = total;\n      }\n\n      const totalInFooter = this.props.showTotalsInFooter;\n      return /*#__PURE__*/React$1.createElement(Cell$1, {\n        total: true,\n        totalInFooter: totalInFooter,\n        firstColumn: index === 0,\n        key: id,\n        content: content,\n        contentType: contentType,\n        truncate: truncate,\n        verticalAlign: verticalAlign\n      });\n    };\n\n    this.defaultRenderRow = (row, index) => {\n      const className = classNames(styles.TableRow);\n      const {\n        columnContentTypes,\n        truncate = false,\n        verticalAlign\n      } = this.props;\n      return /*#__PURE__*/React$1.createElement(\"tr\", {\n        key: `row-${index}`,\n        className: className\n      }, row.map((content, cellIndex) => {\n        const id = `cell-${cellIndex}-row-${index}`;\n        return /*#__PURE__*/React$1.createElement(Cell$1, {\n          key: id,\n          content: content,\n          contentType: columnContentTypes[cellIndex],\n          firstColumn: cellIndex === 0,\n          truncate: truncate,\n          verticalAlign: verticalAlign\n        });\n      }));\n    };\n\n    this.defaultOnSort = headingIndex => {\n      const {\n        onSort,\n        defaultSortDirection = 'ascending',\n        initialSortColumnIndex\n      } = this.props;\n      const {\n        sortDirection = defaultSortDirection,\n        sortedColumnIndex = initialSortColumnIndex\n      } = this.state;\n      let newSortDirection = defaultSortDirection;\n\n      if (sortedColumnIndex === headingIndex) {\n        newSortDirection = sortDirection === 'ascending' ? 'descending' : 'ascending';\n      }\n\n      const handleSort = () => {\n        this.setState({\n          sortDirection: newSortDirection,\n          sortedColumnIndex: headingIndex\n        }, () => {\n          if (onSort) {\n            onSort(headingIndex, newSortDirection);\n          }\n        });\n      };\n\n      return handleSort;\n    };\n  }\n\n  componentDidMount() {\n    // We need to defer the calculation in development so the styles have time to be injected.\n    if (process.env.NODE_ENV === 'development') {\n      setTimeout(() => {\n        this.handleResize();\n      }, 10);\n    } else {\n      this.handleResize();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (isEqual$1(prevProps, this.props)) {\n      return;\n    }\n\n    this.handleResize();\n  }\n\n  render() {\n    const {\n      headings,\n      totals,\n      showTotalsInFooter,\n      rows,\n      footerContent,\n      hideScrollIndicator = false\n    } = this.props;\n    const {\n      condensed,\n      columnVisibilityData,\n      isScrolledFarthestLeft,\n      isScrolledFarthestRight\n    } = this.state;\n    const className = classNames(styles.DataTable, condensed && styles.condensed);\n    const wrapperClassName = classNames(styles.TableWrapper, condensed && styles.condensed);\n    const headingMarkup = /*#__PURE__*/React$1.createElement(\"tr\", null, headings.map(this.renderHeadings));\n    const totalsMarkup = totals ? /*#__PURE__*/React$1.createElement(\"tr\", null, totals.map(this.renderTotals)) : null;\n    const bodyMarkup = rows.map(this.defaultRenderRow);\n    const footerMarkup = footerContent ? /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Footer\n    }, footerContent) : null;\n    const headerTotalsMarkup = !showTotalsInFooter ? totalsMarkup : null;\n    const footerTotalsMarkup = showTotalsInFooter ? /*#__PURE__*/React$1.createElement(\"tfoot\", null, totalsMarkup) : null;\n    const navigationMarkup = hideScrollIndicator ? null : /*#__PURE__*/React$1.createElement(Navigation$1, {\n      columnVisibilityData: columnVisibilityData,\n      isScrolledFarthestLeft: isScrolledFarthestLeft,\n      isScrolledFarthestRight: isScrolledFarthestRight,\n      navigateTableLeft: this.navigateTable('left'),\n      navigateTableRight: this.navigateTable('right')\n    });\n    return /*#__PURE__*/React$1.createElement(\"div\", {\n      className: wrapperClassName\n    }, navigationMarkup, /*#__PURE__*/React$1.createElement(\"div\", {\n      className: className,\n      ref: this.dataTable\n    }, /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.ScrollContainer,\n      ref: this.scrollContainer\n    }, /*#__PURE__*/React$1.createElement(EventListener$1, {\n      event: \"resize\",\n      handler: this.handleResize\n    }), /*#__PURE__*/React$1.createElement(EventListener$1, {\n      capture: true,\n      event: \"scroll\",\n      handler: this.scrollListener\n    }), /*#__PURE__*/React$1.createElement(\"table\", {\n      className: styles.Table,\n      ref: this.table\n    }, /*#__PURE__*/React$1.createElement(\"thead\", null, headingMarkup, headerTotalsMarkup), /*#__PURE__*/React$1.createElement(\"tbody\", null, bodyMarkup), footerTotalsMarkup)), footerMarkup));\n  }\n\n}\n\nfunction DataTable(props) {\n  const i18n = useI18n();\n  return /*#__PURE__*/React$1.createElement(DataTableInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\n\nexport { DataTable };","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/polaris/dist/esm/components/DataTable/DataTable.js"],"names":["objectSpread2","_objectSpread2","React$1","PureComponent","createRef","debounce$1","EventListener","EventListener$1","useI18n","headerCell","classNames","isEqual$1","styles","Cell","Cell$1","Navigation","Navigation$1","measureColumn","getPrevAndCurrentColumns","DataTableInner","constructor","args","state","condensed","columnVisibilityData","isScrolledFarthestLeft","isScrolledFarthestRight","dataTable","scrollContainer","table","handleResize","current","scrollWidth","clientWidth","setState","calculateColumnVisibilityData","headerCells","querySelectorAll","selector","length","firstVisibleColumnIndex","tableLeftVisibleEdge","scrollLeft","tableRightVisibleEdge","offsetWidth","tableData","map","lastColumn","rightEdge","previousColumn","undefined","currentColumn","scrollListener","prevState","navigateTable","direction","handleScroll","leftEdge","requestAnimationFrame","renderHeadings","heading","headingIndex","sortable","truncate","columnContentTypes","defaultSortDirection","initialSortColumnIndex","verticalAlign","props","sortDirection","sortedColumnIndex","sortableHeadingProps","id","isSortable","isSorted","sorted","onSort","defaultOnSort","createElement","Object","assign","header","key","content","contentType","firstColumn","totalsRowHeading","i18n","totals","totalsName","totalsLabel","singular","translate","plural","filter","total","renderTotals","index","totalInFooter","showTotalsInFooter","defaultRenderRow","row","className","TableRow","cellIndex","newSortDirection","handleSort","componentDidMount","process","env","NODE_ENV","setTimeout","componentDidUpdate","prevProps","render","headings","rows","footerContent","hideScrollIndicator","DataTable","wrapperClassName","TableWrapper","headingMarkup","totalsMarkup","bodyMarkup","footerMarkup","Footer","headerTotalsMarkup","footerTotalsMarkup","navigationMarkup","navigateTableLeft","navigateTableRight","ref","ScrollContainer","event","handler","capture","Table"],"mappings":"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","sourcesContent":["import { objectSpread2 as _objectSpread2 } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React$1, { PureComponent, createRef } from 'react';\nimport debounce$1 from 'lodash/debounce';\nimport { EventListener as EventListener$1 } from '../EventListener/EventListener.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { headerCell } from '../shared.js';\nimport { classNames } from '../../utilities/css.js';\nimport isEqual$1 from 'lodash/isEqual';\nimport styles from './DataTable.scss.js';\nimport { Cell as Cell$1 } from './components/Cell/Cell.js';\nimport { Navigation as Navigation$1 } from './components/Navigation/Navigation.js';\nimport { measureColumn, getPrevAndCurrentColumns } from './utilities.js';\n\nclass DataTableInner extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      condensed: false,\n      columnVisibilityData: [],\n      isScrolledFarthestLeft: true,\n      isScrolledFarthestRight: false\n    };\n    this.dataTable = /*#__PURE__*/createRef();\n    this.scrollContainer = /*#__PURE__*/createRef();\n    this.table = /*#__PURE__*/createRef();\n    this.handleResize = debounce$1(() => {\n      const {\n        table: {\n          current: table\n        },\n        scrollContainer: {\n          current: scrollContainer\n        }\n      } = this;\n      let condensed = false;\n\n      if (table && scrollContainer) {\n        condensed = table.scrollWidth > scrollContainer.clientWidth;\n      }\n\n      this.setState(_objectSpread2({\n        condensed\n      }, this.calculateColumnVisibilityData(condensed)));\n    });\n\n    this.calculateColumnVisibilityData = condensed => {\n      const {\n        table: {\n          current: table\n        },\n        scrollContainer: {\n          current: scrollContainer\n        },\n        dataTable: {\n          current: dataTable\n        }\n      } = this;\n\n      if (condensed && table && scrollContainer && dataTable) {\n        const headerCells = table.querySelectorAll(headerCell.selector);\n\n        if (headerCells.length > 0) {\n          const firstVisibleColumnIndex = headerCells.length - 1;\n          const tableLeftVisibleEdge = scrollContainer.scrollLeft;\n          const tableRightVisibleEdge = scrollContainer.scrollLeft + dataTable.offsetWidth;\n          const tableData = {\n            firstVisibleColumnIndex,\n            tableLeftVisibleEdge,\n            tableRightVisibleEdge\n          };\n          const columnVisibilityData = [...headerCells].map(measureColumn(tableData));\n          const lastColumn = columnVisibilityData[columnVisibilityData.length - 1];\n          return _objectSpread2(_objectSpread2({\n            columnVisibilityData\n          }, getPrevAndCurrentColumns(tableData, columnVisibilityData)), {}, {\n            isScrolledFarthestLeft: tableLeftVisibleEdge === 0,\n            isScrolledFarthestRight: lastColumn.rightEdge <= tableRightVisibleEdge\n          });\n        }\n      }\n\n      return {\n        columnVisibilityData: [],\n        previousColumn: undefined,\n        currentColumn: undefined\n      };\n    };\n\n    this.scrollListener = () => {\n      this.setState(prevState => _objectSpread2({}, this.calculateColumnVisibilityData(prevState.condensed)));\n    };\n\n    this.navigateTable = direction => {\n      const {\n        currentColumn,\n        previousColumn\n      } = this.state;\n      const {\n        current: scrollContainer\n      } = this.scrollContainer;\n\n      const handleScroll = () => {\n        if (!currentColumn || !previousColumn) {\n          return;\n        }\n\n        if (scrollContainer) {\n          scrollContainer.scrollLeft = direction === 'right' ? currentColumn.rightEdge : previousColumn.leftEdge;\n          requestAnimationFrame(() => {\n            this.setState(prevState => _objectSpread2({}, this.calculateColumnVisibilityData(prevState.condensed)));\n          });\n        }\n      };\n\n      return handleScroll;\n    };\n\n    this.renderHeadings = (heading, headingIndex) => {\n      const {\n        sortable,\n        truncate = false,\n        columnContentTypes,\n        defaultSortDirection,\n        initialSortColumnIndex = 0,\n        verticalAlign\n      } = this.props;\n      const {\n        sortDirection = defaultSortDirection,\n        sortedColumnIndex = initialSortColumnIndex\n      } = this.state;\n      let sortableHeadingProps;\n      const id = `heading-cell-${headingIndex}`;\n\n      if (sortable) {\n        const isSortable = sortable[headingIndex];\n        const isSorted = isSortable && sortedColumnIndex === headingIndex;\n        const direction = isSorted ? sortDirection : 'none';\n        sortableHeadingProps = {\n          defaultSortDirection,\n          sorted: isSorted,\n          sortable: isSortable,\n          sortDirection: direction,\n          onSort: this.defaultOnSort(headingIndex)\n        };\n      }\n\n      return /*#__PURE__*/React$1.createElement(Cell$1, Object.assign({\n        header: true,\n        key: id,\n        content: heading,\n        contentType: columnContentTypes[headingIndex],\n        firstColumn: headingIndex === 0,\n        truncate: truncate\n      }, sortableHeadingProps, {\n        verticalAlign: verticalAlign\n      }));\n    };\n\n    this.totalsRowHeading = () => {\n      const {\n        i18n,\n        totals,\n        totalsName\n      } = this.props;\n      const totalsLabel = totalsName ? totalsName : {\n        singular: i18n.translate('Polaris.DataTable.totalRowHeading'),\n        plural: i18n.translate('Polaris.DataTable.totalsRowHeading')\n      };\n      return totals && totals.filter(total => total !== '').length > 1 ? totalsLabel.plural : totalsLabel.singular;\n    };\n\n    this.renderTotals = (total, index) => {\n      const id = `totals-cell-${index}`;\n      const {\n        truncate = false,\n        verticalAlign\n      } = this.props;\n      let content;\n      let contentType;\n\n      if (index === 0) {\n        content = this.totalsRowHeading();\n      }\n\n      if (total !== '' && index > 0) {\n        contentType = 'numeric';\n        content = total;\n      }\n\n      const totalInFooter = this.props.showTotalsInFooter;\n      return /*#__PURE__*/React$1.createElement(Cell$1, {\n        total: true,\n        totalInFooter: totalInFooter,\n        firstColumn: index === 0,\n        key: id,\n        content: content,\n        contentType: contentType,\n        truncate: truncate,\n        verticalAlign: verticalAlign\n      });\n    };\n\n    this.defaultRenderRow = (row, index) => {\n      const className = classNames(styles.TableRow);\n      const {\n        columnContentTypes,\n        truncate = false,\n        verticalAlign\n      } = this.props;\n      return /*#__PURE__*/React$1.createElement(\"tr\", {\n        key: `row-${index}`,\n        className: className\n      }, row.map((content, cellIndex) => {\n        const id = `cell-${cellIndex}-row-${index}`;\n        return /*#__PURE__*/React$1.createElement(Cell$1, {\n          key: id,\n          content: content,\n          contentType: columnContentTypes[cellIndex],\n          firstColumn: cellIndex === 0,\n          truncate: truncate,\n          verticalAlign: verticalAlign\n        });\n      }));\n    };\n\n    this.defaultOnSort = headingIndex => {\n      const {\n        onSort,\n        defaultSortDirection = 'ascending',\n        initialSortColumnIndex\n      } = this.props;\n      const {\n        sortDirection = defaultSortDirection,\n        sortedColumnIndex = initialSortColumnIndex\n      } = this.state;\n      let newSortDirection = defaultSortDirection;\n\n      if (sortedColumnIndex === headingIndex) {\n        newSortDirection = sortDirection === 'ascending' ? 'descending' : 'ascending';\n      }\n\n      const handleSort = () => {\n        this.setState({\n          sortDirection: newSortDirection,\n          sortedColumnIndex: headingIndex\n        }, () => {\n          if (onSort) {\n            onSort(headingIndex, newSortDirection);\n          }\n        });\n      };\n\n      return handleSort;\n    };\n  }\n\n  componentDidMount() {\n    // We need to defer the calculation in development so the styles have time to be injected.\n    if (process.env.NODE_ENV === 'development') {\n      setTimeout(() => {\n        this.handleResize();\n      }, 10);\n    } else {\n      this.handleResize();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (isEqual$1(prevProps, this.props)) {\n      return;\n    }\n\n    this.handleResize();\n  }\n\n  render() {\n    const {\n      headings,\n      totals,\n      showTotalsInFooter,\n      rows,\n      footerContent,\n      hideScrollIndicator = false\n    } = this.props;\n    const {\n      condensed,\n      columnVisibilityData,\n      isScrolledFarthestLeft,\n      isScrolledFarthestRight\n    } = this.state;\n    const className = classNames(styles.DataTable, condensed && styles.condensed);\n    const wrapperClassName = classNames(styles.TableWrapper, condensed && styles.condensed);\n    const headingMarkup = /*#__PURE__*/React$1.createElement(\"tr\", null, headings.map(this.renderHeadings));\n    const totalsMarkup = totals ? /*#__PURE__*/React$1.createElement(\"tr\", null, totals.map(this.renderTotals)) : null;\n    const bodyMarkup = rows.map(this.defaultRenderRow);\n    const footerMarkup = footerContent ? /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Footer\n    }, footerContent) : null;\n    const headerTotalsMarkup = !showTotalsInFooter ? totalsMarkup : null;\n    const footerTotalsMarkup = showTotalsInFooter ? /*#__PURE__*/React$1.createElement(\"tfoot\", null, totalsMarkup) : null;\n    const navigationMarkup = hideScrollIndicator ? null : /*#__PURE__*/React$1.createElement(Navigation$1, {\n      columnVisibilityData: columnVisibilityData,\n      isScrolledFarthestLeft: isScrolledFarthestLeft,\n      isScrolledFarthestRight: isScrolledFarthestRight,\n      navigateTableLeft: this.navigateTable('left'),\n      navigateTableRight: this.navigateTable('right')\n    });\n    return /*#__PURE__*/React$1.createElement(\"div\", {\n      className: wrapperClassName\n    }, navigationMarkup, /*#__PURE__*/React$1.createElement(\"div\", {\n      className: className,\n      ref: this.dataTable\n    }, /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.ScrollContainer,\n      ref: this.scrollContainer\n    }, /*#__PURE__*/React$1.createElement(EventListener$1, {\n      event: \"resize\",\n      handler: this.handleResize\n    }), /*#__PURE__*/React$1.createElement(EventListener$1, {\n      capture: true,\n      event: \"scroll\",\n      handler: this.scrollListener\n    }), /*#__PURE__*/React$1.createElement(\"table\", {\n      className: styles.Table,\n      ref: this.table\n    }, /*#__PURE__*/React$1.createElement(\"thead\", null, headingMarkup, headerTotalsMarkup), /*#__PURE__*/React$1.createElement(\"tbody\", null, bodyMarkup), footerTotalsMarkup)), footerMarkup));\n  }\n\n}\n\nfunction DataTable(props) {\n  const i18n = useI18n();\n  return /*#__PURE__*/React$1.createElement(DataTableInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\n\nexport { DataTable };\n"]},"metadata":{},"sourceType":"module"}