{"ast":null,"code":"import { objectWithoutProperties as _objectWithoutProperties } from '../../../../_virtual/_rollupPluginBabelHelpers.js';\nimport React$1, { useRef, useState, useCallback, useMemo, useEffect } from 'react';\nimport { useFeatures } from '../../../../utilities/features/hooks.js';\nimport debounce$1 from 'lodash/debounce';\nimport { EventListener as EventListener$1 } from '../../../EventListener/EventListener.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { classNames } from '../../../../utilities/css.js';\nimport { ButtonGroup as ButtonGroup$1 } from '../../../ButtonGroup/ButtonGroup.js';\nimport { MenuAction as MenuAction$1 } from '../MenuAction/MenuAction.js';\nimport { SecondaryAction as SecondaryAction$1 } from '../SecondaryAction/SecondaryAction.js';\nimport { MenuGroup as MenuGroup$1 } from '../MenuGroup/MenuGroup.js';\nimport styles from './Actions.scss.js';\nconst ACTION_SPACING = 8;\n\nfunction Actions({\n  actions = [],\n  groups = []\n}) {\n  const i18n = useI18n();\n  const {\n    newDesignLanguage\n  } = useFeatures();\n  const actionsLayoutRef = useRef(null);\n  const menuGroupWidthRef = useRef(0);\n  const actionWidthsRef = useRef([]);\n  const availableWidthRef = useRef(0);\n  const [activeMenuGroup, setActiveMenuGroup] = useState(undefined);\n  const [showableActions, setShowableActions] = useState([]);\n  const [rolledUpActions, setRolledUpActions] = useState([]);\n  const defaultRollupGroup = {\n    title: i18n.translate('Polaris.Actions.moreActions'),\n    actions: []\n  };\n  const lastMenuGroup = [...groups].pop();\n  const lastMenuGroupWidth = [...actionWidthsRef.current].pop() || 0;\n  const handleActionsOffsetWidth = useCallback(width => {\n    actionWidthsRef.current = [...actionWidthsRef.current, width];\n  }, []);\n  const handleMenuGroupToggle = useCallback(group => setActiveMenuGroup(activeMenuGroup ? undefined : group), [activeMenuGroup]);\n  const handleMenuGroupClose = useCallback(() => setActiveMenuGroup(undefined), []);\n  const measureActions = useCallback(() => {\n    if (!newDesignLanguage || actionWidthsRef.current.length === 0 || availableWidthRef.current === 0) {\n      return;\n    }\n\n    const actionsAndGroups = [...actions, ...groups];\n\n    if (actionsAndGroups.length === 1) {\n      setShowableActions(actionsAndGroups);\n      return;\n    }\n\n    let currentAvailableWidth = availableWidthRef.current;\n    let newShowableActions = [];\n    let newRolledUpActions = [];\n    actionsAndGroups.forEach((action, index) => {\n      const canFitAction = actionWidthsRef.current[index] + menuGroupWidthRef.current + ACTION_SPACING + lastMenuGroupWidth <= currentAvailableWidth;\n\n      if (canFitAction) {\n        currentAvailableWidth -= actionWidthsRef.current[index];\n        newShowableActions = [...newShowableActions, action];\n      } else {\n        // Find last group if it exists and always render it as a rolled up action below\n        if (action === lastMenuGroup) return;\n        currentAvailableWidth = 0;\n        newRolledUpActions = [...newRolledUpActions, action];\n      }\n    });\n    setShowableActions(newShowableActions);\n    setRolledUpActions(newRolledUpActions);\n  }, [actions, groups, lastMenuGroup, lastMenuGroupWidth, newDesignLanguage]);\n  const handleResize = useMemo(() => debounce$1(() => {\n    if (!newDesignLanguage || !actionsLayoutRef.current) return;\n    availableWidthRef.current = actionsLayoutRef.current.offsetWidth;\n    measureActions();\n  }, 20, {\n    leading: false,\n    trailing: true,\n    maxWait: 40\n  }), [newDesignLanguage, measureActions]);\n  useEffect(() => {\n    if (!actionsLayoutRef.current) {\n      return;\n    }\n\n    availableWidthRef.current = actionsLayoutRef.current.offsetWidth;\n    measureActions();\n  }, [measureActions]);\n  const className = classNames(styles.ActionsLayout, newDesignLanguage && styles.newDesignLanguage);\n  const actionsMarkup = actions.map(action => {\n    if (newDesignLanguage && showableActions.length > 0 || rolledUpActions.includes(action)) return null;\n\n    const {\n      content,\n      onAction\n    } = action,\n          rest = _objectWithoutProperties(action, [\"content\", \"onAction\"]);\n\n    return newDesignLanguage ? /*#__PURE__*/React$1.createElement(SecondaryAction$1, Object.assign({\n      key: content,\n      onClick: onAction\n    }, rest, {\n      getOffsetWidth: handleActionsOffsetWidth\n    }), content) : /*#__PURE__*/React$1.createElement(MenuAction$1, Object.assign({\n      key: content,\n      content: content,\n      onAction: onAction\n    }, rest));\n  });\n  const rollUppableActionsMarkup = showableActions.length > 0 ? showableActions.map(action => action.content && /*#__PURE__*/React$1.createElement(SecondaryAction$1, Object.assign({\n    key: action.content\n  }, action, {\n    getOffsetWidth: handleActionsOffsetWidth\n  }), action.content)) : null;\n  const groupsMarkup = [...groups, defaultRollupGroup].filter(group => {\n    return groups.length === 0 && group === defaultRollupGroup ? group : group === lastMenuGroup || group !== defaultRollupGroup && !rolledUpActions.includes(group);\n  }).map(group => {\n    const {\n      title,\n      actions: groupActions\n    } = group,\n          rest = _objectWithoutProperties(group, [\"title\", \"actions\"]);\n\n    const finalRolledUpActions = rolledUpActions.reduce((memo, action) => {\n      memo.push(...(isMenuGroup(action) ? action.actions : [action]));\n      return memo;\n    }, []);\n    const isDefaultGroup = group === defaultRollupGroup;\n\n    if (isDefaultGroup && groups.length === 0 && finalRolledUpActions.length > 0) {\n      return /*#__PURE__*/React$1.createElement(MenuGroup$1, Object.assign({\n        key: title,\n        title: title,\n        active: title === activeMenuGroup,\n        actions: [...(finalRolledUpActions || actions), ...(!isDefaultGroup ? groupActions : [])]\n      }, rest, {\n        onOpen: handleMenuGroupToggle,\n        onClose: handleMenuGroupClose,\n        getOffsetWidth: handleActionsOffsetWidth\n      }));\n    } else if (!isDefaultGroup && (groups.length > 0 || groupActions.length || actions.length)) {\n      return /*#__PURE__*/React$1.createElement(MenuGroup$1, Object.assign({\n        key: title,\n        title: title,\n        active: title === activeMenuGroup,\n        actions: [...(finalRolledUpActions || actions), ...(!isDefaultGroup ? groupActions : [])]\n      }, rest, {\n        onOpen: handleMenuGroupToggle,\n        onClose: handleMenuGroupClose,\n        getOffsetWidth: handleActionsOffsetWidth\n      }));\n    }\n  });\n  const groupedActionsMarkup = newDesignLanguage ? /*#__PURE__*/React$1.createElement(ButtonGroup$1, {\n    spacing: \"extraTight\"\n  }, rollUppableActionsMarkup, actionsMarkup, groupsMarkup) : /*#__PURE__*/React$1.createElement(React$1.Fragment, null, actionsMarkup, groupsMarkup);\n  return /*#__PURE__*/React$1.createElement(\"div\", {\n    className: className,\n    ref: actionsLayoutRef\n  }, groupedActionsMarkup, /*#__PURE__*/React$1.createElement(EventListener$1, {\n    event: \"resize\",\n    handler: handleResize\n  }));\n}\n\nfunction isMenuGroup(actionOrMenuGroup) {\n  return 'title' in actionOrMenuGroup;\n}\n\nexport { Actions };","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/polaris/dist/esm/components/ActionMenu/components/Actions/Actions.js"],"names":["objectWithoutProperties","_objectWithoutProperties","React$1","useRef","useState","useCallback","useMemo","useEffect","useFeatures","debounce$1","EventListener","EventListener$1","useI18n","classNames","ButtonGroup","ButtonGroup$1","MenuAction","MenuAction$1","SecondaryAction","SecondaryAction$1","MenuGroup","MenuGroup$1","styles","ACTION_SPACING","Actions","actions","groups","i18n","newDesignLanguage","actionsLayoutRef","menuGroupWidthRef","actionWidthsRef","availableWidthRef","activeMenuGroup","setActiveMenuGroup","undefined","showableActions","setShowableActions","rolledUpActions","setRolledUpActions","defaultRollupGroup","title","translate","lastMenuGroup","pop","lastMenuGroupWidth","current","handleActionsOffsetWidth","width","handleMenuGroupToggle","group","handleMenuGroupClose","measureActions","length","actionsAndGroups","currentAvailableWidth","newShowableActions","newRolledUpActions","forEach","action","index","canFitAction","handleResize","offsetWidth","leading","trailing","maxWait","className","ActionsLayout","actionsMarkup","map","includes","content","onAction","rest","createElement","Object","assign","key","onClick","getOffsetWidth","rollUppableActionsMarkup","groupsMarkup","filter","groupActions","finalRolledUpActions","reduce","memo","push","isMenuGroup","isDefaultGroup","active","onOpen","onClose","groupedActionsMarkup","spacing","Fragment","ref","event","handler","actionOrMenuGroup"],"mappings":"AAAA,SAASA,uBAAuB,IAAIC,wBAApC,QAAoE,mDAApE;AACA,OAAOC,OAAP,IAAkBC,MAAlB,EAA0BC,QAA1B,EAAoCC,WAApC,EAAiDC,OAAjD,EAA0DC,SAA1D,QAA2E,OAA3E;AACA,SAASC,WAAT,QAA4B,yCAA5B;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,SAASC,aAAa,IAAIC,eAA1B,QAAiD,yCAAjD;AACA,SAASC,OAAT,QAAwB,qCAAxB;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,WAAW,IAAIC,aAAxB,QAA6C,qCAA7C;AACA,SAASC,UAAU,IAAIC,YAAvB,QAA2C,6BAA3C;AACA,SAASC,eAAe,IAAIC,iBAA5B,QAAqD,uCAArD;AACA,SAASC,SAAS,IAAIC,WAAtB,QAAyC,2BAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,cAAc,GAAG,CAAvB;;AACA,SAASC,OAAT,CAAiB;AACfC,EAAAA,OAAO,GAAG,EADK;AAEfC,EAAAA,MAAM,GAAG;AAFM,CAAjB,EAGG;AACD,QAAMC,IAAI,GAAGf,OAAO,EAApB;AACA,QAAM;AACJgB,IAAAA;AADI,MAEFpB,WAAW,EAFf;AAGA,QAAMqB,gBAAgB,GAAG1B,MAAM,CAAC,IAAD,CAA/B;AACA,QAAM2B,iBAAiB,GAAG3B,MAAM,CAAC,CAAD,CAAhC;AACA,QAAM4B,eAAe,GAAG5B,MAAM,CAAC,EAAD,CAA9B;AACA,QAAM6B,iBAAiB,GAAG7B,MAAM,CAAC,CAAD,CAAhC;AACA,QAAM,CAAC8B,eAAD,EAAkBC,kBAAlB,IAAwC9B,QAAQ,CAAC+B,SAAD,CAAtD;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCjC,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACkC,eAAD,EAAkBC,kBAAlB,IAAwCnC,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAMoC,kBAAkB,GAAG;AACzBC,IAAAA,KAAK,EAAEd,IAAI,CAACe,SAAL,CAAe,6BAAf,CADkB;AAEzBjB,IAAAA,OAAO,EAAE;AAFgB,GAA3B;AAIA,QAAMkB,aAAa,GAAG,CAAC,GAAGjB,MAAJ,EAAYkB,GAAZ,EAAtB;AACA,QAAMC,kBAAkB,GAAG,CAAC,GAAGd,eAAe,CAACe,OAApB,EAA6BF,GAA7B,MAAsC,CAAjE;AACA,QAAMG,wBAAwB,GAAG1C,WAAW,CAAC2C,KAAK,IAAI;AACpDjB,IAAAA,eAAe,CAACe,OAAhB,GAA0B,CAAC,GAAGf,eAAe,CAACe,OAApB,EAA6BE,KAA7B,CAA1B;AACD,GAF2C,EAEzC,EAFyC,CAA5C;AAGA,QAAMC,qBAAqB,GAAG5C,WAAW,CAAC6C,KAAK,IAAIhB,kBAAkB,CAACD,eAAe,GAAGE,SAAH,GAAee,KAA/B,CAA5B,EAAmE,CAACjB,eAAD,CAAnE,CAAzC;AACA,QAAMkB,oBAAoB,GAAG9C,WAAW,CAAC,MAAM6B,kBAAkB,CAACC,SAAD,CAAzB,EAAsC,EAAtC,CAAxC;AACA,QAAMiB,cAAc,GAAG/C,WAAW,CAAC,MAAM;AACvC,QAAI,CAACuB,iBAAD,IAAsBG,eAAe,CAACe,OAAhB,CAAwBO,MAAxB,KAAmC,CAAzD,IAA8DrB,iBAAiB,CAACc,OAAlB,KAA8B,CAAhG,EAAmG;AACjG;AACD;;AAED,UAAMQ,gBAAgB,GAAG,CAAC,GAAG7B,OAAJ,EAAa,GAAGC,MAAhB,CAAzB;;AAEA,QAAI4B,gBAAgB,CAACD,MAAjB,KAA4B,CAAhC,EAAmC;AACjChB,MAAAA,kBAAkB,CAACiB,gBAAD,CAAlB;AACA;AACD;;AAED,QAAIC,qBAAqB,GAAGvB,iBAAiB,CAACc,OAA9C;AACA,QAAIU,kBAAkB,GAAG,EAAzB;AACA,QAAIC,kBAAkB,GAAG,EAAzB;AACAH,IAAAA,gBAAgB,CAACI,OAAjB,CAAyB,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC1C,YAAMC,YAAY,GAAG9B,eAAe,CAACe,OAAhB,CAAwBc,KAAxB,IAAiC9B,iBAAiB,CAACgB,OAAnD,GAA6DvB,cAA7D,GAA8EsB,kBAA9E,IAAoGU,qBAAzH;;AAEA,UAAIM,YAAJ,EAAkB;AAChBN,QAAAA,qBAAqB,IAAIxB,eAAe,CAACe,OAAhB,CAAwBc,KAAxB,CAAzB;AACAJ,QAAAA,kBAAkB,GAAG,CAAC,GAAGA,kBAAJ,EAAwBG,MAAxB,CAArB;AACD,OAHD,MAGO;AACL;AACA,YAAIA,MAAM,KAAKhB,aAAf,EAA8B;AAC9BY,QAAAA,qBAAqB,GAAG,CAAxB;AACAE,QAAAA,kBAAkB,GAAG,CAAC,GAAGA,kBAAJ,EAAwBE,MAAxB,CAArB;AACD;AACF,KAZD;AAaAtB,IAAAA,kBAAkB,CAACmB,kBAAD,CAAlB;AACAjB,IAAAA,kBAAkB,CAACkB,kBAAD,CAAlB;AACD,GA9BiC,EA8B/B,CAAChC,OAAD,EAAUC,MAAV,EAAkBiB,aAAlB,EAAiCE,kBAAjC,EAAqDjB,iBAArD,CA9B+B,CAAlC;AA+BA,QAAMkC,YAAY,GAAGxD,OAAO,CAAC,MAAMG,UAAU,CAAC,MAAM;AAClD,QAAI,CAACmB,iBAAD,IAAsB,CAACC,gBAAgB,CAACiB,OAA5C,EAAqD;AACrDd,IAAAA,iBAAiB,CAACc,OAAlB,GAA4BjB,gBAAgB,CAACiB,OAAjB,CAAyBiB,WAArD;AACAX,IAAAA,cAAc;AACf,GAJ4C,EAI1C,EAJ0C,EAItC;AACLY,IAAAA,OAAO,EAAE,KADJ;AAELC,IAAAA,QAAQ,EAAE,IAFL;AAGLC,IAAAA,OAAO,EAAE;AAHJ,GAJsC,CAAjB,EAQxB,CAACtC,iBAAD,EAAoBwB,cAApB,CARwB,CAA5B;AASA7C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACsB,gBAAgB,CAACiB,OAAtB,EAA+B;AAC7B;AACD;;AAEDd,IAAAA,iBAAiB,CAACc,OAAlB,GAA4BjB,gBAAgB,CAACiB,OAAjB,CAAyBiB,WAArD;AACAX,IAAAA,cAAc;AACf,GAPQ,EAON,CAACA,cAAD,CAPM,CAAT;AAQA,QAAMe,SAAS,GAAGtD,UAAU,CAACS,MAAM,CAAC8C,aAAR,EAAuBxC,iBAAiB,IAAIN,MAAM,CAACM,iBAAnD,CAA5B;AACA,QAAMyC,aAAa,GAAG5C,OAAO,CAAC6C,GAAR,CAAYX,MAAM,IAAI;AAC1C,QAAI/B,iBAAiB,IAAIQ,eAAe,CAACiB,MAAhB,GAAyB,CAA9C,IAAmDf,eAAe,CAACiC,QAAhB,CAAyBZ,MAAzB,CAAvD,EAAyF,OAAO,IAAP;;AAEzF,UAAM;AACJa,MAAAA,OADI;AAEJC,MAAAA;AAFI,QAGFd,MAHJ;AAAA,UAIMe,IAAI,GAAGzE,wBAAwB,CAAC0D,MAAD,EAAS,CAAC,SAAD,EAAY,UAAZ,CAAT,CAJrC;;AAMA,WAAO/B,iBAAiB,GAAG,aAAa1B,OAAO,CAACyE,aAAR,CAAsBxD,iBAAtB,EAAyCyD,MAAM,CAACC,MAAP,CAAc;AAC7FC,MAAAA,GAAG,EAAEN,OADwF;AAE7FO,MAAAA,OAAO,EAAEN;AAFoF,KAAd,EAG9EC,IAH8E,EAGxE;AACPM,MAAAA,cAAc,EAAEjC;AADT,KAHwE,CAAzC,EAKpCyB,OALoC,CAAhB,GAKT,aAAatE,OAAO,CAACyE,aAAR,CAAsB1D,YAAtB,EAAoC2D,MAAM,CAACC,MAAP,CAAc;AAC5EC,MAAAA,GAAG,EAAEN,OADuE;AAE5EA,MAAAA,OAAO,EAAEA,OAFmE;AAG5EC,MAAAA,QAAQ,EAAEA;AAHkE,KAAd,EAI7DC,IAJ6D,CAApC,CAL5B;AAUD,GAnBqB,CAAtB;AAoBA,QAAMO,wBAAwB,GAAG7C,eAAe,CAACiB,MAAhB,GAAyB,CAAzB,GAA6BjB,eAAe,CAACkC,GAAhB,CAAoBX,MAAM,IAAIA,MAAM,CAACa,OAAP,IAAkB,aAAatE,OAAO,CAACyE,aAAR,CAAsBxD,iBAAtB,EAAyCyD,MAAM,CAACC,MAAP,CAAc;AAChLC,IAAAA,GAAG,EAAEnB,MAAM,CAACa;AADoK,GAAd,EAEjKb,MAFiK,EAEzJ;AACTqB,IAAAA,cAAc,EAAEjC;AADP,GAFyJ,CAAzC,EAIvHY,MAAM,CAACa,OAJgH,CAA7D,CAA7B,GAIV,IAJvB;AAKA,QAAMU,YAAY,GAAG,CAAC,GAAGxD,MAAJ,EAAYc,kBAAZ,EAAgC2C,MAAhC,CAAuCjC,KAAK,IAAI;AACnE,WAAOxB,MAAM,CAAC2B,MAAP,KAAkB,CAAlB,IAAuBH,KAAK,KAAKV,kBAAjC,GAAsDU,KAAtD,GAA8DA,KAAK,KAAKP,aAAV,IAA2BO,KAAK,KAAKV,kBAAV,IAAgC,CAACF,eAAe,CAACiC,QAAhB,CAAyBrB,KAAzB,CAAjI;AACD,GAFoB,EAElBoB,GAFkB,CAEdpB,KAAK,IAAI;AACd,UAAM;AACJT,MAAAA,KADI;AAEJhB,MAAAA,OAAO,EAAE2D;AAFL,QAGFlC,KAHJ;AAAA,UAIMwB,IAAI,GAAGzE,wBAAwB,CAACiD,KAAD,EAAQ,CAAC,OAAD,EAAU,SAAV,CAAR,CAJrC;;AAMA,UAAMmC,oBAAoB,GAAG/C,eAAe,CAACgD,MAAhB,CAAuB,CAACC,IAAD,EAAO5B,MAAP,KAAkB;AACpE4B,MAAAA,IAAI,CAACC,IAAL,CAAU,IAAIC,WAAW,CAAC9B,MAAD,CAAX,GAAsBA,MAAM,CAAClC,OAA7B,GAAuC,CAACkC,MAAD,CAA3C,CAAV;AACA,aAAO4B,IAAP;AACD,KAH4B,EAG1B,EAH0B,CAA7B;AAIA,UAAMG,cAAc,GAAGxC,KAAK,KAAKV,kBAAjC;;AAEA,QAAIkD,cAAc,IAAIhE,MAAM,CAAC2B,MAAP,KAAkB,CAApC,IAAyCgC,oBAAoB,CAAChC,MAArB,GAA8B,CAA3E,EAA8E;AAC5E,aAAO,aAAanD,OAAO,CAACyE,aAAR,CAAsBtD,WAAtB,EAAmCuD,MAAM,CAACC,MAAP,CAAc;AACnEC,QAAAA,GAAG,EAAErC,KAD8D;AAEnEA,QAAAA,KAAK,EAAEA,KAF4D;AAGnEkD,QAAAA,MAAM,EAAElD,KAAK,KAAKR,eAHiD;AAInER,QAAAA,OAAO,EAAE,CAAC,IAAI4D,oBAAoB,IAAI5D,OAA5B,CAAD,EAAuC,IAAI,CAACiE,cAAD,GAAkBN,YAAlB,GAAiC,EAArC,CAAvC;AAJ0D,OAAd,EAKpDV,IALoD,EAK9C;AACPkB,QAAAA,MAAM,EAAE3C,qBADD;AAEP4C,QAAAA,OAAO,EAAE1C,oBAFF;AAGP6B,QAAAA,cAAc,EAAEjC;AAHT,OAL8C,CAAnC,CAApB;AAUD,KAXD,MAWO,IAAI,CAAC2C,cAAD,KAAoBhE,MAAM,CAAC2B,MAAP,GAAgB,CAAhB,IAAqB+B,YAAY,CAAC/B,MAAlC,IAA4C5B,OAAO,CAAC4B,MAAxE,CAAJ,EAAqF;AAC1F,aAAO,aAAanD,OAAO,CAACyE,aAAR,CAAsBtD,WAAtB,EAAmCuD,MAAM,CAACC,MAAP,CAAc;AACnEC,QAAAA,GAAG,EAAErC,KAD8D;AAEnEA,QAAAA,KAAK,EAAEA,KAF4D;AAGnEkD,QAAAA,MAAM,EAAElD,KAAK,KAAKR,eAHiD;AAInER,QAAAA,OAAO,EAAE,CAAC,IAAI4D,oBAAoB,IAAI5D,OAA5B,CAAD,EAAuC,IAAI,CAACiE,cAAD,GAAkBN,YAAlB,GAAiC,EAArC,CAAvC;AAJ0D,OAAd,EAKpDV,IALoD,EAK9C;AACPkB,QAAAA,MAAM,EAAE3C,qBADD;AAEP4C,QAAAA,OAAO,EAAE1C,oBAFF;AAGP6B,QAAAA,cAAc,EAAEjC;AAHT,OAL8C,CAAnC,CAApB;AAUD;AACF,GAtCoB,CAArB;AAuCA,QAAM+C,oBAAoB,GAAGlE,iBAAiB,GAAG,aAAa1B,OAAO,CAACyE,aAAR,CAAsB5D,aAAtB,EAAqC;AACjGgF,IAAAA,OAAO,EAAE;AADwF,GAArC,EAE3Dd,wBAF2D,EAEjCZ,aAFiC,EAElBa,YAFkB,CAAhB,GAEc,aAAahF,OAAO,CAACyE,aAAR,CAAsBzE,OAAO,CAAC8F,QAA9B,EAAwC,IAAxC,EAA8C3B,aAA9C,EAA6Da,YAA7D,CAFzE;AAGA,SAAO,aAAahF,OAAO,CAACyE,aAAR,CAAsB,KAAtB,EAA6B;AAC/CR,IAAAA,SAAS,EAAEA,SADoC;AAE/C8B,IAAAA,GAAG,EAAEpE;AAF0C,GAA7B,EAGjBiE,oBAHiB,EAGK,aAAa5F,OAAO,CAACyE,aAAR,CAAsBhE,eAAtB,EAAuC;AAC3EuF,IAAAA,KAAK,EAAE,QADoE;AAE3EC,IAAAA,OAAO,EAAErC;AAFkE,GAAvC,CAHlB,CAApB;AAOD;;AAED,SAAS2B,WAAT,CAAqBW,iBAArB,EAAwC;AACtC,SAAO,WAAWA,iBAAlB;AACD;;AAED,SAAS5E,OAAT","sourcesContent":["import { objectWithoutProperties as _objectWithoutProperties } from '../../../../_virtual/_rollupPluginBabelHelpers.js';\nimport React$1, { useRef, useState, useCallback, useMemo, useEffect } from 'react';\nimport { useFeatures } from '../../../../utilities/features/hooks.js';\nimport debounce$1 from 'lodash/debounce';\nimport { EventListener as EventListener$1 } from '../../../EventListener/EventListener.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { classNames } from '../../../../utilities/css.js';\nimport { ButtonGroup as ButtonGroup$1 } from '../../../ButtonGroup/ButtonGroup.js';\nimport { MenuAction as MenuAction$1 } from '../MenuAction/MenuAction.js';\nimport { SecondaryAction as SecondaryAction$1 } from '../SecondaryAction/SecondaryAction.js';\nimport { MenuGroup as MenuGroup$1 } from '../MenuGroup/MenuGroup.js';\nimport styles from './Actions.scss.js';\n\nconst ACTION_SPACING = 8;\nfunction Actions({\n  actions = [],\n  groups = []\n}) {\n  const i18n = useI18n();\n  const {\n    newDesignLanguage\n  } = useFeatures();\n  const actionsLayoutRef = useRef(null);\n  const menuGroupWidthRef = useRef(0);\n  const actionWidthsRef = useRef([]);\n  const availableWidthRef = useRef(0);\n  const [activeMenuGroup, setActiveMenuGroup] = useState(undefined);\n  const [showableActions, setShowableActions] = useState([]);\n  const [rolledUpActions, setRolledUpActions] = useState([]);\n  const defaultRollupGroup = {\n    title: i18n.translate('Polaris.Actions.moreActions'),\n    actions: []\n  };\n  const lastMenuGroup = [...groups].pop();\n  const lastMenuGroupWidth = [...actionWidthsRef.current].pop() || 0;\n  const handleActionsOffsetWidth = useCallback(width => {\n    actionWidthsRef.current = [...actionWidthsRef.current, width];\n  }, []);\n  const handleMenuGroupToggle = useCallback(group => setActiveMenuGroup(activeMenuGroup ? undefined : group), [activeMenuGroup]);\n  const handleMenuGroupClose = useCallback(() => setActiveMenuGroup(undefined), []);\n  const measureActions = useCallback(() => {\n    if (!newDesignLanguage || actionWidthsRef.current.length === 0 || availableWidthRef.current === 0) {\n      return;\n    }\n\n    const actionsAndGroups = [...actions, ...groups];\n\n    if (actionsAndGroups.length === 1) {\n      setShowableActions(actionsAndGroups);\n      return;\n    }\n\n    let currentAvailableWidth = availableWidthRef.current;\n    let newShowableActions = [];\n    let newRolledUpActions = [];\n    actionsAndGroups.forEach((action, index) => {\n      const canFitAction = actionWidthsRef.current[index] + menuGroupWidthRef.current + ACTION_SPACING + lastMenuGroupWidth <= currentAvailableWidth;\n\n      if (canFitAction) {\n        currentAvailableWidth -= actionWidthsRef.current[index];\n        newShowableActions = [...newShowableActions, action];\n      } else {\n        // Find last group if it exists and always render it as a rolled up action below\n        if (action === lastMenuGroup) return;\n        currentAvailableWidth = 0;\n        newRolledUpActions = [...newRolledUpActions, action];\n      }\n    });\n    setShowableActions(newShowableActions);\n    setRolledUpActions(newRolledUpActions);\n  }, [actions, groups, lastMenuGroup, lastMenuGroupWidth, newDesignLanguage]);\n  const handleResize = useMemo(() => debounce$1(() => {\n    if (!newDesignLanguage || !actionsLayoutRef.current) return;\n    availableWidthRef.current = actionsLayoutRef.current.offsetWidth;\n    measureActions();\n  }, 20, {\n    leading: false,\n    trailing: true,\n    maxWait: 40\n  }), [newDesignLanguage, measureActions]);\n  useEffect(() => {\n    if (!actionsLayoutRef.current) {\n      return;\n    }\n\n    availableWidthRef.current = actionsLayoutRef.current.offsetWidth;\n    measureActions();\n  }, [measureActions]);\n  const className = classNames(styles.ActionsLayout, newDesignLanguage && styles.newDesignLanguage);\n  const actionsMarkup = actions.map(action => {\n    if (newDesignLanguage && showableActions.length > 0 || rolledUpActions.includes(action)) return null;\n\n    const {\n      content,\n      onAction\n    } = action,\n          rest = _objectWithoutProperties(action, [\"content\", \"onAction\"]);\n\n    return newDesignLanguage ? /*#__PURE__*/React$1.createElement(SecondaryAction$1, Object.assign({\n      key: content,\n      onClick: onAction\n    }, rest, {\n      getOffsetWidth: handleActionsOffsetWidth\n    }), content) : /*#__PURE__*/React$1.createElement(MenuAction$1, Object.assign({\n      key: content,\n      content: content,\n      onAction: onAction\n    }, rest));\n  });\n  const rollUppableActionsMarkup = showableActions.length > 0 ? showableActions.map(action => action.content && /*#__PURE__*/React$1.createElement(SecondaryAction$1, Object.assign({\n    key: action.content\n  }, action, {\n    getOffsetWidth: handleActionsOffsetWidth\n  }), action.content)) : null;\n  const groupsMarkup = [...groups, defaultRollupGroup].filter(group => {\n    return groups.length === 0 && group === defaultRollupGroup ? group : group === lastMenuGroup || group !== defaultRollupGroup && !rolledUpActions.includes(group);\n  }).map(group => {\n    const {\n      title,\n      actions: groupActions\n    } = group,\n          rest = _objectWithoutProperties(group, [\"title\", \"actions\"]);\n\n    const finalRolledUpActions = rolledUpActions.reduce((memo, action) => {\n      memo.push(...(isMenuGroup(action) ? action.actions : [action]));\n      return memo;\n    }, []);\n    const isDefaultGroup = group === defaultRollupGroup;\n\n    if (isDefaultGroup && groups.length === 0 && finalRolledUpActions.length > 0) {\n      return /*#__PURE__*/React$1.createElement(MenuGroup$1, Object.assign({\n        key: title,\n        title: title,\n        active: title === activeMenuGroup,\n        actions: [...(finalRolledUpActions || actions), ...(!isDefaultGroup ? groupActions : [])]\n      }, rest, {\n        onOpen: handleMenuGroupToggle,\n        onClose: handleMenuGroupClose,\n        getOffsetWidth: handleActionsOffsetWidth\n      }));\n    } else if (!isDefaultGroup && (groups.length > 0 || groupActions.length || actions.length)) {\n      return /*#__PURE__*/React$1.createElement(MenuGroup$1, Object.assign({\n        key: title,\n        title: title,\n        active: title === activeMenuGroup,\n        actions: [...(finalRolledUpActions || actions), ...(!isDefaultGroup ? groupActions : [])]\n      }, rest, {\n        onOpen: handleMenuGroupToggle,\n        onClose: handleMenuGroupClose,\n        getOffsetWidth: handleActionsOffsetWidth\n      }));\n    }\n  });\n  const groupedActionsMarkup = newDesignLanguage ? /*#__PURE__*/React$1.createElement(ButtonGroup$1, {\n    spacing: \"extraTight\"\n  }, rollUppableActionsMarkup, actionsMarkup, groupsMarkup) : /*#__PURE__*/React$1.createElement(React$1.Fragment, null, actionsMarkup, groupsMarkup);\n  return /*#__PURE__*/React$1.createElement(\"div\", {\n    className: className,\n    ref: actionsLayoutRef\n  }, groupedActionsMarkup, /*#__PURE__*/React$1.createElement(EventListener$1, {\n    event: \"resize\",\n    handler: handleResize\n  }));\n}\n\nfunction isMenuGroup(actionOrMenuGroup) {\n  return 'title' in actionOrMenuGroup;\n}\n\nexport { Actions };\n"]},"metadata":{},"sourceType":"module"}