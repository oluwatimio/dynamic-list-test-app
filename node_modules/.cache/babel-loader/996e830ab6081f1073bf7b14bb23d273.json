{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar react_1 = require(\"react\");\n\nvar react_hooks_1 = require(\"@shopify/react-hooks\");\n\nvar utilities_1 = require(\"../utilities\");\n\nfunction useSubmit(onSubmit, fieldBag, makeCleanAfterSubmit) {\n  var _this = this;\n\n  if (onSubmit === void 0) {\n    onSubmit = noopSubmission;\n  }\n\n  if (makeCleanAfterSubmit === void 0) {\n    makeCleanAfterSubmit = false;\n  }\n\n  var mounted = react_hooks_1.useMountedRef();\n\n  var _a = tslib_1.__read(react_1.useState(false), 2),\n      submitting = _a[0],\n      setSubmitting = _a[1];\n\n  var _b = tslib_1.__read(react_1.useState([]), 2),\n      submitErrors = _b[0],\n      setSubmitErrors = _b[1];\n\n  var fieldBagRef = react_1.useRef(fieldBag);\n  fieldBagRef.current = fieldBag;\n  var setErrors = react_1.useCallback(function (errors) {\n    setSubmitErrors(errors);\n    utilities_1.propagateErrors(fieldBagRef.current, errors);\n  }, []);\n  var submit = react_1.useCallback(function (event) {\n    return tslib_1.__awaiter(_this, void 0, void 0, function () {\n      var fields, clientErrors, result;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            fields = fieldBagRef.current;\n\n            if (event && event.preventDefault && !event.defaultPrevented) {\n              event.preventDefault();\n            }\n\n            clientErrors = utilities_1.validateAll(fields);\n\n            if (clientErrors.length > 0) {\n              setErrors(clientErrors);\n              return [2\n              /*return*/\n              ];\n            }\n\n            setSubmitting(true);\n            return [4\n            /*yield*/\n            , onSubmit(utilities_1.getValues(fields))];\n\n          case 1:\n            result = _a.sent();\n\n            if (mounted.current === false) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            setSubmitting(false);\n\n            if (result.status === 'fail') {\n              setErrors(result.errors);\n            } else {\n              setSubmitErrors([]);\n            }\n\n            if (makeCleanAfterSubmit) {\n              utilities_1.makeCleanFields(fields);\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }, [mounted, onSubmit, setErrors, makeCleanAfterSubmit]);\n  return {\n    submit: submit,\n    submitting: submitting,\n    errors: submitErrors,\n    setErrors: setErrors\n  };\n}\n\nexports.useSubmit = useSubmit;\n/**\n * A convenience function for `onSubmit` callbacks returning values to `useSubmit` or `useForm`.\n * @return Returns a `SubmitResult` representing your successful form submission.\n */\n\nfunction submitSuccess() {\n  return {\n    status: 'success'\n  };\n}\n\nexports.submitSuccess = submitSuccess;\n/**\n * A convenience function for `onSubmit` callbacks returning values to `useSubmit` or `useForm`\n * @param errors - An array of errors with the user's input. These can either include both a `field` and a `message`, in which case they will be passed down to a matching field, or just a `message`.\n * @return Returns a `SubmitResult` representing your failed form submission.\n */\n\nfunction submitFail(errors) {\n  if (errors === void 0) {\n    errors = [];\n  }\n\n  return {\n    status: 'fail',\n    errors: errors\n  };\n}\n\nexports.submitFail = submitFail;\n\nfunction noopSubmission(_) {\n  return Promise.resolve(submitSuccess());\n}","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/react-form/dist/src/hooks/submit.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","react_1","react_hooks_1","utilities_1","useSubmit","onSubmit","fieldBag","makeCleanAfterSubmit","_this","noopSubmission","mounted","useMountedRef","_a","__read","useState","submitting","setSubmitting","_b","submitErrors","setSubmitErrors","fieldBagRef","useRef","current","setErrors","useCallback","errors","propagateErrors","submit","event","__awaiter","fields","clientErrors","result","__generator","label","preventDefault","defaultPrevented","validateAll","length","getValues","sent","status","makeCleanFields","submitSuccess","submitFail","_","Promise","resolve"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar react_1 = require(\"react\");\nvar react_hooks_1 = require(\"@shopify/react-hooks\");\nvar utilities_1 = require(\"../utilities\");\nfunction useSubmit(onSubmit, fieldBag, makeCleanAfterSubmit) {\n    var _this = this;\n    if (onSubmit === void 0) { onSubmit = noopSubmission; }\n    if (makeCleanAfterSubmit === void 0) { makeCleanAfterSubmit = false; }\n    var mounted = react_hooks_1.useMountedRef();\n    var _a = tslib_1.__read(react_1.useState(false), 2), submitting = _a[0], setSubmitting = _a[1];\n    var _b = tslib_1.__read(react_1.useState([]), 2), submitErrors = _b[0], setSubmitErrors = _b[1];\n    var fieldBagRef = react_1.useRef(fieldBag);\n    fieldBagRef.current = fieldBag;\n    var setErrors = react_1.useCallback(function (errors) {\n        setSubmitErrors(errors);\n        utilities_1.propagateErrors(fieldBagRef.current, errors);\n    }, []);\n    var submit = react_1.useCallback(function (event) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        var fields, clientErrors, result;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    fields = fieldBagRef.current;\n                    if (event && event.preventDefault && !event.defaultPrevented) {\n                        event.preventDefault();\n                    }\n                    clientErrors = utilities_1.validateAll(fields);\n                    if (clientErrors.length > 0) {\n                        setErrors(clientErrors);\n                        return [2 /*return*/];\n                    }\n                    setSubmitting(true);\n                    return [4 /*yield*/, onSubmit(utilities_1.getValues(fields))];\n                case 1:\n                    result = _a.sent();\n                    if (mounted.current === false) {\n                        return [2 /*return*/];\n                    }\n                    setSubmitting(false);\n                    if (result.status === 'fail') {\n                        setErrors(result.errors);\n                    }\n                    else {\n                        setSubmitErrors([]);\n                    }\n                    if (makeCleanAfterSubmit) {\n                        utilities_1.makeCleanFields(fields);\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    }); }, [mounted, onSubmit, setErrors, makeCleanAfterSubmit]);\n    return { submit: submit, submitting: submitting, errors: submitErrors, setErrors: setErrors };\n}\nexports.useSubmit = useSubmit;\n/**\n * A convenience function for `onSubmit` callbacks returning values to `useSubmit` or `useForm`.\n * @return Returns a `SubmitResult` representing your successful form submission.\n */\nfunction submitSuccess() {\n    return { status: 'success' };\n}\nexports.submitSuccess = submitSuccess;\n/**\n * A convenience function for `onSubmit` callbacks returning values to `useSubmit` or `useForm`\n * @param errors - An array of errors with the user's input. These can either include both a `field` and a `message`, in which case they will be passed down to a matching field, or just a `message`.\n * @return Returns a `SubmitResult` representing your failed form submission.\n */\nfunction submitFail(errors) {\n    if (errors === void 0) { errors = []; }\n    return { status: 'fail', errors: errors };\n}\nexports.submitFail = submitFail;\nfunction noopSubmission(_) {\n    return Promise.resolve(submitSuccess());\n}\n"]},"metadata":{},"sourceType":"script"}