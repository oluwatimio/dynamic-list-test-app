{"ast":null,"code":"import React$1, { useCallback } from 'react';\nimport { useFeatures } from '../../../../utilities/features/hooks.js';\nimport { Popover as Popover$1 } from '../../../Popover/Popover.js';\nimport { ActionList as ActionList$1 } from '../../../ActionList/ActionList.js';\nimport { MenuAction as MenuAction$1 } from '../MenuAction/MenuAction.js';\nimport { SecondaryAction as SecondaryAction$1 } from '../SecondaryAction/SecondaryAction.js';\nimport styles from './MenuGroup.scss.js';\n\nfunction MenuGroup({\n  accessibilityLabel,\n  active,\n  actions,\n  details,\n  title,\n  icon,\n  onClose,\n  onOpen,\n  getOffsetWidth\n}) {\n  const {\n    newDesignLanguage\n  } = useFeatures();\n  const handleClose = useCallback(() => {\n    onClose(title);\n  }, [onClose, title]);\n  const handleOpen = useCallback(() => {\n    onOpen(title);\n  }, [onOpen, title]);\n  const handleOffsetWidth = useCallback(width => {\n    if (!newDesignLanguage || !getOffsetWidth) return;\n    getOffsetWidth(width);\n  }, [getOffsetWidth, newDesignLanguage]);\n  const popoverActivator = newDesignLanguage ? /*#__PURE__*/React$1.createElement(SecondaryAction$1, {\n    disclosure: true,\n    icon: icon,\n    accessibilityLabel: accessibilityLabel,\n    onClick: handleOpen,\n    getOffsetWidth: handleOffsetWidth\n  }, title) : /*#__PURE__*/React$1.createElement(MenuAction$1, {\n    disclosure: true,\n    content: title,\n    icon: icon,\n    accessibilityLabel: accessibilityLabel,\n    onAction: handleOpen\n  });\n  return /*#__PURE__*/React$1.createElement(Popover$1, {\n    active: Boolean(active),\n    activator: popoverActivator,\n    preferredAlignment: \"left\",\n    onClose: handleClose,\n    hideOnPrint: true\n  }, /*#__PURE__*/React$1.createElement(ActionList$1, {\n    items: actions,\n    onActionAnyItem: handleClose\n  }), details && /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Details\n  }, details));\n}\n\nexport { MenuGroup };","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/polaris/dist/esm/components/ActionMenu/components/MenuGroup/MenuGroup.js"],"names":["React$1","useCallback","useFeatures","Popover","Popover$1","ActionList","ActionList$1","MenuAction","MenuAction$1","SecondaryAction","SecondaryAction$1","styles","MenuGroup","accessibilityLabel","active","actions","details","title","icon","onClose","onOpen","getOffsetWidth","newDesignLanguage","handleClose","handleOpen","handleOffsetWidth","width","popoverActivator","createElement","disclosure","onClick","content","onAction","Boolean","activator","preferredAlignment","hideOnPrint","items","onActionAnyItem","className","Details"],"mappings":"AAAA,OAAOA,OAAP,IAAkBC,WAAlB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,yCAA5B;AACA,SAASC,OAAO,IAAIC,SAApB,QAAqC,6BAArC;AACA,SAASC,UAAU,IAAIC,YAAvB,QAA2C,mCAA3C;AACA,SAASC,UAAU,IAAIC,YAAvB,QAA2C,6BAA3C;AACA,SAASC,eAAe,IAAIC,iBAA5B,QAAqD,uCAArD;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,SAASC,SAAT,CAAmB;AACjBC,EAAAA,kBADiB;AAEjBC,EAAAA,MAFiB;AAGjBC,EAAAA,OAHiB;AAIjBC,EAAAA,OAJiB;AAKjBC,EAAAA,KALiB;AAMjBC,EAAAA,IANiB;AAOjBC,EAAAA,OAPiB;AAQjBC,EAAAA,MARiB;AASjBC,EAAAA;AATiB,CAAnB,EAUG;AACD,QAAM;AACJC,IAAAA;AADI,MAEFpB,WAAW,EAFf;AAGA,QAAMqB,WAAW,GAAGtB,WAAW,CAAC,MAAM;AACpCkB,IAAAA,OAAO,CAACF,KAAD,CAAP;AACD,GAF8B,EAE5B,CAACE,OAAD,EAAUF,KAAV,CAF4B,CAA/B;AAGA,QAAMO,UAAU,GAAGvB,WAAW,CAAC,MAAM;AACnCmB,IAAAA,MAAM,CAACH,KAAD,CAAN;AACD,GAF6B,EAE3B,CAACG,MAAD,EAASH,KAAT,CAF2B,CAA9B;AAGA,QAAMQ,iBAAiB,GAAGxB,WAAW,CAACyB,KAAK,IAAI;AAC7C,QAAI,CAACJ,iBAAD,IAAsB,CAACD,cAA3B,EAA2C;AAC3CA,IAAAA,cAAc,CAACK,KAAD,CAAd;AACD,GAHoC,EAGlC,CAACL,cAAD,EAAiBC,iBAAjB,CAHkC,CAArC;AAIA,QAAMK,gBAAgB,GAAGL,iBAAiB,GAAG,aAAatB,OAAO,CAAC4B,aAAR,CAAsBlB,iBAAtB,EAAyC;AACjGmB,IAAAA,UAAU,EAAE,IADqF;AAEjGX,IAAAA,IAAI,EAAEA,IAF2F;AAGjGL,IAAAA,kBAAkB,EAAEA,kBAH6E;AAIjGiB,IAAAA,OAAO,EAAEN,UAJwF;AAKjGH,IAAAA,cAAc,EAAEI;AALiF,GAAzC,EAMvDR,KANuD,CAAhB,GAM9B,aAAajB,OAAO,CAAC4B,aAAR,CAAsBpB,YAAtB,EAAoC;AAC3DqB,IAAAA,UAAU,EAAE,IAD+C;AAE3DE,IAAAA,OAAO,EAAEd,KAFkD;AAG3DC,IAAAA,IAAI,EAAEA,IAHqD;AAI3DL,IAAAA,kBAAkB,EAAEA,kBAJuC;AAK3DmB,IAAAA,QAAQ,EAAER;AALiD,GAApC,CANzB;AAaA,SAAO,aAAaxB,OAAO,CAAC4B,aAAR,CAAsBxB,SAAtB,EAAiC;AACnDU,IAAAA,MAAM,EAAEmB,OAAO,CAACnB,MAAD,CADoC;AAEnDoB,IAAAA,SAAS,EAAEP,gBAFwC;AAGnDQ,IAAAA,kBAAkB,EAAE,MAH+B;AAInDhB,IAAAA,OAAO,EAAEI,WAJ0C;AAKnDa,IAAAA,WAAW,EAAE;AALsC,GAAjC,EAMjB,aAAapC,OAAO,CAAC4B,aAAR,CAAsBtB,YAAtB,EAAoC;AAClD+B,IAAAA,KAAK,EAAEtB,OAD2C;AAElDuB,IAAAA,eAAe,EAAEf;AAFiC,GAApC,CANI,EAShBP,OAAO,IAAI,aAAahB,OAAO,CAAC4B,aAAR,CAAsB,KAAtB,EAA6B;AACvDW,IAAAA,SAAS,EAAE5B,MAAM,CAAC6B;AADqC,GAA7B,EAEzBxB,OAFyB,CATR,CAApB;AAYD;;AAED,SAASJ,SAAT","sourcesContent":["import React$1, { useCallback } from 'react';\nimport { useFeatures } from '../../../../utilities/features/hooks.js';\nimport { Popover as Popover$1 } from '../../../Popover/Popover.js';\nimport { ActionList as ActionList$1 } from '../../../ActionList/ActionList.js';\nimport { MenuAction as MenuAction$1 } from '../MenuAction/MenuAction.js';\nimport { SecondaryAction as SecondaryAction$1 } from '../SecondaryAction/SecondaryAction.js';\nimport styles from './MenuGroup.scss.js';\n\nfunction MenuGroup({\n  accessibilityLabel,\n  active,\n  actions,\n  details,\n  title,\n  icon,\n  onClose,\n  onOpen,\n  getOffsetWidth\n}) {\n  const {\n    newDesignLanguage\n  } = useFeatures();\n  const handleClose = useCallback(() => {\n    onClose(title);\n  }, [onClose, title]);\n  const handleOpen = useCallback(() => {\n    onOpen(title);\n  }, [onOpen, title]);\n  const handleOffsetWidth = useCallback(width => {\n    if (!newDesignLanguage || !getOffsetWidth) return;\n    getOffsetWidth(width);\n  }, [getOffsetWidth, newDesignLanguage]);\n  const popoverActivator = newDesignLanguage ? /*#__PURE__*/React$1.createElement(SecondaryAction$1, {\n    disclosure: true,\n    icon: icon,\n    accessibilityLabel: accessibilityLabel,\n    onClick: handleOpen,\n    getOffsetWidth: handleOffsetWidth\n  }, title) : /*#__PURE__*/React$1.createElement(MenuAction$1, {\n    disclosure: true,\n    content: title,\n    icon: icon,\n    accessibilityLabel: accessibilityLabel,\n    onAction: handleOpen\n  });\n  return /*#__PURE__*/React$1.createElement(Popover$1, {\n    active: Boolean(active),\n    activator: popoverActivator,\n    preferredAlignment: \"left\",\n    onClose: handleClose,\n    hideOnPrint: true\n  }, /*#__PURE__*/React$1.createElement(ActionList$1, {\n    items: actions,\n    onActionAnyItem: handleClose\n  }), details && /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Details\n  }, details));\n}\n\nexport { MenuGroup };\n"]},"metadata":{},"sourceType":"module"}