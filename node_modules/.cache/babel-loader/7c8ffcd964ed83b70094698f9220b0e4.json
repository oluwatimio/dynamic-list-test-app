{"ast":null,"code":"import React$1, { Component } from 'react';\nimport debounce$1 from 'lodash/debounce';\nimport styles from './Loading.scss.js';\nconst INITIAL_STEP = 10;\nconst STUCK_THRESHOLD = 99;\n\nclass Loading extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      progress: 0,\n      step: INITIAL_STEP,\n      animation: null\n    };\n    this.ariaValuenow = debounce$1(() => {\n      const {\n        progress\n      } = this.state;\n      return Math.floor(progress / 10) * 10;\n    }, 15);\n  }\n\n  componentDidMount() {\n    this.increment();\n  }\n\n  componentWillUnmount() {\n    const {\n      animation\n    } = this.state;\n\n    if (animation != null) {\n      cancelAnimationFrame(animation);\n    }\n  }\n\n  render() {\n    const {\n      progress\n    } = this.state;\n    const customStyles = {\n      transform: `scaleX(${Math.floor(progress) / 100})`\n    };\n    const ariaValuenow = this.ariaValuenow();\n    return /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Loading\n    }, /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Level,\n      style: customStyles,\n      \"aria-valuenow\": ariaValuenow,\n      \"aria-valuemin\": 0,\n      \"aria-valuemax\": 100,\n      role: \"progressbar\"\n    }));\n  }\n\n  increment() {\n    const {\n      progress,\n      step\n    } = this.state;\n\n    if (progress >= STUCK_THRESHOLD) {\n      return;\n    }\n\n    const animation = requestAnimationFrame(() => this.increment());\n    this.setState({\n      progress: Math.min(progress + step, 100),\n      step: Math.pow(INITIAL_STEP, -(progress / 25)),\n      animation\n    });\n  }\n\n}\n\nexport { Loading };","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/polaris/dist/esm/components/Frame/components/Loading/Loading.js"],"names":["React$1","Component","debounce$1","styles","INITIAL_STEP","STUCK_THRESHOLD","Loading","constructor","args","state","progress","step","animation","ariaValuenow","Math","floor","componentDidMount","increment","componentWillUnmount","cancelAnimationFrame","render","customStyles","transform","createElement","className","Level","style","role","requestAnimationFrame","setState","min","pow"],"mappings":"AAAA,OAAOA,OAAP,IAAkBC,SAAlB,QAAmC,OAAnC;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,eAAe,GAAG,EAAxB;;AACA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAC9BM,EAAAA,WAAW,CAAC,GAAGC,IAAJ,EAAU;AACnB,UAAM,GAAGA,IAAT;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,CADC;AAEXC,MAAAA,IAAI,EAAEP,YAFK;AAGXQ,MAAAA,SAAS,EAAE;AAHA,KAAb;AAKA,SAAKC,YAAL,GAAoBX,UAAU,CAAC,MAAM;AACnC,YAAM;AACJQ,QAAAA;AADI,UAEF,KAAKD,KAFT;AAGA,aAAOK,IAAI,CAACC,KAAL,CAAWL,QAAQ,GAAG,EAAtB,IAA4B,EAAnC;AACD,KAL6B,EAK3B,EAL2B,CAA9B;AAMD;;AAEDM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,SAAL;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,UAAM;AACJN,MAAAA;AADI,QAEF,KAAKH,KAFT;;AAIA,QAAIG,SAAS,IAAI,IAAjB,EAAuB;AACrBO,MAAAA,oBAAoB,CAACP,SAAD,CAApB;AACD;AACF;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AACJV,MAAAA;AADI,QAEF,KAAKD,KAFT;AAGA,UAAMY,YAAY,GAAG;AACnBC,MAAAA,SAAS,EAAG,UAASR,IAAI,CAACC,KAAL,CAAWL,QAAX,IAAuB,GAAI;AAD7B,KAArB;AAGA,UAAMG,YAAY,GAAG,KAAKA,YAAL,EAArB;AACA,WAAO,aAAab,OAAO,CAACuB,aAAR,CAAsB,KAAtB,EAA6B;AAC/CC,MAAAA,SAAS,EAAErB,MAAM,CAACG;AAD6B,KAA7B,EAEjB,aAAaN,OAAO,CAACuB,aAAR,CAAsB,KAAtB,EAA6B;AAC3CC,MAAAA,SAAS,EAAErB,MAAM,CAACsB,KADyB;AAE3CC,MAAAA,KAAK,EAAEL,YAFoC;AAG3C,uBAAiBR,YAH0B;AAI3C,uBAAiB,CAJ0B;AAK3C,uBAAiB,GAL0B;AAM3Cc,MAAAA,IAAI,EAAE;AANqC,KAA7B,CAFI,CAApB;AAUD;;AAEDV,EAAAA,SAAS,GAAG;AACV,UAAM;AACJP,MAAAA,QADI;AAEJC,MAAAA;AAFI,QAGF,KAAKF,KAHT;;AAKA,QAAIC,QAAQ,IAAIL,eAAhB,EAAiC;AAC/B;AACD;;AAED,UAAMO,SAAS,GAAGgB,qBAAqB,CAAC,MAAM,KAAKX,SAAL,EAAP,CAAvC;AACA,SAAKY,QAAL,CAAc;AACZnB,MAAAA,QAAQ,EAAEI,IAAI,CAACgB,GAAL,CAASpB,QAAQ,GAAGC,IAApB,EAA0B,GAA1B,CADE;AAEZA,MAAAA,IAAI,EAAEG,IAAI,CAACiB,GAAL,CAAS3B,YAAT,EAAuB,EAAEM,QAAQ,GAAG,EAAb,CAAvB,CAFM;AAGZE,MAAAA;AAHY,KAAd;AAKD;;AAlE6B;;AAsEhC,SAASN,OAAT","sourcesContent":["import React$1, { Component } from 'react';\nimport debounce$1 from 'lodash/debounce';\nimport styles from './Loading.scss.js';\n\nconst INITIAL_STEP = 10;\nconst STUCK_THRESHOLD = 99;\nclass Loading extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      progress: 0,\n      step: INITIAL_STEP,\n      animation: null\n    };\n    this.ariaValuenow = debounce$1(() => {\n      const {\n        progress\n      } = this.state;\n      return Math.floor(progress / 10) * 10;\n    }, 15);\n  }\n\n  componentDidMount() {\n    this.increment();\n  }\n\n  componentWillUnmount() {\n    const {\n      animation\n    } = this.state;\n\n    if (animation != null) {\n      cancelAnimationFrame(animation);\n    }\n  }\n\n  render() {\n    const {\n      progress\n    } = this.state;\n    const customStyles = {\n      transform: `scaleX(${Math.floor(progress) / 100})`\n    };\n    const ariaValuenow = this.ariaValuenow();\n    return /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Loading\n    }, /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Level,\n      style: customStyles,\n      \"aria-valuenow\": ariaValuenow,\n      \"aria-valuemin\": 0,\n      \"aria-valuemax\": 100,\n      role: \"progressbar\"\n    }));\n  }\n\n  increment() {\n    const {\n      progress,\n      step\n    } = this.state;\n\n    if (progress >= STUCK_THRESHOLD) {\n      return;\n    }\n\n    const animation = requestAnimationFrame(() => this.increment());\n    this.setState({\n      progress: Math.min(progress + step, 100),\n      step: Math.pow(INITIAL_STEP, -(progress / 25)),\n      animation\n    });\n  }\n\n}\n\nexport { Loading };\n"]},"metadata":{},"sourceType":"module"}