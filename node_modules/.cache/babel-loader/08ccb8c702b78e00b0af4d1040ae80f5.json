{"ast":null,"code":"import React$1, { memo, useRef, useCallback, useEffect } from 'react';\nimport { EventListener as EventListener$1 } from '../../../EventListener/EventListener.js';\nimport { classNames } from '../../../../utilities/css.js';\nimport { useComponentDidMount as useComponentDidMount$1 } from '../../../../utilities/use-component-did-mount.js';\nimport styles from '../../Tabs.scss.js';\nimport { Tab as Tab$1 } from '../Tab/Tab.js';\nconst TabMeasurer = /*#__PURE__*/memo(function TabMeasurer({\n  selected,\n  tabs,\n  activator,\n  tabToFocus,\n  siblingTabHasFocus,\n  handleMeasurement: handleMeasurementProp\n}) {\n  const containerNode = useRef(null);\n  const animationFrame = useRef(null);\n  const handleMeasurement = useCallback(() => {\n    if (animationFrame.current) {\n      cancelAnimationFrame(animationFrame.current);\n    }\n\n    animationFrame.current = requestAnimationFrame(() => {\n      if (!containerNode.current) {\n        return;\n      }\n\n      const containerWidth = containerNode.current.offsetWidth;\n      const hiddenTabNodes = containerNode.current.children;\n      const hiddenTabNodesArray = Array.from(hiddenTabNodes);\n      const hiddenTabWidths = hiddenTabNodesArray.map(node => {\n        return node.getBoundingClientRect().width;\n      });\n      const disclosureWidth = hiddenTabWidths.pop() || 0;\n      handleMeasurementProp({\n        containerWidth,\n        disclosureWidth,\n        hiddenTabWidths\n      });\n    });\n  }, [handleMeasurementProp]);\n  useEffect(() => {\n    handleMeasurement();\n  }, [handleMeasurement, tabs]);\n  useComponentDidMount$1(() => {\n    if (process.env.NODE_ENV === 'development') {\n      setTimeout(handleMeasurement, 0);\n    }\n  });\n  const tabsMarkup = tabs.map((tab, index) => {\n    return /*#__PURE__*/React$1.createElement(Tab$1, {\n      measuring: true,\n      key: `${index}${tab.id}Hidden`,\n      id: `${tab.id}Measurer`,\n      siblingTabHasFocus: siblingTabHasFocus,\n      focused: index === tabToFocus,\n      selected: index === selected,\n      onClick: noop,\n      url: tab.url\n    }, tab.content);\n  });\n  const classname = classNames(styles.Tabs, styles.TabMeasurer);\n  return /*#__PURE__*/React$1.createElement(\"div\", {\n    className: classname,\n    ref: containerNode\n  }, /*#__PURE__*/React$1.createElement(EventListener$1, {\n    event: \"resize\",\n    handler: handleMeasurement\n  }), tabsMarkup, activator);\n});\n\nfunction noop() {}\n\nexport { TabMeasurer };","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/polaris/dist/esm/components/Tabs/components/TabMeasurer/TabMeasurer.js"],"names":["React$1","memo","useRef","useCallback","useEffect","EventListener","EventListener$1","classNames","useComponentDidMount","useComponentDidMount$1","styles","Tab","Tab$1","TabMeasurer","selected","tabs","activator","tabToFocus","siblingTabHasFocus","handleMeasurement","handleMeasurementProp","containerNode","animationFrame","current","cancelAnimationFrame","requestAnimationFrame","containerWidth","offsetWidth","hiddenTabNodes","children","hiddenTabNodesArray","Array","from","hiddenTabWidths","map","node","getBoundingClientRect","width","disclosureWidth","pop","process","env","NODE_ENV","setTimeout","tabsMarkup","tab","index","createElement","measuring","key","id","focused","onClick","noop","url","content","classname","Tabs","className","ref","event","handler"],"mappings":"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","sourcesContent":["import React$1, { memo, useRef, useCallback, useEffect } from 'react';\nimport { EventListener as EventListener$1 } from '../../../EventListener/EventListener.js';\nimport { classNames } from '../../../../utilities/css.js';\nimport { useComponentDidMount as useComponentDidMount$1 } from '../../../../utilities/use-component-did-mount.js';\nimport styles from '../../Tabs.scss.js';\nimport { Tab as Tab$1 } from '../Tab/Tab.js';\n\nconst TabMeasurer = /*#__PURE__*/memo(function TabMeasurer({\n  selected,\n  tabs,\n  activator,\n  tabToFocus,\n  siblingTabHasFocus,\n  handleMeasurement: handleMeasurementProp\n}) {\n  const containerNode = useRef(null);\n  const animationFrame = useRef(null);\n  const handleMeasurement = useCallback(() => {\n    if (animationFrame.current) {\n      cancelAnimationFrame(animationFrame.current);\n    }\n\n    animationFrame.current = requestAnimationFrame(() => {\n      if (!containerNode.current) {\n        return;\n      }\n\n      const containerWidth = containerNode.current.offsetWidth;\n      const hiddenTabNodes = containerNode.current.children;\n      const hiddenTabNodesArray = Array.from(hiddenTabNodes);\n      const hiddenTabWidths = hiddenTabNodesArray.map(node => {\n        return node.getBoundingClientRect().width;\n      });\n      const disclosureWidth = hiddenTabWidths.pop() || 0;\n      handleMeasurementProp({\n        containerWidth,\n        disclosureWidth,\n        hiddenTabWidths\n      });\n    });\n  }, [handleMeasurementProp]);\n  useEffect(() => {\n    handleMeasurement();\n  }, [handleMeasurement, tabs]);\n  useComponentDidMount$1(() => {\n    if (process.env.NODE_ENV === 'development') {\n      setTimeout(handleMeasurement, 0);\n    }\n  });\n  const tabsMarkup = tabs.map((tab, index) => {\n    return /*#__PURE__*/React$1.createElement(Tab$1, {\n      measuring: true,\n      key: `${index}${tab.id}Hidden`,\n      id: `${tab.id}Measurer`,\n      siblingTabHasFocus: siblingTabHasFocus,\n      focused: index === tabToFocus,\n      selected: index === selected,\n      onClick: noop,\n      url: tab.url\n    }, tab.content);\n  });\n  const classname = classNames(styles.Tabs, styles.TabMeasurer);\n  return /*#__PURE__*/React$1.createElement(\"div\", {\n    className: classname,\n    ref: containerNode\n  }, /*#__PURE__*/React$1.createElement(EventListener$1, {\n    event: \"resize\",\n    handler: handleMeasurement\n  }), tabsMarkup, activator);\n});\n\nfunction noop() {}\n\nexport { TabMeasurer };\n"]},"metadata":{},"sourceType":"module"}