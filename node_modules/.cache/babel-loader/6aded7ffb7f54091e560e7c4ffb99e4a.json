{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nfunction lengthMoreThan(length) {\n  return function (input) {\n    return input.length > length;\n  };\n}\n\nexports.lengthMoreThan = lengthMoreThan;\n\nfunction lengthLessThan(length) {\n  return function (input) {\n    return input.length < length;\n  };\n}\n\nexports.lengthLessThan = lengthLessThan;\n\nfunction isPositiveIntegerString(input) {\n  return input !== '' && (input.match(/[^0-9]/g) || []).length === 0;\n}\n\nexports.isPositiveIntegerString = isPositiveIntegerString;\n\nfunction isPositiveNumericString(input) {\n  return input !== '' && (input.match(/[^0-9.,]/g) || []).length === 0;\n}\n\nexports.isPositiveNumericString = isPositiveNumericString;\n\nfunction isNumericString(input) {\n  return input !== '' && (input.match(/[^0-9.,-]/g) || []).length === 0;\n}\n\nexports.isNumericString = isNumericString;\n\nfunction isEmpty(input) {\n  return input === null || input === undefined || input.length === 0;\n}\n\nexports.isEmpty = isEmpty;\n\nfunction isEmptyString(input) {\n  return input === null || input === undefined || input.trim().length < 1;\n}\n\nexports.isEmptyString = isEmptyString;\n\nfunction notEmpty(input) {\n  return not(isEmpty)(input);\n}\n\nexports.notEmpty = notEmpty;\n\nfunction notEmptyString(input) {\n  return not(isEmptyString)(input);\n}\n\nexports.notEmptyString = notEmptyString;\n\nfunction notNumericString(input) {\n  return not(isNumericString)(input);\n}\n\nexports.notNumericString = notNumericString;\n\nfunction not(fn) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return !fn.apply(void 0, tslib_1.__spread(args));\n  };\n}","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/predicates/dist/src/predicates.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","lengthMoreThan","length","input","lengthLessThan","isPositiveIntegerString","match","isPositiveNumericString","isNumericString","isEmpty","undefined","isEmptyString","trim","notEmpty","not","notEmptyString","notNumericString","fn","args","_i","arguments","apply","__spread"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nfunction lengthMoreThan(length) {\n    return function (input) { return input.length > length; };\n}\nexports.lengthMoreThan = lengthMoreThan;\nfunction lengthLessThan(length) {\n    return function (input) { return input.length < length; };\n}\nexports.lengthLessThan = lengthLessThan;\nfunction isPositiveIntegerString(input) {\n    return input !== '' && (input.match(/[^0-9]/g) || []).length === 0;\n}\nexports.isPositiveIntegerString = isPositiveIntegerString;\nfunction isPositiveNumericString(input) {\n    return input !== '' && (input.match(/[^0-9.,]/g) || []).length === 0;\n}\nexports.isPositiveNumericString = isPositiveNumericString;\nfunction isNumericString(input) {\n    return input !== '' && (input.match(/[^0-9.,-]/g) || []).length === 0;\n}\nexports.isNumericString = isNumericString;\nfunction isEmpty(input) {\n    return input === null || input === undefined || input.length === 0;\n}\nexports.isEmpty = isEmpty;\nfunction isEmptyString(input) {\n    return input === null || input === undefined || input.trim().length < 1;\n}\nexports.isEmptyString = isEmptyString;\nfunction notEmpty(input) {\n    return not(isEmpty)(input);\n}\nexports.notEmpty = notEmpty;\nfunction notEmptyString(input) {\n    return not(isEmptyString)(input);\n}\nexports.notEmptyString = notEmptyString;\nfunction notNumericString(input) {\n    return not(isNumericString)(input);\n}\nexports.notNumericString = notNumericString;\nfunction not(fn) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return !fn.apply(void 0, tslib_1.__spread(args));\n    };\n}\n"]},"metadata":{},"sourceType":"script"}