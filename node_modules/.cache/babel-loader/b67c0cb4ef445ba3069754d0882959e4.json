{"ast":null,"code":"import React$1, { memo, useRef, useEffect } from 'react';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { classNames } from '../../../../utilities/css.js';\nimport { isSameDay } from '../../../../utilities/dates.js';\nimport { monthName } from '../../utilities.js';\nimport styles from '../../DatePicker.scss.js';\nconst Day = /*#__PURE__*/memo(function Day({\n  day,\n  focused,\n  onClick,\n  onHover = noop,\n  onFocus = noop,\n  selected,\n  inRange,\n  inHoveringRange,\n  disabled,\n  lastDayOfMonth,\n  isLastSelectedDay,\n  isFirstSelectedDay,\n  isHoveringRight,\n  rangeIsDifferent\n}) {\n  const i18n = useI18n();\n  const dayNode = useRef(null);\n  const hoverValue = lastDayOfMonth || day;\n  useEffect(() => {\n    if (focused && dayNode.current) {\n      dayNode.current.focus();\n    }\n  }, [focused]);\n\n  if (!day) {\n    return /*#__PURE__*/React$1.createElement(\"td\", {\n      className: styles.EmptyDayCell,\n      onMouseOver: () => onHover(hoverValue)\n    });\n  }\n\n  const handleClick = onClick && !disabled ? onClick.bind(null, day) : noop;\n  const today = isSameDay(new Date(), day);\n  const dayCellClassName = classNames(styles.DayCell, selected && styles['DayCell-selected'], (inRange || inHoveringRange) && !disabled && styles['DayCell-inRange'], isLastSelectedDay && styles['DayCell-lastInRange'], isFirstSelectedDay && styles['DayCell-firstInRange'], isHoveringRight && styles['DayCell-hoverRight'], rangeIsDifferent && styles['DayCell-hasRange']);\n  const dayClassName = classNames(styles.Day, selected && styles['Day-selected'], disabled && styles['Day-disabled'], today && styles['Day-today'], (inRange || inHoveringRange) && !disabled && styles['Day-inRange'], isLastSelectedDay && styles['Day-lastInRange'], isFirstSelectedDay && styles['Day-firstInRange'], isHoveringRight && styles['Day-hoverRight'], rangeIsDifferent && styles['Day-hasRange']);\n  const date = day.getDate();\n  const tabIndex = (focused || selected || today || date === 1) && !disabled ? 0 : -1;\n  const ariaLabel = [`${today ? i18n.translate('Polaris.DatePicker.today') : ''}`, `${i18n.translate(`Polaris.DatePicker.months.${monthName(day.getMonth())}`)} `, `${date} `, `${day.getFullYear()}`].join('');\n  return /*#__PURE__*/React$1.createElement(\"td\", {\n    className: dayCellClassName\n  }, /*#__PURE__*/React$1.createElement(\"button\", {\n    onFocus: () => onFocus(day),\n    type: \"button\",\n    ref: dayNode,\n    tabIndex: tabIndex,\n    className: dayClassName,\n    onMouseOver: () => onHover(hoverValue),\n    onClick: handleClick,\n    \"aria-label\": ariaLabel,\n    \"aria-disabled\": disabled,\n    \"aria-pressed\": selected\n  }, date));\n});\n\nfunction noop() {}\n\nexport { Day };","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/polaris/dist/esm/components/DatePicker/components/Day/Day.js"],"names":["React$1","memo","useRef","useEffect","useI18n","classNames","isSameDay","monthName","styles","Day","day","focused","onClick","onHover","noop","onFocus","selected","inRange","inHoveringRange","disabled","lastDayOfMonth","isLastSelectedDay","isFirstSelectedDay","isHoveringRight","rangeIsDifferent","i18n","dayNode","hoverValue","current","focus","createElement","className","EmptyDayCell","onMouseOver","handleClick","bind","today","Date","dayCellClassName","DayCell","dayClassName","date","getDate","tabIndex","ariaLabel","translate","getMonth","getFullYear","join","type","ref"],"mappings":"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","sourcesContent":["import React$1, { memo, useRef, useEffect } from 'react';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { classNames } from '../../../../utilities/css.js';\nimport { isSameDay } from '../../../../utilities/dates.js';\nimport { monthName } from '../../utilities.js';\nimport styles from '../../DatePicker.scss.js';\n\nconst Day = /*#__PURE__*/memo(function Day({\n  day,\n  focused,\n  onClick,\n  onHover = noop,\n  onFocus = noop,\n  selected,\n  inRange,\n  inHoveringRange,\n  disabled,\n  lastDayOfMonth,\n  isLastSelectedDay,\n  isFirstSelectedDay,\n  isHoveringRight,\n  rangeIsDifferent\n}) {\n  const i18n = useI18n();\n  const dayNode = useRef(null);\n  const hoverValue = lastDayOfMonth || day;\n  useEffect(() => {\n    if (focused && dayNode.current) {\n      dayNode.current.focus();\n    }\n  }, [focused]);\n\n  if (!day) {\n    return /*#__PURE__*/React$1.createElement(\"td\", {\n      className: styles.EmptyDayCell,\n      onMouseOver: () => onHover(hoverValue)\n    });\n  }\n\n  const handleClick = onClick && !disabled ? onClick.bind(null, day) : noop;\n  const today = isSameDay(new Date(), day);\n  const dayCellClassName = classNames(styles.DayCell, selected && styles['DayCell-selected'], (inRange || inHoveringRange) && !disabled && styles['DayCell-inRange'], isLastSelectedDay && styles['DayCell-lastInRange'], isFirstSelectedDay && styles['DayCell-firstInRange'], isHoveringRight && styles['DayCell-hoverRight'], rangeIsDifferent && styles['DayCell-hasRange']);\n  const dayClassName = classNames(styles.Day, selected && styles['Day-selected'], disabled && styles['Day-disabled'], today && styles['Day-today'], (inRange || inHoveringRange) && !disabled && styles['Day-inRange'], isLastSelectedDay && styles['Day-lastInRange'], isFirstSelectedDay && styles['Day-firstInRange'], isHoveringRight && styles['Day-hoverRight'], rangeIsDifferent && styles['Day-hasRange']);\n  const date = day.getDate();\n  const tabIndex = (focused || selected || today || date === 1) && !disabled ? 0 : -1;\n  const ariaLabel = [`${today ? i18n.translate('Polaris.DatePicker.today') : ''}`, `${i18n.translate(`Polaris.DatePicker.months.${monthName(day.getMonth())}`)} `, `${date} `, `${day.getFullYear()}`].join('');\n  return /*#__PURE__*/React$1.createElement(\"td\", {\n    className: dayCellClassName\n  }, /*#__PURE__*/React$1.createElement(\"button\", {\n    onFocus: () => onFocus(day),\n    type: \"button\",\n    ref: dayNode,\n    tabIndex: tabIndex,\n    className: dayClassName,\n    onMouseOver: () => onHover(hoverValue),\n    onClick: handleClick,\n    \"aria-label\": ariaLabel,\n    \"aria-disabled\": disabled,\n    \"aria-pressed\": selected\n  }, date));\n});\n\nfunction noop() {}\n\nexport { Day };\n"]},"metadata":{},"sourceType":"module"}