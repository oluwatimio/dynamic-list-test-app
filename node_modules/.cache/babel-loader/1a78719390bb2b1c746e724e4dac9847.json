{"ast":null,"code":"import React$1 from 'react';\nimport { clamp as clamp$1 } from '../../../../utilities/clamp.js';\nimport { useFeatures } from '../../../../utilities/features/hooks.js';\nimport { classNames } from '../../../../utilities/css.js';\nimport { Labelled as Labelled$1, helpTextID } from '../../../Labelled/Labelled.js';\nimport { invertNumber as invertNumber$1 } from '../../utilities/invertNumber.js';\nimport { CSS_VAR_PREFIX } from '../../utilities/index.js';\nimport styles from './SingleThumb.scss.js';\n\nfunction SingleThumb(props) {\n  const {\n    id,\n    error,\n    helpText,\n    value,\n    min,\n    max,\n    disabled,\n    output,\n    prefix,\n    suffix,\n    label,\n    labelAction,\n    labelHidden,\n    step,\n    onBlur,\n    onFocus\n  } = props;\n  const {\n    newDesignLanguage\n  } = useFeatures();\n  const clampedValue = clamp$1(value, min, max);\n  const describedBy = [];\n\n  if (error) {\n    describedBy.push(`${id}Error`);\n  }\n\n  if (helpText) {\n    describedBy.push(helpTextID(id));\n  }\n\n  const ariaDescribedBy = describedBy.length ? describedBy.join(' ') : undefined;\n  const sliderProgress = (clampedValue - min) * 100 / (max - min);\n  const outputFactor = invertNumber$1((sliderProgress - 50) / 100);\n  const cssVars = {\n    [`${CSS_VAR_PREFIX}min`]: min,\n    [`${CSS_VAR_PREFIX}max`]: max,\n    [`${CSS_VAR_PREFIX}current`]: clampedValue,\n    [`${CSS_VAR_PREFIX}progress`]: `${sliderProgress}%`,\n    [`${CSS_VAR_PREFIX}output-factor`]: `${outputFactor}`\n  };\n  const outputMarkup = !disabled && output && /*#__PURE__*/React$1.createElement(\"output\", {\n    htmlFor: id,\n    className: styles.Output\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.OutputBubble\n  }, /*#__PURE__*/React$1.createElement(\"span\", {\n    className: styles.OutputText\n  }, clampedValue)));\n  const prefixMarkup = prefix && /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Prefix\n  }, prefix);\n  const suffixMarkup = suffix && /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Suffix\n  }, suffix);\n  const className = classNames(styles.SingleThumb, error && styles.error, disabled && styles.disabled);\n  const inputClassNames = classNames(styles.Input, newDesignLanguage && styles.newDesignLanguage);\n  return /*#__PURE__*/React$1.createElement(Labelled$1, {\n    id: id,\n    label: label,\n    error: error,\n    action: labelAction,\n    labelHidden: labelHidden,\n    helpText: helpText\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: className,\n    style: cssVars\n  }, prefixMarkup, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.InputWrapper\n  }, /*#__PURE__*/React$1.createElement(\"input\", {\n    type: \"range\",\n    className: inputClassNames,\n    id: id,\n    name: id,\n    min: min,\n    max: max,\n    step: step,\n    value: clampedValue,\n    disabled: disabled,\n    onChange: handleChange,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": clampedValue,\n    \"aria-invalid\": Boolean(error),\n    \"aria-describedby\": ariaDescribedBy\n  }), outputMarkup), suffixMarkup));\n\n  function handleChange(event) {\n    const {\n      onChange\n    } = props;\n    onChange && onChange(parseFloat(event.currentTarget.value), id);\n  }\n}\n\nexport { SingleThumb };","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/polaris/dist/esm/components/RangeSlider/components/SingleThumb/SingleThumb.js"],"names":["React$1","clamp","clamp$1","useFeatures","classNames","Labelled","Labelled$1","helpTextID","invertNumber","invertNumber$1","CSS_VAR_PREFIX","styles","SingleThumb","props","id","error","helpText","value","min","max","disabled","output","prefix","suffix","label","labelAction","labelHidden","step","onBlur","onFocus","newDesignLanguage","clampedValue","describedBy","push","ariaDescribedBy","length","join","undefined","sliderProgress","outputFactor","cssVars","outputMarkup","createElement","htmlFor","className","Output","OutputBubble","OutputText","prefixMarkup","Prefix","suffixMarkup","Suffix","inputClassNames","Input","action","style","InputWrapper","type","name","onChange","handleChange","Boolean","event","parseFloat","currentTarget"],"mappings":"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","sourcesContent":["import React$1 from 'react';\nimport { clamp as clamp$1 } from '../../../../utilities/clamp.js';\nimport { useFeatures } from '../../../../utilities/features/hooks.js';\nimport { classNames } from '../../../../utilities/css.js';\nimport { Labelled as Labelled$1, helpTextID } from '../../../Labelled/Labelled.js';\nimport { invertNumber as invertNumber$1 } from '../../utilities/invertNumber.js';\nimport { CSS_VAR_PREFIX } from '../../utilities/index.js';\nimport styles from './SingleThumb.scss.js';\n\nfunction SingleThumb(props) {\n  const {\n    id,\n    error,\n    helpText,\n    value,\n    min,\n    max,\n    disabled,\n    output,\n    prefix,\n    suffix,\n    label,\n    labelAction,\n    labelHidden,\n    step,\n    onBlur,\n    onFocus\n  } = props;\n  const {\n    newDesignLanguage\n  } = useFeatures();\n  const clampedValue = clamp$1(value, min, max);\n  const describedBy = [];\n\n  if (error) {\n    describedBy.push(`${id}Error`);\n  }\n\n  if (helpText) {\n    describedBy.push(helpTextID(id));\n  }\n\n  const ariaDescribedBy = describedBy.length ? describedBy.join(' ') : undefined;\n  const sliderProgress = (clampedValue - min) * 100 / (max - min);\n  const outputFactor = invertNumber$1((sliderProgress - 50) / 100);\n  const cssVars = {\n    [`${CSS_VAR_PREFIX}min`]: min,\n    [`${CSS_VAR_PREFIX}max`]: max,\n    [`${CSS_VAR_PREFIX}current`]: clampedValue,\n    [`${CSS_VAR_PREFIX}progress`]: `${sliderProgress}%`,\n    [`${CSS_VAR_PREFIX}output-factor`]: `${outputFactor}`\n  };\n  const outputMarkup = !disabled && output && /*#__PURE__*/React$1.createElement(\"output\", {\n    htmlFor: id,\n    className: styles.Output\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.OutputBubble\n  }, /*#__PURE__*/React$1.createElement(\"span\", {\n    className: styles.OutputText\n  }, clampedValue)));\n  const prefixMarkup = prefix && /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Prefix\n  }, prefix);\n  const suffixMarkup = suffix && /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Suffix\n  }, suffix);\n  const className = classNames(styles.SingleThumb, error && styles.error, disabled && styles.disabled);\n  const inputClassNames = classNames(styles.Input, newDesignLanguage && styles.newDesignLanguage);\n  return /*#__PURE__*/React$1.createElement(Labelled$1, {\n    id: id,\n    label: label,\n    error: error,\n    action: labelAction,\n    labelHidden: labelHidden,\n    helpText: helpText\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: className,\n    style: cssVars\n  }, prefixMarkup, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.InputWrapper\n  }, /*#__PURE__*/React$1.createElement(\"input\", {\n    type: \"range\",\n    className: inputClassNames,\n    id: id,\n    name: id,\n    min: min,\n    max: max,\n    step: step,\n    value: clampedValue,\n    disabled: disabled,\n    onChange: handleChange,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": clampedValue,\n    \"aria-invalid\": Boolean(error),\n    \"aria-describedby\": ariaDescribedBy\n  }), outputMarkup), suffixMarkup));\n\n  function handleChange(event) {\n    const {\n      onChange\n    } = props;\n    onChange && onChange(parseFloat(event.currentTarget.value), id);\n  }\n}\n\nexport { SingleThumb };\n"]},"metadata":{},"sourceType":"module"}