{"ast":null,"code":"import React$1 from 'react';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { classNames, variationName } from '../../utilities/css.js';\nimport styles from './ProgressBar.scss.js';\n\nfunction ProgressBar({\n  progress = 0,\n  size = 'medium'\n}) {\n  const i18n = useI18n();\n  const className = classNames(styles.ProgressBar, size && styles[variationName('size', size)]);\n  const warningMessage = i18n.translate(progress < 0 ? 'Polaris.ProgressBar.negativeWarningMessage' : 'Polaris.ProgressBar.exceedWarningMessage', {\n    progress\n  });\n  const parsedProgress = parseProgress(progress, warningMessage);\n  return /*#__PURE__*/React$1.createElement(\"div\", {\n    className: className\n  }, /*#__PURE__*/React$1.createElement(\"progress\", {\n    className: styles.Progress,\n    value: parsedProgress,\n    max: \"100\"\n  }), /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Indicator,\n    style: {\n      width: `${parsedProgress}%`\n    }\n  }, /*#__PURE__*/React$1.createElement(\"span\", {\n    className: styles.Label\n  }, parsedProgress, \"%\")));\n}\n\nfunction parseProgress(progress, warningMessage) {\n  let progressWidth;\n\n  if (progress < 0) {\n    if (process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(warningMessage);\n    }\n\n    progressWidth = 0;\n  } else if (progress > 100) {\n    if (process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(warningMessage);\n    }\n\n    progressWidth = 100;\n  } else {\n    progressWidth = progress;\n  }\n\n  return progressWidth;\n}\n\nexport { ProgressBar };","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/polaris/dist/esm/components/ProgressBar/ProgressBar.js"],"names":["React$1","useI18n","classNames","variationName","styles","ProgressBar","progress","size","i18n","className","warningMessage","translate","parsedProgress","parseProgress","createElement","Progress","value","max","Indicator","style","width","Label","progressWidth","process","env","NODE_ENV","console","warn"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,wBAA1C;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,SAASC,WAAT,CAAqB;AACnBC,EAAAA,QAAQ,GAAG,CADQ;AAEnBC,EAAAA,IAAI,GAAG;AAFY,CAArB,EAGG;AACD,QAAMC,IAAI,GAAGP,OAAO,EAApB;AACA,QAAMQ,SAAS,GAAGP,UAAU,CAACE,MAAM,CAACC,WAAR,EAAqBE,IAAI,IAAIH,MAAM,CAACD,aAAa,CAAC,MAAD,EAASI,IAAT,CAAd,CAAnC,CAA5B;AACA,QAAMG,cAAc,GAAGF,IAAI,CAACG,SAAL,CAAeL,QAAQ,GAAG,CAAX,GAAe,4CAAf,GAA8D,0CAA7E,EAAyH;AAC9IA,IAAAA;AAD8I,GAAzH,CAAvB;AAGA,QAAMM,cAAc,GAAGC,aAAa,CAACP,QAAD,EAAWI,cAAX,CAApC;AACA,SAAO,aAAaV,OAAO,CAACc,aAAR,CAAsB,KAAtB,EAA6B;AAC/CL,IAAAA,SAAS,EAAEA;AADoC,GAA7B,EAEjB,aAAaT,OAAO,CAACc,aAAR,CAAsB,UAAtB,EAAkC;AAChDL,IAAAA,SAAS,EAAEL,MAAM,CAACW,QAD8B;AAEhDC,IAAAA,KAAK,EAAEJ,cAFyC;AAGhDK,IAAAA,GAAG,EAAE;AAH2C,GAAlC,CAFI,EAMhB,aAAajB,OAAO,CAACc,aAAR,CAAsB,KAAtB,EAA6B;AAC5CL,IAAAA,SAAS,EAAEL,MAAM,CAACc,SAD0B;AAE5CC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAG,GAAER,cAAe;AADpB;AAFqC,GAA7B,EAKd,aAAaZ,OAAO,CAACc,aAAR,CAAsB,MAAtB,EAA8B;AAC5CL,IAAAA,SAAS,EAAEL,MAAM,CAACiB;AAD0B,GAA9B,EAEbT,cAFa,EAEG,GAFH,CALC,CANG,CAApB;AAcD;;AAED,SAASC,aAAT,CAAuBP,QAAvB,EAAiCI,cAAjC,EAAiD;AAC/C,MAAIY,aAAJ;;AAEA,MAAIhB,QAAQ,GAAG,CAAf,EAAkB;AAChB,QAAIiB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAajB,cAAb;AACD;;AAEDY,IAAAA,aAAa,GAAG,CAAhB;AACD,GAPD,MAOO,IAAIhB,QAAQ,GAAG,GAAf,EAAoB;AACzB,QAAIiB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAajB,cAAb;AACD;;AAEDY,IAAAA,aAAa,GAAG,GAAhB;AACD,GAPM,MAOA;AACLA,IAAAA,aAAa,GAAGhB,QAAhB;AACD;;AAED,SAAOgB,aAAP;AACD;;AAED,SAASjB,WAAT","sourcesContent":["import React$1 from 'react';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { classNames, variationName } from '../../utilities/css.js';\nimport styles from './ProgressBar.scss.js';\n\nfunction ProgressBar({\n  progress = 0,\n  size = 'medium'\n}) {\n  const i18n = useI18n();\n  const className = classNames(styles.ProgressBar, size && styles[variationName('size', size)]);\n  const warningMessage = i18n.translate(progress < 0 ? 'Polaris.ProgressBar.negativeWarningMessage' : 'Polaris.ProgressBar.exceedWarningMessage', {\n    progress\n  });\n  const parsedProgress = parseProgress(progress, warningMessage);\n  return /*#__PURE__*/React$1.createElement(\"div\", {\n    className: className\n  }, /*#__PURE__*/React$1.createElement(\"progress\", {\n    className: styles.Progress,\n    value: parsedProgress,\n    max: \"100\"\n  }), /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Indicator,\n    style: {\n      width: `${parsedProgress}%`\n    }\n  }, /*#__PURE__*/React$1.createElement(\"span\", {\n    className: styles.Label\n  }, parsedProgress, \"%\")));\n}\n\nfunction parseProgress(progress, warningMessage) {\n  let progressWidth;\n\n  if (progress < 0) {\n    if (process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(warningMessage);\n    }\n\n    progressWidth = 0;\n  } else if (progress > 100) {\n    if (process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(warningMessage);\n    }\n\n    progressWidth = 100;\n  } else {\n    progressWidth = progress;\n  }\n\n  return progressWidth;\n}\n\nexport { ProgressBar };\n"]},"metadata":{},"sourceType":"module"}