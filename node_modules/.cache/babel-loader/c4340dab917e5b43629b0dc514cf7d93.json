{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/timi/Desktop/typescript-test/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDynamicList, useForm } from '@shopify/react-form';\nimport { TextField, AppProvider, Button, Form, FormLayout, PageActions, Page } from '@shopify/polaris';\nimport '@shopify/polaris/dist/styles.css';\n\nfunction App() {\n  _s();\n\n  const emptyCard = () => ({\n    cardNumber: '',\n    cvv: ''\n  });\n\n  const {\n    fields,\n    addField,\n    removeField\n  } = useDynamicList([{\n    cardNumber: '4234 6738 8920 8902',\n    cvv: '422'\n  }], emptyCard);\n  const {\n    submit,\n    dirty,\n    submitting\n  } = useForm({\n    fields: {\n      list: fields\n    },\n    onSubmit: async fieldValues => {\n      console.log(fieldValues);\n      return {\n        status: 'success'\n      };\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(AppProvider, {\n    i18n: {},\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      title: \"Customer Payment Info\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submit,\n        children: [/*#__PURE__*/_jsxDEV(FormLayout, {\n          children: [fields.map((field, index) => /*#__PURE__*/_jsxDEV(FormLayout.Group, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              placeholder: \"Card Number\",\n              label: \"Hi\",\n              value: field.title.value,\n              onChange: field.title.onChange,\n              type: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              placeholder: \"CVV\",\n              label: \"Hi\",\n              value: field.description.value,\n              onChange: field.description.onChange,\n              type: \"number\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => removeField(index),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => addField(),\n            children: \"Add Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PageActions, {\n          primaryAction: {\n            content: 'Save',\n            disabled: !dirty,\n            loading: submitting,\n            accessibilityLabel: 'Save',\n            onAction: submit\n          },\n          secondaryActions: [{\n            content: 'Delete',\n            destructive: true,\n            onAction: () => {},\n            accessibilityLabel: 'Delete'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"8HAEw9kBRlrbwRyGukxQDeSocjM=\", false, function () {\n  return [useDynamicList, useForm];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/src/App.tsx"],"names":["React","useDynamicList","useForm","TextField","AppProvider","Button","Form","FormLayout","PageActions","Page","App","emptyCard","cardNumber","cvv","fields","addField","removeField","submit","dirty","submitting","list","onSubmit","fieldValues","console","log","status","map","field","index","title","value","onChange","description","content","disabled","loading","accessibilityLabel","onAction","destructive"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {useDynamicList, useForm, useList} from '@shopify/react-form';\nimport logo from './logo.svg';\nimport {TextField, AppProvider, Button, Form, FormLayout, PageActions, Page} from '@shopify/polaris'\nimport '@shopify/polaris/dist/styles.css';\n\ninterface Card {\n  cardNumber: string;\n  cvv: string\n}\nfunction App() {\n\n  const emptyCard = (): Card => ({\n    cardNumber: '',\n    cvv: '',\n  })\n  const {fields, addField, removeField} = useDynamicList([{cardNumber: '4234 6738 8920 8902', cvv: '422'}], emptyCard);\n  const {submit, dirty, submitting} = useForm({\n    fields: {\n      list: fields\n    },\n    onSubmit: async fieldValues => {\n      console.log(fieldValues);\n\n      return {status: 'success'};\n    }\n  })\n  return (\n      <AppProvider i18n={{}}>\n      <Page title=\"Customer Payment Info\">\n        <Form onSubmit={submit}>\n          <FormLayout>\n            {fields.map((field, index) => (\n                    <FormLayout.Group key={index}>\n                      <TextField placeholder=\"Card Number\" label=\"Hi\" value={field.title.value} onChange={field.title.onChange} type=\"number\"/>\n                      <TextField placeholder=\"CVV\" label=\"Hi\" value={field.description.value} onChange={field.description.onChange} key={index} type=\"number\"/>\n                      <Button onClick={() => removeField(index)}>Remove</Button>\n                    </FormLayout.Group>\n            ))}\n            <Button onClick={() => addField()}>Add Card</Button>\n          </FormLayout>\n          <PageActions\n            primaryAction={{\n              content: 'Save',\n              disabled: !dirty,\n              loading: submitting,\n              accessibilityLabel: 'Save',\n              onAction: submit,\n            }}\n            secondaryActions={[\n              {\n                content: 'Delete',\n                destructive: true,\n                onAction: () => {},\n                accessibilityLabel: 'Delete',\n              },\n            ]}\n          />\n        </Form>\n      </Page>\n      </AppProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}