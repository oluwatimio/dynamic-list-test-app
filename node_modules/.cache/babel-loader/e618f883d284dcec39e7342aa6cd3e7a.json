{"ast":null,"code":"import { objectWithoutProperties as _objectWithoutProperties, objectSpread2 as _objectSpread2 } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React$1, { useContext, useMemo, useEffect } from 'react';\nimport DefaultThemeColors$1 from '@shopify/polaris-tokens/dist-modern/theme/base.json';\nimport { ThemeContext } from '../../utilities/theme/context.js';\nimport { buildCustomProperties, buildThemeContext, toString } from '../../utilities/theme/utils.js';\nimport { Tokens } from '../../utilities/theme/tokens.js';\nimport { useFeatures } from '../../utilities/features/hooks.js';\n\nfunction ThemeProvider({\n  theme: themeConfig,\n  children\n}) {\n  const {\n    newDesignLanguage\n  } = useFeatures();\n  const parentContext = useContext(ThemeContext);\n  const isParentThemeProvider = parentContext === undefined;\n  const parentColorScheme = parentContext && parentContext.colorScheme && parentContext.colorScheme;\n  const parentColors = parentContext && parentContext.colors && parentContext.colors;\n  const [customProperties, theme] = useMemo(() => {\n    const {\n      colors,\n      colorScheme\n    } = themeConfig,\n          rest = _objectWithoutProperties(themeConfig, [\"colors\", \"colorScheme\"]);\n\n    const processedThemeConfig = _objectSpread2(_objectSpread2(_objectSpread2({}, rest), {\n      colorScheme: getColorScheme(colorScheme, parentColorScheme)\n    }), {}, {\n      colors: _objectSpread2(_objectSpread2(_objectSpread2({}, isParentThemeProvider && DefaultThemeColors$1), parentColors != null && parentColors), colors)\n    });\n\n    const customProperties = buildCustomProperties(processedThemeConfig, newDesignLanguage, Tokens);\n\n    const theme = _objectSpread2(_objectSpread2({}, buildThemeContext(processedThemeConfig, newDesignLanguage ? customProperties : undefined)), {}, {\n      textColor: customProperties['--p-text'] || ''\n    });\n\n    return [customProperties, theme];\n  }, [isParentThemeProvider, newDesignLanguage, parentColorScheme, parentColors, themeConfig]); // We want these values to be empty string instead of `undefined` when not set.\n  // Otherwise, setting a style property to `undefined` does not remove it from the DOM.\n\n  const backgroundColor = customProperties['--p-background'] || '';\n  const color = customProperties['--p-text'] || '';\n  useEffect(() => {\n    if (isParentThemeProvider) {\n      document.body.style.backgroundColor = backgroundColor;\n      document.body.style.color = color;\n    }\n  }, [backgroundColor, color, isParentThemeProvider]);\n  let style;\n\n  if (isParentThemeProvider) {\n    style = customProperties;\n  } else if (!isParentThemeProvider && parentContext.cssCustomProperties !== toString(customProperties)) {\n    style = _objectSpread2(_objectSpread2({}, customProperties), {\n      color\n    });\n  } else {\n    style = {\n      color\n    };\n  }\n\n  return /*#__PURE__*/React$1.createElement(ThemeContext.Provider, {\n    value: theme\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    style: style\n  }, children));\n}\n\nfunction isInverseColorScheme(colorScheme) {\n  return colorScheme === 'inverse';\n}\n\nfunction getColorScheme(colorScheme, parentColorScheme) {\n  if (colorScheme == null) {\n    return parentColorScheme || 'light';\n  } else if (isInverseColorScheme(colorScheme)) {\n    return parentColorScheme === 'dark' || parentColorScheme === undefined ? 'light' : 'dark';\n  } else {\n    return colorScheme;\n  }\n}\n\nexport { ThemeProvider };","map":{"version":3,"sources":["/Users/timi/Desktop/typescript-test/node_modules/@shopify/polaris/dist/esm/components/ThemeProvider/ThemeProvider.js"],"names":["objectWithoutProperties","_objectWithoutProperties","objectSpread2","_objectSpread2","React$1","useContext","useMemo","useEffect","DefaultThemeColors$1","ThemeContext","buildCustomProperties","buildThemeContext","toString","Tokens","useFeatures","ThemeProvider","theme","themeConfig","children","newDesignLanguage","parentContext","isParentThemeProvider","undefined","parentColorScheme","colorScheme","parentColors","colors","customProperties","rest","processedThemeConfig","getColorScheme","textColor","backgroundColor","color","document","body","style","cssCustomProperties","createElement","Provider","value","isInverseColorScheme"],"mappings":"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","sourcesContent":["import { objectWithoutProperties as _objectWithoutProperties, objectSpread2 as _objectSpread2 } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React$1, { useContext, useMemo, useEffect } from 'react';\nimport DefaultThemeColors$1 from '@shopify/polaris-tokens/dist-modern/theme/base.json';\nimport { ThemeContext } from '../../utilities/theme/context.js';\nimport { buildCustomProperties, buildThemeContext, toString } from '../../utilities/theme/utils.js';\nimport { Tokens } from '../../utilities/theme/tokens.js';\nimport { useFeatures } from '../../utilities/features/hooks.js';\n\nfunction ThemeProvider({\n  theme: themeConfig,\n  children\n}) {\n  const {\n    newDesignLanguage\n  } = useFeatures();\n  const parentContext = useContext(ThemeContext);\n  const isParentThemeProvider = parentContext === undefined;\n  const parentColorScheme = parentContext && parentContext.colorScheme && parentContext.colorScheme;\n  const parentColors = parentContext && parentContext.colors && parentContext.colors;\n  const [customProperties, theme] = useMemo(() => {\n    const {\n      colors,\n      colorScheme\n    } = themeConfig,\n          rest = _objectWithoutProperties(themeConfig, [\"colors\", \"colorScheme\"]);\n\n    const processedThemeConfig = _objectSpread2(_objectSpread2(_objectSpread2({}, rest), {\n      colorScheme: getColorScheme(colorScheme, parentColorScheme)\n    }), {}, {\n      colors: _objectSpread2(_objectSpread2(_objectSpread2({}, isParentThemeProvider && DefaultThemeColors$1), parentColors != null && parentColors), colors)\n    });\n\n    const customProperties = buildCustomProperties(processedThemeConfig, newDesignLanguage, Tokens);\n\n    const theme = _objectSpread2(_objectSpread2({}, buildThemeContext(processedThemeConfig, newDesignLanguage ? customProperties : undefined)), {}, {\n      textColor: customProperties['--p-text'] || ''\n    });\n\n    return [customProperties, theme];\n  }, [isParentThemeProvider, newDesignLanguage, parentColorScheme, parentColors, themeConfig]); // We want these values to be empty string instead of `undefined` when not set.\n  // Otherwise, setting a style property to `undefined` does not remove it from the DOM.\n\n  const backgroundColor = customProperties['--p-background'] || '';\n  const color = customProperties['--p-text'] || '';\n  useEffect(() => {\n    if (isParentThemeProvider) {\n      document.body.style.backgroundColor = backgroundColor;\n      document.body.style.color = color;\n    }\n  }, [backgroundColor, color, isParentThemeProvider]);\n  let style;\n\n  if (isParentThemeProvider) {\n    style = customProperties;\n  } else if (!isParentThemeProvider && parentContext.cssCustomProperties !== toString(customProperties)) {\n    style = _objectSpread2(_objectSpread2({}, customProperties), {\n      color\n    });\n  } else {\n    style = {\n      color\n    };\n  }\n\n  return /*#__PURE__*/React$1.createElement(ThemeContext.Provider, {\n    value: theme\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    style: style\n  }, children));\n}\n\nfunction isInverseColorScheme(colorScheme) {\n  return colorScheme === 'inverse';\n}\n\nfunction getColorScheme(colorScheme, parentColorScheme) {\n  if (colorScheme == null) {\n    return parentColorScheme || 'light';\n  } else if (isInverseColorScheme(colorScheme)) {\n    return parentColorScheme === 'dark' || parentColorScheme === undefined ? 'light' : 'dark';\n  } else {\n    return colorScheme;\n  }\n}\n\nexport { ThemeProvider };\n"]},"metadata":{},"sourceType":"module"}